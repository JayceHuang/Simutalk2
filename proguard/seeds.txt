android.annotation.SuppressLint
android.annotation.SuppressLint: java.lang.String[] value()
android.annotation.TargetApi
android.annotation.TargetApi: int value()
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_ALL_MASK
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: AccessibilityServiceInfoCompat()
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String feedbackTypeToString(int)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String flagToString(int)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: void <clinit>()
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl: AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl()
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl: AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl()
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: AccessibilityServiceInfoCompatIcs()
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
android.support.v4.app.ActivityCompat
android.support.v4.app.ActivityCompat: ActivityCompat()
android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)
android.support.v4.app.ActivityCompatHoneycomb
android.support.v4.app.ActivityCompatHoneycomb: ActivityCompatHoneycomb()
android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)
android.support.v4.app.ActivityCompatHoneycomb: void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.BackStackRecord
android.support.v4.app.BackStackRecord: java.lang.String TAG
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentManagerImpl mManager
android.support.v4.app.BackStackRecord: int OP_NULL
android.support.v4.app.BackStackRecord: int OP_ADD
android.support.v4.app.BackStackRecord: int OP_REPLACE
android.support.v4.app.BackStackRecord: int OP_REMOVE
android.support.v4.app.BackStackRecord: int OP_HIDE
android.support.v4.app.BackStackRecord: int OP_SHOW
android.support.v4.app.BackStackRecord: int OP_DETACH
android.support.v4.app.BackStackRecord: int OP_ATTACH
android.support.v4.app.BackStackRecord: android.support.v4.app.BackStackRecord$Op mHead
android.support.v4.app.BackStackRecord: android.support.v4.app.BackStackRecord$Op mTail
android.support.v4.app.BackStackRecord: int mNumOp
android.support.v4.app.BackStackRecord: int mEnterAnim
android.support.v4.app.BackStackRecord: int mExitAnim
android.support.v4.app.BackStackRecord: int mPopEnterAnim
android.support.v4.app.BackStackRecord: int mPopExitAnim
android.support.v4.app.BackStackRecord: int mTransition
android.support.v4.app.BackStackRecord: int mTransitionStyle
android.support.v4.app.BackStackRecord: boolean mAddToBackStack
android.support.v4.app.BackStackRecord: boolean mAllowAddToBackStack
android.support.v4.app.BackStackRecord: java.lang.String mName
android.support.v4.app.BackStackRecord: boolean mCommitted
android.support.v4.app.BackStackRecord: int mIndex
android.support.v4.app.BackStackRecord: int mBreadCrumbTitleRes
android.support.v4.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText
android.support.v4.app.BackStackRecord: int mBreadCrumbShortTitleRes
android.support.v4.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText
android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.BackStackRecord: BackStackRecord(android.support.v4.app.FragmentManagerImpl)
android.support.v4.app.BackStackRecord: int getId()
android.support.v4.app.BackStackRecord: int getBreadCrumbTitleRes()
android.support.v4.app.BackStackRecord: int getBreadCrumbShortTitleRes()
android.support.v4.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()
android.support.v4.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()
android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String)
android.support.v4.app.BackStackRecord: void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setTransition(int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setTransitionStyle(int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)
android.support.v4.app.BackStackRecord: boolean isAddToBackStackAllowed()
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction disallowAddToBackStack()
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int)
android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)
android.support.v4.app.BackStackRecord: int commit()
android.support.v4.app.BackStackRecord: int commitAllowingStateLoss()
android.support.v4.app.BackStackRecord: int commitInternal(boolean)
android.support.v4.app.BackStackRecord: void run()
android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)
android.support.v4.app.BackStackRecord: java.lang.String getName()
android.support.v4.app.BackStackRecord: int getTransition()
android.support.v4.app.BackStackRecord: int getTransitionStyle()
android.support.v4.app.BackStackRecord: boolean isEmpty()
android.support.v4.app.BackStackRecord$Op
android.support.v4.app.BackStackRecord$Op: android.support.v4.app.BackStackRecord$Op next
android.support.v4.app.BackStackRecord$Op: android.support.v4.app.BackStackRecord$Op prev
android.support.v4.app.BackStackRecord$Op: int cmd
android.support.v4.app.BackStackRecord$Op: android.support.v4.app.Fragment fragment
android.support.v4.app.BackStackRecord$Op: int enterAnim
android.support.v4.app.BackStackRecord$Op: int exitAnim
android.support.v4.app.BackStackRecord$Op: int popEnterAnim
android.support.v4.app.BackStackRecord$Op: int popExitAnim
android.support.v4.app.BackStackRecord$Op: java.util.ArrayList removed
android.support.v4.app.BackStackRecord$Op: BackStackRecord$Op()
android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: int[] mOps
android.support.v4.app.BackStackState: int mTransition
android.support.v4.app.BackStackState: int mTransitionStyle
android.support.v4.app.BackStackState: java.lang.String mName
android.support.v4.app.BackStackState: int mIndex
android.support.v4.app.BackStackState: int mBreadCrumbTitleRes
android.support.v4.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
android.support.v4.app.BackStackState: int mBreadCrumbShortTitleRes
android.support.v4.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.BackStackState: BackStackState(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)
android.support.v4.app.BackStackState: BackStackState(android.os.Parcel)
android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)
android.support.v4.app.BackStackState: int describeContents()
android.support.v4.app.BackStackState: void writeToParcel(android.os.Parcel,int)
android.support.v4.app.BackStackState: void <clinit>()
android.support.v4.app.BackStackState$1
android.support.v4.app.BackStackState$1: BackStackState$1()
android.support.v4.app.BackStackState$1: android.support.v4.app.BackStackState createFromParcel(android.os.Parcel)
android.support.v4.app.BackStackState$1: android.support.v4.app.BackStackState[] newArray(int)
android.support.v4.app.BackStackState$1: java.lang.Object[] newArray(int)
android.support.v4.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.app.DialogFragment
android.support.v4.app.DialogFragment: int STYLE_NORMAL
android.support.v4.app.DialogFragment: int STYLE_NO_TITLE
android.support.v4.app.DialogFragment: int STYLE_NO_FRAME
android.support.v4.app.DialogFragment: int STYLE_NO_INPUT
android.support.v4.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
android.support.v4.app.DialogFragment: java.lang.String SAVED_STYLE
android.support.v4.app.DialogFragment: java.lang.String SAVED_THEME
android.support.v4.app.DialogFragment: java.lang.String SAVED_CANCELABLE
android.support.v4.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
android.support.v4.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
android.support.v4.app.DialogFragment: int mStyle
android.support.v4.app.DialogFragment: int mTheme
android.support.v4.app.DialogFragment: boolean mCancelable
android.support.v4.app.DialogFragment: boolean mShowsDialog
android.support.v4.app.DialogFragment: int mBackStackId
android.support.v4.app.DialogFragment: android.app.Dialog mDialog
android.support.v4.app.DialogFragment: boolean mViewDestroyed
android.support.v4.app.DialogFragment: boolean mDismissed
android.support.v4.app.DialogFragment: boolean mShownByMe
android.support.v4.app.DialogFragment: DialogFragment()
android.support.v4.app.DialogFragment: void setStyle(int,int)
android.support.v4.app.DialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)
android.support.v4.app.DialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)
android.support.v4.app.DialogFragment: void dismiss()
android.support.v4.app.DialogFragment: void dismissAllowingStateLoss()
android.support.v4.app.DialogFragment: void dismissInternal(boolean)
android.support.v4.app.DialogFragment: android.app.Dialog getDialog()
android.support.v4.app.DialogFragment: int getTheme()
android.support.v4.app.DialogFragment: void setCancelable(boolean)
android.support.v4.app.DialogFragment: boolean isCancelable()
android.support.v4.app.DialogFragment: void setShowsDialog(boolean)
android.support.v4.app.DialogFragment: boolean getShowsDialog()
android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)
android.support.v4.app.DialogFragment: void onDetach()
android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)
android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
android.support.v4.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
android.support.v4.app.DialogFragment: void onCancel(android.content.DialogInterface)
android.support.v4.app.DialogFragment: void onDismiss(android.content.DialogInterface)
android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)
android.support.v4.app.DialogFragment: void onStart()
android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.DialogFragment: void onStop()
android.support.v4.app.DialogFragment: void onDestroyView()
android.support.v4.app.Fragment
android.support.v4.app.Fragment: java.util.HashMap sClassMap
android.support.v4.app.Fragment: int INITIALIZING
android.support.v4.app.Fragment: int CREATED
android.support.v4.app.Fragment: int ACTIVITY_CREATED
android.support.v4.app.Fragment: int STOPPED
android.support.v4.app.Fragment: int STARTED
android.support.v4.app.Fragment: int RESUMED
android.support.v4.app.Fragment: int mState
android.support.v4.app.Fragment: android.view.View mAnimatingAway
android.support.v4.app.Fragment: int mStateAfterAnimating
android.support.v4.app.Fragment: android.os.Bundle mSavedFragmentState
android.support.v4.app.Fragment: android.util.SparseArray mSavedViewState
android.support.v4.app.Fragment: int mIndex
android.support.v4.app.Fragment: java.lang.String mWho
android.support.v4.app.Fragment: android.os.Bundle mArguments
android.support.v4.app.Fragment: android.support.v4.app.Fragment mTarget
android.support.v4.app.Fragment: int mTargetIndex
android.support.v4.app.Fragment: int mTargetRequestCode
android.support.v4.app.Fragment: boolean mAdded
android.support.v4.app.Fragment: boolean mRemoving
android.support.v4.app.Fragment: boolean mResumed
android.support.v4.app.Fragment: boolean mFromLayout
android.support.v4.app.Fragment: boolean mInLayout
android.support.v4.app.Fragment: boolean mRestored
android.support.v4.app.Fragment: int mBackStackNesting
android.support.v4.app.Fragment: android.support.v4.app.FragmentManagerImpl mFragmentManager
android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity mActivity
android.support.v4.app.Fragment: int mFragmentId
android.support.v4.app.Fragment: int mContainerId
android.support.v4.app.Fragment: java.lang.String mTag
android.support.v4.app.Fragment: boolean mHidden
android.support.v4.app.Fragment: boolean mDetached
android.support.v4.app.Fragment: boolean mRetainInstance
android.support.v4.app.Fragment: boolean mRetaining
android.support.v4.app.Fragment: boolean mHasMenu
android.support.v4.app.Fragment: boolean mMenuVisible
android.support.v4.app.Fragment: boolean mCalled
android.support.v4.app.Fragment: int mNextAnim
android.support.v4.app.Fragment: android.view.ViewGroup mContainer
android.support.v4.app.Fragment: android.view.View mView
android.support.v4.app.Fragment: android.view.View mInnerView
android.support.v4.app.Fragment: boolean mDeferStart
android.support.v4.app.Fragment: boolean mUserVisibleHint
android.support.v4.app.Fragment: android.support.v4.app.LoaderManagerImpl mLoaderManager
android.support.v4.app.Fragment: boolean mLoadersStarted
android.support.v4.app.Fragment: boolean mCheckedForLoaderManager
android.support.v4.app.Fragment: Fragment()
android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String)
android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
android.support.v4.app.Fragment: void restoreViewState()
android.support.v4.app.Fragment: void setIndex(int)
android.support.v4.app.Fragment: boolean isInBackStack()
android.support.v4.app.Fragment: boolean equals(java.lang.Object)
android.support.v4.app.Fragment: int hashCode()
android.support.v4.app.Fragment: java.lang.String toString()
android.support.v4.app.Fragment: int getId()
android.support.v4.app.Fragment: java.lang.String getTag()
android.support.v4.app.Fragment: void setArguments(android.os.Bundle)
android.support.v4.app.Fragment: android.os.Bundle getArguments()
android.support.v4.app.Fragment: void setInitialSavedState(android.support.v4.app.Fragment$SavedState)
android.support.v4.app.Fragment: void setTargetFragment(android.support.v4.app.Fragment,int)
android.support.v4.app.Fragment: android.support.v4.app.Fragment getTargetFragment()
android.support.v4.app.Fragment: int getTargetRequestCode()
android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()
android.support.v4.app.Fragment: android.content.res.Resources getResources()
android.support.v4.app.Fragment: java.lang.CharSequence getText(int)
android.support.v4.app.Fragment: java.lang.String getString(int)
android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])
android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()
android.support.v4.app.Fragment: boolean isAdded()
android.support.v4.app.Fragment: boolean isDetached()
android.support.v4.app.Fragment: boolean isRemoving()
android.support.v4.app.Fragment: boolean isInLayout()
android.support.v4.app.Fragment: boolean isResumed()
android.support.v4.app.Fragment: boolean isVisible()
android.support.v4.app.Fragment: boolean isHidden()
android.support.v4.app.Fragment: void onHiddenChanged(boolean)
android.support.v4.app.Fragment: void setRetainInstance(boolean)
android.support.v4.app.Fragment: boolean getRetainInstance()
android.support.v4.app.Fragment: void setHasOptionsMenu(boolean)
android.support.v4.app.Fragment: void setMenuVisibility(boolean)
android.support.v4.app.Fragment: void setUserVisibleHint(boolean)
android.support.v4.app.Fragment: boolean getUserVisibleHint()
android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()
android.support.v4.app.Fragment: void startActivity(android.content.Intent)
android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)
android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)
android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
android.support.v4.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
android.support.v4.app.Fragment: void onAttach(android.app.Activity)
android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
android.support.v4.app.Fragment: void onCreate(android.os.Bundle)
android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
android.support.v4.app.Fragment: android.view.View getView()
android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)
android.support.v4.app.Fragment: void onStart()
android.support.v4.app.Fragment: void onResume()
android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.Fragment: void onPause()
android.support.v4.app.Fragment: void onStop()
android.support.v4.app.Fragment: void onLowMemory()
android.support.v4.app.Fragment: void onDestroyView()
android.support.v4.app.Fragment: void onDestroy()
android.support.v4.app.Fragment: void initState()
android.support.v4.app.Fragment: void onDetach()
android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
android.support.v4.app.Fragment: void onDestroyOptionsMenu()
android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
android.support.v4.app.Fragment: void registerForContextMenu(android.view.View)
android.support.v4.app.Fragment: void unregisterForContextMenu(android.view.View)
android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.Fragment: void performStart()
android.support.v4.app.Fragment: void performStop()
android.support.v4.app.Fragment: void performReallyStop()
android.support.v4.app.Fragment: void performDestroyView()
android.support.v4.app.Fragment: void <clinit>()
android.support.v4.app.Fragment$InstantiationException
android.support.v4.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Bundle mState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment$SavedState: Fragment$SavedState(android.os.Bundle)
android.support.v4.app.Fragment$SavedState: Fragment$SavedState(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.app.Fragment$SavedState: int describeContents()
android.support.v4.app.Fragment$SavedState: void writeToParcel(android.os.Parcel,int)
android.support.v4.app.Fragment$SavedState: void <clinit>()
android.support.v4.app.Fragment$SavedState$1
android.support.v4.app.Fragment$SavedState$1: Fragment$SavedState$1()
android.support.v4.app.Fragment$SavedState$1: android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel)
android.support.v4.app.Fragment$SavedState$1: android.support.v4.app.Fragment$SavedState[] newArray(int)
android.support.v4.app.Fragment$SavedState$1: java.lang.Object[] newArray(int)
android.support.v4.app.Fragment$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.app.FragmentActivity
android.support.v4.app.FragmentActivity: java.lang.String TAG
android.support.v4.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
android.support.v4.app.FragmentActivity: int HONEYCOMB
android.support.v4.app.FragmentActivity: int MSG_REALLY_STOPPED
android.support.v4.app.FragmentActivity: int MSG_RESUME_PENDING
android.support.v4.app.FragmentActivity: android.os.Handler mHandler
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManagerImpl mFragments
android.support.v4.app.FragmentActivity: boolean mCreated
android.support.v4.app.FragmentActivity: boolean mResumed
android.support.v4.app.FragmentActivity: boolean mStopped
android.support.v4.app.FragmentActivity: boolean mReallyStopped
android.support.v4.app.FragmentActivity: boolean mRetaining
android.support.v4.app.FragmentActivity: boolean mOptionsMenuInvalidated
android.support.v4.app.FragmentActivity: boolean mCheckedForLoaderManager
android.support.v4.app.FragmentActivity: boolean mLoadersStarted
android.support.v4.app.FragmentActivity: android.support.v4.util.SparseArrayCompat mAllLoaderManagers
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl mLoaderManager
android.support.v4.app.FragmentActivity: FragmentActivity()
android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
android.support.v4.app.FragmentActivity: void onBackPressed()
android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)
android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
android.support.v4.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
android.support.v4.app.FragmentActivity: void onDestroy()
android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)
android.support.v4.app.FragmentActivity: void onLowMemory()
android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
android.support.v4.app.FragmentActivity: void onPause()
android.support.v4.app.FragmentActivity: void onResume()
android.support.v4.app.FragmentActivity: void onPostResume()
android.support.v4.app.FragmentActivity: void onResumeFragments()
android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()
android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.FragmentActivity: void onStart()
android.support.v4.app.FragmentActivity: void onStop()
android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()
android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.FragmentActivity: void doReallyStop(boolean)
android.support.v4.app.FragmentActivity: void onReallyStop()
android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()
android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
android.support.v4.app.FragmentActivity: void invalidateSupportFragmentIndex(int)
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)
android.support.v4.app.FragmentActivity$1
android.support.v4.app.FragmentActivity$1: android.support.v4.app.FragmentActivity this$0
android.support.v4.app.FragmentActivity$1: FragmentActivity$1(android.support.v4.app.FragmentActivity)
android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)
android.support.v4.app.FragmentActivity$FragmentTag
android.support.v4.app.FragmentActivity$FragmentTag: int[] Fragment
android.support.v4.app.FragmentActivity$FragmentTag: int Fragment_id
android.support.v4.app.FragmentActivity$FragmentTag: int Fragment_name
android.support.v4.app.FragmentActivity$FragmentTag: int Fragment_tag
android.support.v4.app.FragmentActivity$FragmentTag: FragmentActivity$FragmentTag()
android.support.v4.app.FragmentActivity$FragmentTag: void <clinit>()
android.support.v4.app.FragmentActivity$NonConfigurationInstances
android.support.v4.app.FragmentActivity$NonConfigurationInstances: java.lang.Object activity
android.support.v4.app.FragmentActivity$NonConfigurationInstances: java.lang.Object custom
android.support.v4.app.FragmentActivity$NonConfigurationInstances: java.util.HashMap children
android.support.v4.app.FragmentActivity$NonConfigurationInstances: java.util.ArrayList fragments
android.support.v4.app.FragmentActivity$NonConfigurationInstances: android.support.v4.util.SparseArrayCompat loaders
android.support.v4.app.FragmentActivity$NonConfigurationInstances: FragmentActivity$NonConfigurationInstances()
android.support.v4.app.FragmentManager
android.support.v4.app.FragmentManager: int POP_BACK_STACK_INCLUSIVE
android.support.v4.app.FragmentManager: FragmentManager()
android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()
android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction openTransaction()
android.support.v4.app.FragmentManager: boolean executePendingTransactions()
android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)
android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)
android.support.v4.app.FragmentManager: void popBackStack()
android.support.v4.app.FragmentManager: boolean popBackStackImmediate()
android.support.v4.app.FragmentManager: void popBackStack(java.lang.String,int)
android.support.v4.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)
android.support.v4.app.FragmentManager: void popBackStack(int,int)
android.support.v4.app.FragmentManager: boolean popBackStackImmediate(int,int)
android.support.v4.app.FragmentManager: int getBackStackEntryCount()
android.support.v4.app.FragmentManager: android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
android.support.v4.app.FragmentManager: void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
android.support.v4.app.FragmentManager: void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
android.support.v4.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
android.support.v4.app.FragmentManager: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)
android.support.v4.app.FragmentManager: android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.FragmentManager: void enableDebugLogging(boolean)
android.support.v4.app.FragmentManager$BackStackEntry
android.support.v4.app.FragmentManager$BackStackEntry: int getId()
android.support.v4.app.FragmentManager$BackStackEntry: java.lang.String getName()
android.support.v4.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()
android.support.v4.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()
android.support.v4.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()
android.support.v4.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()
android.support.v4.app.FragmentManager$OnBackStackChangedListener
android.support.v4.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()
android.support.v4.app.FragmentManagerImpl
android.support.v4.app.FragmentManagerImpl: boolean DEBUG
android.support.v4.app.FragmentManagerImpl: java.lang.String TAG
android.support.v4.app.FragmentManagerImpl: boolean HONEYCOMB
android.support.v4.app.FragmentManagerImpl: java.lang.String TARGET_REQUEST_CODE_STATE_TAG
android.support.v4.app.FragmentManagerImpl: java.lang.String TARGET_STATE_TAG
android.support.v4.app.FragmentManagerImpl: java.lang.String VIEW_STATE_TAG
android.support.v4.app.FragmentManagerImpl: java.lang.String USER_VISIBLE_HINT_TAG
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mPendingActions
android.support.v4.app.FragmentManagerImpl: java.lang.Runnable[] mTmpActions
android.support.v4.app.FragmentManagerImpl: boolean mExecutingActions
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mActive
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mAdded
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mAvailIndices
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mBackStack
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners
android.support.v4.app.FragmentManagerImpl: int mCurState
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentActivity mActivity
android.support.v4.app.FragmentManagerImpl: boolean mNeedMenuInvalidate
android.support.v4.app.FragmentManagerImpl: boolean mStateSaved
android.support.v4.app.FragmentManagerImpl: boolean mDestroyed
android.support.v4.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause
android.support.v4.app.FragmentManagerImpl: boolean mHavePendingDeferredStart
android.support.v4.app.FragmentManagerImpl: android.os.Bundle mStateBundle
android.support.v4.app.FragmentManagerImpl: android.util.SparseArray mStateArray
android.support.v4.app.FragmentManagerImpl: java.lang.Runnable mExecCommit
android.support.v4.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT
android.support.v4.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC
android.support.v4.app.FragmentManagerImpl: android.view.animation.Interpolator ACCELERATE_QUINT
android.support.v4.app.FragmentManagerImpl: android.view.animation.Interpolator ACCELERATE_CUBIC
android.support.v4.app.FragmentManagerImpl: int ANIM_DUR
android.support.v4.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_ENTER
android.support.v4.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_EXIT
android.support.v4.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_ENTER
android.support.v4.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_EXIT
android.support.v4.app.FragmentManagerImpl: int ANIM_STYLE_FADE_ENTER
android.support.v4.app.FragmentManagerImpl: int ANIM_STYLE_FADE_EXIT
android.support.v4.app.FragmentManagerImpl: FragmentManagerImpl()
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()
android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()
android.support.v4.app.FragmentManagerImpl: void popBackStack()
android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()
android.support.v4.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)
android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)
android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)
android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)
android.support.v4.app.FragmentManagerImpl: int getBackStackEntryCount()
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
android.support.v4.app.FragmentManagerImpl: void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
android.support.v4.app.FragmentManagerImpl: void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: java.lang.String toString()
android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)
android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)
android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)
android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)
android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)
android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)
android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()
android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)
android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)
android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)
android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)
android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)
android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentById(int)
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)
android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByWho(java.lang.String)
android.support.v4.app.FragmentManagerImpl: void checkStateLoss()
android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)
android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)
android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)
android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)
android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()
android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()
android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)
android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)
android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()
android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()
android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)
android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity)
android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()
android.support.v4.app.FragmentManagerImpl: void dispatchCreate()
android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()
android.support.v4.app.FragmentManagerImpl: void dispatchStart()
android.support.v4.app.FragmentManagerImpl: void dispatchResume()
android.support.v4.app.FragmentManagerImpl: void dispatchPause()
android.support.v4.app.FragmentManagerImpl: void dispatchStop()
android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()
android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()
android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.FragmentManagerImpl: void dispatchLowMemory()
android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)
android.support.v4.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)
android.support.v4.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)
android.support.v4.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)
android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)
android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)
android.support.v4.app.FragmentManagerImpl: void <clinit>()
android.support.v4.app.FragmentManagerImpl$1
android.support.v4.app.FragmentManagerImpl$1: android.support.v4.app.FragmentManagerImpl this$0
android.support.v4.app.FragmentManagerImpl$1: FragmentManagerImpl$1(android.support.v4.app.FragmentManagerImpl)
android.support.v4.app.FragmentManagerImpl$1: void run()
android.support.v4.app.FragmentManagerImpl$2
android.support.v4.app.FragmentManagerImpl$2: android.support.v4.app.FragmentManagerImpl this$0
android.support.v4.app.FragmentManagerImpl$2: FragmentManagerImpl$2(android.support.v4.app.FragmentManagerImpl)
android.support.v4.app.FragmentManagerImpl$2: void run()
android.support.v4.app.FragmentManagerImpl$3
android.support.v4.app.FragmentManagerImpl$3: java.lang.String val$name
android.support.v4.app.FragmentManagerImpl$3: int val$flags
android.support.v4.app.FragmentManagerImpl$3: android.support.v4.app.FragmentManagerImpl this$0
android.support.v4.app.FragmentManagerImpl$3: FragmentManagerImpl$3(android.support.v4.app.FragmentManagerImpl,java.lang.String,int)
android.support.v4.app.FragmentManagerImpl$3: void run()
android.support.v4.app.FragmentManagerImpl$4
android.support.v4.app.FragmentManagerImpl$4: int val$id
android.support.v4.app.FragmentManagerImpl$4: int val$flags
android.support.v4.app.FragmentManagerImpl$4: android.support.v4.app.FragmentManagerImpl this$0
android.support.v4.app.FragmentManagerImpl$4: FragmentManagerImpl$4(android.support.v4.app.FragmentManagerImpl,int,int)
android.support.v4.app.FragmentManagerImpl$4: void run()
android.support.v4.app.FragmentManagerImpl$5
android.support.v4.app.FragmentManagerImpl$5: android.support.v4.app.Fragment val$fragment
android.support.v4.app.FragmentManagerImpl$5: android.support.v4.app.FragmentManagerImpl this$0
android.support.v4.app.FragmentManagerImpl$5: FragmentManagerImpl$5(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)
android.support.v4.app.FragmentManagerImpl$5: void onAnimationEnd(android.view.animation.Animation)
android.support.v4.app.FragmentManagerImpl$5: void onAnimationRepeat(android.view.animation.Animation)
android.support.v4.app.FragmentManagerImpl$5: void onAnimationStart(android.view.animation.Animation)
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.support.v4.app.FragmentState[] mActive
android.support.v4.app.FragmentManagerState: int[] mAdded
android.support.v4.app.FragmentManagerState: android.support.v4.app.BackStackState[] mBackStack
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentManagerState: FragmentManagerState()
android.support.v4.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
android.support.v4.app.FragmentManagerState: int describeContents()
android.support.v4.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
android.support.v4.app.FragmentManagerState: void <clinit>()
android.support.v4.app.FragmentManagerState$1
android.support.v4.app.FragmentManagerState$1: FragmentManagerState$1()
android.support.v4.app.FragmentManagerState$1: android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel)
android.support.v4.app.FragmentManagerState$1: android.support.v4.app.FragmentManagerState[] newArray(int)
android.support.v4.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
android.support.v4.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.app.FragmentPagerAdapter
android.support.v4.app.FragmentPagerAdapter: java.lang.String TAG
android.support.v4.app.FragmentPagerAdapter: boolean DEBUG
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.FragmentManager mFragmentManager
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.FragmentTransaction mCurTransaction
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.Fragment mCurrentPrimaryItem
android.support.v4.app.FragmentPagerAdapter: FragmentPagerAdapter(android.support.v4.app.FragmentManager)
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.Fragment getItem(int)
android.support.v4.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
android.support.v4.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
android.support.v4.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
android.support.v4.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
android.support.v4.app.FragmentPagerAdapter: android.os.Parcelable saveState()
android.support.v4.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
android.support.v4.app.FragmentPagerAdapter: long getItemId(int)
android.support.v4.app.FragmentPagerAdapter: java.lang.String makeFragmentName(int,long)
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: java.lang.String mClassName
android.support.v4.app.FragmentState: int mIndex
android.support.v4.app.FragmentState: boolean mFromLayout
android.support.v4.app.FragmentState: int mFragmentId
android.support.v4.app.FragmentState: int mContainerId
android.support.v4.app.FragmentState: java.lang.String mTag
android.support.v4.app.FragmentState: boolean mRetainInstance
android.support.v4.app.FragmentState: boolean mDetached
android.support.v4.app.FragmentState: android.os.Bundle mArguments
android.support.v4.app.FragmentState: android.os.Bundle mSavedFragmentState
android.support.v4.app.FragmentState: android.support.v4.app.Fragment mInstance
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState: FragmentState(android.support.v4.app.Fragment)
android.support.v4.app.FragmentState: FragmentState(android.os.Parcel)
android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)
android.support.v4.app.FragmentState: int describeContents()
android.support.v4.app.FragmentState: void writeToParcel(android.os.Parcel,int)
android.support.v4.app.FragmentState: void <clinit>()
android.support.v4.app.FragmentState$1
android.support.v4.app.FragmentState$1: FragmentState$1()
android.support.v4.app.FragmentState$1: android.support.v4.app.FragmentState createFromParcel(android.os.Parcel)
android.support.v4.app.FragmentState$1: android.support.v4.app.FragmentState[] newArray(int)
android.support.v4.app.FragmentState$1: java.lang.Object[] newArray(int)
android.support.v4.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.app.FragmentStatePagerAdapter
android.support.v4.app.FragmentStatePagerAdapter: java.lang.String TAG
android.support.v4.app.FragmentStatePagerAdapter: boolean DEBUG
android.support.v4.app.FragmentStatePagerAdapter: android.support.v4.app.FragmentManager mFragmentManager
android.support.v4.app.FragmentStatePagerAdapter: android.support.v4.app.FragmentTransaction mCurTransaction
android.support.v4.app.FragmentStatePagerAdapter: java.util.ArrayList mSavedState
android.support.v4.app.FragmentStatePagerAdapter: java.util.ArrayList mFragments
android.support.v4.app.FragmentStatePagerAdapter: android.support.v4.app.Fragment mCurrentPrimaryItem
android.support.v4.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(android.support.v4.app.FragmentManager)
android.support.v4.app.FragmentStatePagerAdapter: android.support.v4.app.Fragment getItem(int)
android.support.v4.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)
android.support.v4.app.FragmentStatePagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
android.support.v4.app.FragmentStatePagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)
android.support.v4.app.FragmentStatePagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
android.support.v4.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()
android.support.v4.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
android.support.v4.app.FragmentTransaction
android.support.v4.app.FragmentTransaction: int TRANSIT_ENTER_MASK
android.support.v4.app.FragmentTransaction: int TRANSIT_EXIT_MASK
android.support.v4.app.FragmentTransaction: int TRANSIT_UNSET
android.support.v4.app.FragmentTransaction: int TRANSIT_NONE
android.support.v4.app.FragmentTransaction: int TRANSIT_FRAGMENT_OPEN
android.support.v4.app.FragmentTransaction: int TRANSIT_FRAGMENT_CLOSE
android.support.v4.app.FragmentTransaction: int TRANSIT_FRAGMENT_FADE
android.support.v4.app.FragmentTransaction: FragmentTransaction()
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment)
android.support.v4.app.FragmentTransaction: boolean isEmpty()
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setTransition(int)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setTransitionStyle(int)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)
android.support.v4.app.FragmentTransaction: boolean isAddToBackStackAllowed()
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction disallowAddToBackStack()
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int)
android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
android.support.v4.app.FragmentTransaction: int commit()
android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()
android.support.v4.app.ListFragment
android.support.v4.app.ListFragment: int INTERNAL_EMPTY_ID
android.support.v4.app.ListFragment: int INTERNAL_PROGRESS_CONTAINER_ID
android.support.v4.app.ListFragment: int INTERNAL_LIST_CONTAINER_ID
android.support.v4.app.ListFragment: android.os.Handler mHandler
android.support.v4.app.ListFragment: java.lang.Runnable mRequestFocus
android.support.v4.app.ListFragment: android.widget.AdapterView$OnItemClickListener mOnClickListener
android.support.v4.app.ListFragment: android.widget.ListAdapter mAdapter
android.support.v4.app.ListFragment: android.widget.ListView mList
android.support.v4.app.ListFragment: android.view.View mEmptyView
android.support.v4.app.ListFragment: android.widget.TextView mStandardEmptyView
android.support.v4.app.ListFragment: android.view.View mProgressContainer
android.support.v4.app.ListFragment: android.view.View mListContainer
android.support.v4.app.ListFragment: java.lang.CharSequence mEmptyText
android.support.v4.app.ListFragment: boolean mListShown
android.support.v4.app.ListFragment: ListFragment()
android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)
android.support.v4.app.ListFragment: void onDestroyView()
android.support.v4.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)
android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)
android.support.v4.app.ListFragment: void setSelection(int)
android.support.v4.app.ListFragment: int getSelectedItemPosition()
android.support.v4.app.ListFragment: long getSelectedItemId()
android.support.v4.app.ListFragment: android.widget.ListView getListView()
android.support.v4.app.ListFragment: void setEmptyText(java.lang.CharSequence)
android.support.v4.app.ListFragment: void setListShown(boolean)
android.support.v4.app.ListFragment: void setListShownNoAnimation(boolean)
android.support.v4.app.ListFragment: void setListShown(boolean,boolean)
android.support.v4.app.ListFragment: android.widget.ListAdapter getListAdapter()
android.support.v4.app.ListFragment: void ensureList()
android.support.v4.app.ListFragment$1
android.support.v4.app.ListFragment$1: android.support.v4.app.ListFragment this$0
android.support.v4.app.ListFragment$1: ListFragment$1(android.support.v4.app.ListFragment)
android.support.v4.app.ListFragment$1: void run()
android.support.v4.app.ListFragment$2
android.support.v4.app.ListFragment$2: android.support.v4.app.ListFragment this$0
android.support.v4.app.ListFragment$2: ListFragment$2(android.support.v4.app.ListFragment)
android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
android.support.v4.app.LoaderManager
android.support.v4.app.LoaderManager: LoaderManager()
android.support.v4.app.LoaderManager: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManager: void destroyLoader(int)
android.support.v4.app.LoaderManager: android.support.v4.content.Loader getLoader(int)
android.support.v4.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.LoaderManager: void enableDebugLogging(boolean)
android.support.v4.app.LoaderManager: boolean hasRunningLoaders()
android.support.v4.app.LoaderManager$LoaderCallbacks
android.support.v4.app.LoaderManager$LoaderCallbacks: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)
android.support.v4.app.LoaderManager$LoaderCallbacks: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)
android.support.v4.app.LoaderManager$LoaderCallbacks: void onLoaderReset(android.support.v4.content.Loader)
android.support.v4.app.LoaderManagerImpl
android.support.v4.app.LoaderManagerImpl: java.lang.String TAG
android.support.v4.app.LoaderManagerImpl: boolean DEBUG
android.support.v4.app.LoaderManagerImpl: android.support.v4.util.SparseArrayCompat mLoaders
android.support.v4.app.LoaderManagerImpl: android.support.v4.util.SparseArrayCompat mInactiveLoaders
android.support.v4.app.LoaderManagerImpl: android.support.v4.app.FragmentActivity mActivity
android.support.v4.app.LoaderManagerImpl: boolean mStarted
android.support.v4.app.LoaderManagerImpl: boolean mRetaining
android.support.v4.app.LoaderManagerImpl: boolean mRetainingStarted
android.support.v4.app.LoaderManagerImpl: boolean mCreatingLoader
android.support.v4.app.LoaderManagerImpl: LoaderManagerImpl(android.support.v4.app.FragmentActivity,boolean)
android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)
android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)
android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManagerImpl: void destroyLoader(int)
android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader getLoader(int)
android.support.v4.app.LoaderManagerImpl: void doStart()
android.support.v4.app.LoaderManagerImpl: void doStop()
android.support.v4.app.LoaderManagerImpl: void doRetain()
android.support.v4.app.LoaderManagerImpl: void finishRetain()
android.support.v4.app.LoaderManagerImpl: void doReportNextStart()
android.support.v4.app.LoaderManagerImpl: void doReportStart()
android.support.v4.app.LoaderManagerImpl: void doDestroy()
android.support.v4.app.LoaderManagerImpl: java.lang.String toString()
android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()
android.support.v4.app.LoaderManagerImpl: void <clinit>()
android.support.v4.app.LoaderManagerImpl$LoaderInfo
android.support.v4.app.LoaderManagerImpl$LoaderInfo: int mId
android.support.v4.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
android.support.v4.app.LoaderManagerImpl$LoaderInfo: android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks
android.support.v4.app.LoaderManagerImpl$LoaderInfo: android.support.v4.content.Loader mLoader
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData
android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mStarted
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mRetainingStarted
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mReportNextStart
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mDestroyed
android.support.v4.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered
android.support.v4.app.LoaderManagerImpl$LoaderInfo: android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader
android.support.v4.app.LoaderManagerImpl$LoaderInfo: android.support.v4.app.LoaderManagerImpl this$0
android.support.v4.app.LoaderManagerImpl$LoaderInfo: LoaderManagerImpl$LoaderInfo(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)
android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.NavUtils
android.support.v4.app.NavUtils: java.lang.String TAG
android.support.v4.app.NavUtils: java.lang.String PARENT_ACTIVITY
android.support.v4.app.NavUtils: android.support.v4.app.NavUtils$NavUtilsImpl IMPL
android.support.v4.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)
android.support.v4.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
android.support.v4.app.NavUtils: NavUtils()
android.support.v4.app.NavUtils: void <clinit>()
android.support.v4.app.NavUtils$NavUtilsImpl
android.support.v4.app.NavUtils$NavUtilsImpl: android.content.Intent getParentActivityIntent(android.app.Activity)
android.support.v4.app.NavUtils$NavUtilsImpl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils$NavUtilsImpl: void navigateUpTo(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils$NavUtilsImpl: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)
android.support.v4.app.NavUtils$NavUtilsImplBase
android.support.v4.app.NavUtils$NavUtilsImplBase: NavUtils$NavUtilsImplBase()
android.support.v4.app.NavUtils$NavUtilsImplBase: android.content.Intent getParentActivityIntent(android.app.Activity)
android.support.v4.app.NavUtils$NavUtilsImplBase: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils$NavUtilsImplBase: void navigateUpTo(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils$NavUtilsImplBase: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)
android.support.v4.app.NavUtils$NavUtilsImplJB
android.support.v4.app.NavUtils$NavUtilsImplJB: NavUtils$NavUtilsImplJB()
android.support.v4.app.NavUtils$NavUtilsImplJB: android.content.Intent getParentActivityIntent(android.app.Activity)
android.support.v4.app.NavUtils$NavUtilsImplJB: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils$NavUtilsImplJB: void navigateUpTo(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtils$NavUtilsImplJB: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)
android.support.v4.app.NavUtilsJB
android.support.v4.app.NavUtilsJB: NavUtilsJB()
android.support.v4.app.NavUtilsJB: android.content.Intent getParentActivityIntent(android.app.Activity)
android.support.v4.app.NavUtilsJB: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtilsJB: void navigateUpTo(android.app.Activity,android.content.Intent)
android.support.v4.app.NavUtilsJB: java.lang.String getParentActivityName(android.content.pm.ActivityInfo)
android.support.v4.app.NoSaveStateFrameLayout
android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)
android.support.v4.app.NoSaveStateFrameLayout: NoSaveStateFrameLayout(android.content.Context)
android.support.v4.app.NoSaveStateFrameLayout: void dispatchSaveInstanceState(android.util.SparseArray)
android.support.v4.app.NoSaveStateFrameLayout: void dispatchRestoreInstanceState(android.util.SparseArray)
android.support.v4.app.NotificationCompat
android.support.v4.app.NotificationCompat: int FLAG_HIGH_PRIORITY
android.support.v4.app.NotificationCompat: android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL
android.support.v4.app.NotificationCompat: NotificationCompat()
android.support.v4.app.NotificationCompat: android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000()
android.support.v4.app.NotificationCompat: void <clinit>()
android.support.v4.app.NotificationCompat$Builder
android.support.v4.app.NotificationCompat$Builder: android.content.Context mContext
android.support.v4.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
android.support.v4.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
android.support.v4.app.NotificationCompat$Builder: android.app.PendingIntent mContentIntent
android.support.v4.app.NotificationCompat$Builder: android.app.PendingIntent mFullScreenIntent
android.support.v4.app.NotificationCompat$Builder: android.widget.RemoteViews mTickerView
android.support.v4.app.NotificationCompat$Builder: android.graphics.Bitmap mLargeIcon
android.support.v4.app.NotificationCompat$Builder: java.lang.CharSequence mContentInfo
android.support.v4.app.NotificationCompat$Builder: int mNumber
android.support.v4.app.NotificationCompat$Builder: android.app.Notification mNotification
android.support.v4.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setWhen(long)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setNumber(int)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVibrate(long[])
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setLights(int,int,int)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setOngoing(boolean)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean)
android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setDefaults(int)
android.support.v4.app.NotificationCompat$Builder: void setFlag(int,boolean)
android.support.v4.app.NotificationCompat$Builder: android.app.Notification getNotification()
android.support.v4.app.NotificationCompat$NotificationCompatImpl
android.support.v4.app.NotificationCompat$NotificationCompatImpl: android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder)
android.support.v4.app.NotificationCompat$NotificationCompatImplBase
android.support.v4.app.NotificationCompat$NotificationCompatImplBase: NotificationCompat$NotificationCompatImplBase()
android.support.v4.app.NotificationCompat$NotificationCompatImplBase: android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder)
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: NotificationCompat$NotificationCompatImplHoneycomb()
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder)
android.support.v4.app.NotificationCompatHoneycomb
android.support.v4.app.NotificationCompatHoneycomb: NotificationCompatHoneycomb()
android.support.v4.app.NotificationCompatHoneycomb: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)
android.support.v4.app.ServiceCompat
android.support.v4.app.ServiceCompat: int START_STICKY
android.support.v4.app.ServiceCompat: ServiceCompat()
android.support.v4.app.ShareCompat
android.support.v4.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE
android.support.v4.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY
android.support.v4.app.ShareCompat: android.support.v4.app.ShareCompat$ShareCompatImpl IMPL
android.support.v4.app.ShareCompat: ShareCompat()
android.support.v4.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)
android.support.v4.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)
android.support.v4.app.ShareCompat: void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
android.support.v4.app.ShareCompat: void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder)
android.support.v4.app.ShareCompat: android.support.v4.app.ShareCompat$ShareCompatImpl access$000()
android.support.v4.app.ShareCompat: void <clinit>()
android.support.v4.app.ShareCompat$IntentBuilder
android.support.v4.app.ShareCompat$IntentBuilder: android.app.Activity mActivity
android.support.v4.app.ShareCompat$IntentBuilder: android.content.Intent mIntent
android.support.v4.app.ShareCompat$IntentBuilder: java.lang.CharSequence mChooserTitle
android.support.v4.app.ShareCompat$IntentBuilder: java.util.ArrayList mToAddresses
android.support.v4.app.ShareCompat$IntentBuilder: java.util.ArrayList mCcAddresses
android.support.v4.app.ShareCompat$IntentBuilder: java.util.ArrayList mBccAddresses
android.support.v4.app.ShareCompat$IntentBuilder: java.util.ArrayList mStreams
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity)
android.support.v4.app.ShareCompat$IntentBuilder: ShareCompat$IntentBuilder(android.app.Activity)
android.support.v4.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()
android.support.v4.app.ShareCompat$IntentBuilder: android.app.Activity getActivity()
android.support.v4.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.util.ArrayList)
android.support.v4.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.content.Intent createChooserIntent()
android.support.v4.app.ShareCompat$IntentBuilder: void startChooser()
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String)
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[])
android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String)
android.support.v4.app.ShareCompat$IntentReader
android.support.v4.app.ShareCompat$IntentReader: java.lang.String TAG
android.support.v4.app.ShareCompat$IntentReader: android.app.Activity mActivity
android.support.v4.app.ShareCompat$IntentReader: android.content.Intent mIntent
android.support.v4.app.ShareCompat$IntentReader: java.lang.String mCallingPackage
android.support.v4.app.ShareCompat$IntentReader: android.content.ComponentName mCallingActivity
android.support.v4.app.ShareCompat$IntentReader: java.util.ArrayList mStreams
android.support.v4.app.ShareCompat$IntentReader: android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity)
android.support.v4.app.ShareCompat$IntentReader: ShareCompat$IntentReader(android.app.Activity)
android.support.v4.app.ShareCompat$IntentReader: boolean isShareIntent()
android.support.v4.app.ShareCompat$IntentReader: boolean isSingleShare()
android.support.v4.app.ShareCompat$IntentReader: boolean isMultipleShare()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String getType()
android.support.v4.app.ShareCompat$IntentReader: java.lang.CharSequence getText()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String getHtmlText()
android.support.v4.app.ShareCompat$IntentReader: android.net.Uri getStream()
android.support.v4.app.ShareCompat$IntentReader: android.net.Uri getStream(int)
android.support.v4.app.ShareCompat$IntentReader: int getStreamCount()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String[] getEmailTo()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String[] getEmailCc()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String[] getEmailBcc()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String getSubject()
android.support.v4.app.ShareCompat$IntentReader: java.lang.String getCallingPackage()
android.support.v4.app.ShareCompat$IntentReader: android.content.ComponentName getCallingActivity()
android.support.v4.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingActivityIcon()
android.support.v4.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingApplicationIcon()
android.support.v4.app.ShareCompat$IntentReader: java.lang.CharSequence getCallingApplicationLabel()
android.support.v4.app.ShareCompat$ShareCompatImpl
android.support.v4.app.ShareCompat$ShareCompatImpl: void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
android.support.v4.app.ShareCompat$ShareCompatImpl: java.lang.String escapeHtml(java.lang.CharSequence)
android.support.v4.app.ShareCompat$ShareCompatImplBase
android.support.v4.app.ShareCompat$ShareCompatImplBase: ShareCompat$ShareCompatImplBase()
android.support.v4.app.ShareCompat$ShareCompatImplBase: void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
android.support.v4.app.ShareCompat$ShareCompatImplBase: java.lang.String escapeHtml(java.lang.CharSequence)
android.support.v4.app.ShareCompat$ShareCompatImplBase: void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)
android.support.v4.app.ShareCompat$ShareCompatImplICS
android.support.v4.app.ShareCompat$ShareCompatImplICS: ShareCompat$ShareCompatImplICS()
android.support.v4.app.ShareCompat$ShareCompatImplICS: void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
android.support.v4.app.ShareCompat$ShareCompatImplICS: boolean shouldAddChooserIntent(android.view.MenuItem)
android.support.v4.app.ShareCompat$ShareCompatImplJB
android.support.v4.app.ShareCompat$ShareCompatImplJB: ShareCompat$ShareCompatImplJB()
android.support.v4.app.ShareCompat$ShareCompatImplJB: java.lang.String escapeHtml(java.lang.CharSequence)
android.support.v4.app.ShareCompat$ShareCompatImplJB: boolean shouldAddChooserIntent(android.view.MenuItem)
android.support.v4.app.ShareCompatICS
android.support.v4.app.ShareCompatICS: java.lang.String HISTORY_FILENAME_PREFIX
android.support.v4.app.ShareCompatICS: ShareCompatICS()
android.support.v4.app.ShareCompatICS: void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)
android.support.v4.app.ShareCompatJB
android.support.v4.app.ShareCompatJB: ShareCompatJB()
android.support.v4.app.ShareCompatJB: java.lang.String escapeHtml(java.lang.CharSequence)
android.support.v4.app.SuperNotCalledException
android.support.v4.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
android.support.v4.app.TaskStackBuilder
android.support.v4.app.TaskStackBuilder: java.lang.String TAG
android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL
android.support.v4.app.TaskStackBuilder: java.util.ArrayList mIntents
android.support.v4.app.TaskStackBuilder: android.content.Context mSourceContext
android.support.v4.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder create(android.content.Context)
android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder from(android.content.Context)
android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent)
android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity)
android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class)
android.support.v4.app.TaskStackBuilder: int getIntentCount()
android.support.v4.app.TaskStackBuilder: android.content.Intent getIntent(int)
android.support.v4.app.TaskStackBuilder: android.content.Intent editIntentAt(int)
android.support.v4.app.TaskStackBuilder: java.util.Iterator iterator()
android.support.v4.app.TaskStackBuilder: void startActivities()
android.support.v4.app.TaskStackBuilder: void startActivities(android.os.Bundle)
android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)
android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
android.support.v4.app.TaskStackBuilder: android.content.Intent[] getIntents()
android.support.v4.app.TaskStackBuilder: void <clinit>()
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: TaskStackBuilder$TaskStackBuilderImplBase()
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: TaskStackBuilder$TaskStackBuilderImplHoneycomb()
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean: TaskStackBuilder$TaskStackBuilderImplJellybean()
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)
android.support.v4.app.TaskStackBuilderHoneycomb
android.support.v4.app.TaskStackBuilderHoneycomb: TaskStackBuilderHoneycomb()
android.support.v4.app.TaskStackBuilderHoneycomb: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)
android.support.v4.app.TaskStackBuilderJellybean
android.support.v4.app.TaskStackBuilderJellybean: TaskStackBuilderJellybean()
android.support.v4.app.TaskStackBuilderJellybean: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)
android.support.v4.content.AsyncTaskLoader
android.support.v4.content.AsyncTaskLoader: java.lang.String TAG
android.support.v4.content.AsyncTaskLoader: boolean DEBUG
android.support.v4.content.AsyncTaskLoader: android.support.v4.content.AsyncTaskLoader$LoadTask mTask
android.support.v4.content.AsyncTaskLoader: android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask
android.support.v4.content.AsyncTaskLoader: long mUpdateThrottle
android.support.v4.content.AsyncTaskLoader: long mLastLoadCompleteTime
android.support.v4.content.AsyncTaskLoader: android.os.Handler mHandler
android.support.v4.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context)
android.support.v4.content.AsyncTaskLoader: void setUpdateThrottle(long)
android.support.v4.content.AsyncTaskLoader: void onForceLoad()
android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()
android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)
android.support.v4.content.AsyncTaskLoader: void executePendingTask()
android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)
android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)
android.support.v4.content.AsyncTaskLoader: java.lang.Object loadInBackground()
android.support.v4.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()
android.support.v4.content.AsyncTaskLoader: void waitForLoader()
android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.content.AsyncTaskLoader$LoadTask
android.support.v4.content.AsyncTaskLoader$LoadTask: java.lang.Object result
android.support.v4.content.AsyncTaskLoader$LoadTask: boolean waiting
android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch done
android.support.v4.content.AsyncTaskLoader$LoadTask: android.support.v4.content.AsyncTaskLoader this$0
android.support.v4.content.AsyncTaskLoader$LoadTask: AsyncTaskLoader$LoadTask(android.support.v4.content.AsyncTaskLoader)
android.support.v4.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Void[])
android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)
android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()
android.support.v4.content.AsyncTaskLoader$LoadTask: void run()
android.support.v4.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Object[])
android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask)
android.support.v4.content.ContextCompat
android.support.v4.content.ContextCompat: ContextCompat()
android.support.v4.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[])
android.support.v4.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
android.support.v4.content.ContextCompatHoneycomb
android.support.v4.content.ContextCompatHoneycomb: ContextCompatHoneycomb()
android.support.v4.content.ContextCompatHoneycomb: void startActivities(android.content.Context,android.content.Intent[])
android.support.v4.content.ContextCompatJellybean
android.support.v4.content.ContextCompatJellybean: ContextCompatJellybean()
android.support.v4.content.ContextCompatJellybean: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
android.support.v4.content.CursorLoader
android.support.v4.content.CursorLoader: android.support.v4.content.Loader$ForceLoadContentObserver mObserver
android.support.v4.content.CursorLoader: android.net.Uri mUri
android.support.v4.content.CursorLoader: java.lang.String[] mProjection
android.support.v4.content.CursorLoader: java.lang.String mSelection
android.support.v4.content.CursorLoader: java.lang.String[] mSelectionArgs
android.support.v4.content.CursorLoader: java.lang.String mSortOrder
android.support.v4.content.CursorLoader: android.database.Cursor mCursor
android.support.v4.content.CursorLoader: android.database.Cursor loadInBackground()
android.support.v4.content.CursorLoader: void registerContentObserver(android.database.Cursor,android.database.ContentObserver)
android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)
android.support.v4.content.CursorLoader: CursorLoader(android.content.Context)
android.support.v4.content.CursorLoader: CursorLoader(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android.support.v4.content.CursorLoader: void onStartLoading()
android.support.v4.content.CursorLoader: void onStopLoading()
android.support.v4.content.CursorLoader: void onCanceled(android.database.Cursor)
android.support.v4.content.CursorLoader: void onReset()
android.support.v4.content.CursorLoader: android.net.Uri getUri()
android.support.v4.content.CursorLoader: void setUri(android.net.Uri)
android.support.v4.content.CursorLoader: java.lang.String[] getProjection()
android.support.v4.content.CursorLoader: void setProjection(java.lang.String[])
android.support.v4.content.CursorLoader: java.lang.String getSelection()
android.support.v4.content.CursorLoader: void setSelection(java.lang.String)
android.support.v4.content.CursorLoader: java.lang.String[] getSelectionArgs()
android.support.v4.content.CursorLoader: void setSelectionArgs(java.lang.String[])
android.support.v4.content.CursorLoader: java.lang.String getSortOrder()
android.support.v4.content.CursorLoader: void setSortOrder(java.lang.String)
android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.content.CursorLoader: java.lang.Object loadInBackground()
android.support.v4.content.CursorLoader: void onCanceled(java.lang.Object)
android.support.v4.content.CursorLoader: void deliverResult(java.lang.Object)
android.support.v4.content.IntentCompat
android.support.v4.content.IntentCompat: java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
android.support.v4.content.IntentCompat: java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
android.support.v4.content.IntentCompat: java.lang.String EXTRA_CHANGED_PACKAGE_LIST
android.support.v4.content.IntentCompat: java.lang.String EXTRA_CHANGED_UID_LIST
android.support.v4.content.IntentCompat: java.lang.String EXTRA_HTML_TEXT
android.support.v4.content.IntentCompat: int FLAG_ACTIVITY_TASK_ON_HOME
android.support.v4.content.IntentCompat: int FLAG_ACTIVITY_CLEAR_TASK
android.support.v4.content.IntentCompat: IntentCompat()
android.support.v4.content.Loader
android.support.v4.content.Loader: int mId
android.support.v4.content.Loader: android.support.v4.content.Loader$OnLoadCompleteListener mListener
android.support.v4.content.Loader: android.content.Context mContext
android.support.v4.content.Loader: boolean mStarted
android.support.v4.content.Loader: boolean mAbandoned
android.support.v4.content.Loader: boolean mReset
android.support.v4.content.Loader: boolean mContentChanged
android.support.v4.content.Loader: Loader(android.content.Context)
android.support.v4.content.Loader: void deliverResult(java.lang.Object)
android.support.v4.content.Loader: android.content.Context getContext()
android.support.v4.content.Loader: int getId()
android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)
android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)
android.support.v4.content.Loader: boolean isStarted()
android.support.v4.content.Loader: boolean isAbandoned()
android.support.v4.content.Loader: boolean isReset()
android.support.v4.content.Loader: void startLoading()
android.support.v4.content.Loader: void onStartLoading()
android.support.v4.content.Loader: void forceLoad()
android.support.v4.content.Loader: void onForceLoad()
android.support.v4.content.Loader: void stopLoading()
android.support.v4.content.Loader: void onStopLoading()
android.support.v4.content.Loader: void abandon()
android.support.v4.content.Loader: void onAbandon()
android.support.v4.content.Loader: void reset()
android.support.v4.content.Loader: void onReset()
android.support.v4.content.Loader: boolean takeContentChanged()
android.support.v4.content.Loader: void onContentChanged()
android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)
android.support.v4.content.Loader: java.lang.String toString()
android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.content.Loader$ForceLoadContentObserver
android.support.v4.content.Loader$ForceLoadContentObserver: android.support.v4.content.Loader this$0
android.support.v4.content.Loader$ForceLoadContentObserver: Loader$ForceLoadContentObserver(android.support.v4.content.Loader)
android.support.v4.content.Loader$ForceLoadContentObserver: boolean deliverSelfNotifications()
android.support.v4.content.Loader$ForceLoadContentObserver: void onChange(boolean)
android.support.v4.content.Loader$OnLoadCompleteListener
android.support.v4.content.Loader$OnLoadCompleteListener: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)
android.support.v4.content.LocalBroadcastManager
android.support.v4.content.LocalBroadcastManager: java.lang.String TAG
android.support.v4.content.LocalBroadcastManager: boolean DEBUG
android.support.v4.content.LocalBroadcastManager: android.content.Context mAppContext
android.support.v4.content.LocalBroadcastManager: java.util.HashMap mReceivers
android.support.v4.content.LocalBroadcastManager: java.util.HashMap mActions
android.support.v4.content.LocalBroadcastManager: java.util.ArrayList mPendingBroadcasts
android.support.v4.content.LocalBroadcastManager: int MSG_EXEC_PENDING_BROADCASTS
android.support.v4.content.LocalBroadcastManager: android.os.Handler mHandler
android.support.v4.content.LocalBroadcastManager: java.lang.Object mLock
android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager mInstance
android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context)
android.support.v4.content.LocalBroadcastManager: LocalBroadcastManager(android.content.Context)
android.support.v4.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
android.support.v4.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)
android.support.v4.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)
android.support.v4.content.LocalBroadcastManager: void sendBroadcastSync(android.content.Intent)
android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()
android.support.v4.content.LocalBroadcastManager: void access$000(android.support.v4.content.LocalBroadcastManager)
android.support.v4.content.LocalBroadcastManager: void <clinit>()
android.support.v4.content.LocalBroadcastManager$1
android.support.v4.content.LocalBroadcastManager$1: android.support.v4.content.LocalBroadcastManager this$0
android.support.v4.content.LocalBroadcastManager$1: LocalBroadcastManager$1(android.support.v4.content.LocalBroadcastManager,android.os.Looper)
android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)
android.support.v4.content.LocalBroadcastManager$BroadcastRecord
android.support.v4.content.LocalBroadcastManager$BroadcastRecord: android.content.Intent intent
android.support.v4.content.LocalBroadcastManager$BroadcastRecord: java.util.ArrayList receivers
android.support.v4.content.LocalBroadcastManager$BroadcastRecord: LocalBroadcastManager$BroadcastRecord(android.content.Intent,java.util.ArrayList)
android.support.v4.content.LocalBroadcastManager$ReceiverRecord
android.support.v4.content.LocalBroadcastManager$ReceiverRecord: android.content.IntentFilter filter
android.support.v4.content.LocalBroadcastManager$ReceiverRecord: android.content.BroadcastReceiver receiver
android.support.v4.content.LocalBroadcastManager$ReceiverRecord: boolean broadcasting
android.support.v4.content.LocalBroadcastManager$ReceiverRecord: LocalBroadcastManager$ReceiverRecord(android.content.IntentFilter,android.content.BroadcastReceiver)
android.support.v4.content.LocalBroadcastManager$ReceiverRecord: java.lang.String toString()
android.support.v4.content.ModernAsyncTask
android.support.v4.content.ModernAsyncTask: java.lang.String LOG_TAG
android.support.v4.content.ModernAsyncTask: int CORE_POOL_SIZE
android.support.v4.content.ModernAsyncTask: int MAXIMUM_POOL_SIZE
android.support.v4.content.ModernAsyncTask: int KEEP_ALIVE
android.support.v4.content.ModernAsyncTask: java.util.concurrent.ThreadFactory sThreadFactory
android.support.v4.content.ModernAsyncTask: java.util.concurrent.BlockingQueue sPoolWorkQueue
android.support.v4.content.ModernAsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR
android.support.v4.content.ModernAsyncTask: int MESSAGE_POST_RESULT
android.support.v4.content.ModernAsyncTask: int MESSAGE_POST_PROGRESS
android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask$InternalHandler sHandler
android.support.v4.content.ModernAsyncTask: java.util.concurrent.Executor sDefaultExecutor
android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker
android.support.v4.content.ModernAsyncTask: java.util.concurrent.FutureTask mFuture
android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask$Status mStatus
android.support.v4.content.ModernAsyncTask: java.util.concurrent.atomic.AtomicBoolean mTaskInvoked
android.support.v4.content.ModernAsyncTask: void init()
android.support.v4.content.ModernAsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)
android.support.v4.content.ModernAsyncTask: ModernAsyncTask()
android.support.v4.content.ModernAsyncTask: void postResultIfNotInvoked(java.lang.Object)
android.support.v4.content.ModernAsyncTask: java.lang.Object postResult(java.lang.Object)
android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask$Status getStatus()
android.support.v4.content.ModernAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
android.support.v4.content.ModernAsyncTask: void onPreExecute()
android.support.v4.content.ModernAsyncTask: void onPostExecute(java.lang.Object)
android.support.v4.content.ModernAsyncTask: void onProgressUpdate(java.lang.Object[])
android.support.v4.content.ModernAsyncTask: void onCancelled(java.lang.Object)
android.support.v4.content.ModernAsyncTask: void onCancelled()
android.support.v4.content.ModernAsyncTask: boolean isCancelled()
android.support.v4.content.ModernAsyncTask: boolean cancel(boolean)
android.support.v4.content.ModernAsyncTask: java.lang.Object get()
android.support.v4.content.ModernAsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)
android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask execute(java.lang.Object[])
android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])
android.support.v4.content.ModernAsyncTask: void execute(java.lang.Runnable)
android.support.v4.content.ModernAsyncTask: void publishProgress(java.lang.Object[])
android.support.v4.content.ModernAsyncTask: void finish(java.lang.Object)
android.support.v4.content.ModernAsyncTask: java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask)
android.support.v4.content.ModernAsyncTask: java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object)
android.support.v4.content.ModernAsyncTask: void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object)
android.support.v4.content.ModernAsyncTask: void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)
android.support.v4.content.ModernAsyncTask: void <clinit>()
android.support.v4.content.ModernAsyncTask$1
android.support.v4.content.ModernAsyncTask$1: java.util.concurrent.atomic.AtomicInteger mCount
android.support.v4.content.ModernAsyncTask$1: ModernAsyncTask$1()
android.support.v4.content.ModernAsyncTask$1: java.lang.Thread newThread(java.lang.Runnable)
android.support.v4.content.ModernAsyncTask$2
android.support.v4.content.ModernAsyncTask$2: android.support.v4.content.ModernAsyncTask this$0
android.support.v4.content.ModernAsyncTask$2: ModernAsyncTask$2(android.support.v4.content.ModernAsyncTask)
android.support.v4.content.ModernAsyncTask$2: java.lang.Object call()
android.support.v4.content.ModernAsyncTask$3
android.support.v4.content.ModernAsyncTask$3: android.support.v4.content.ModernAsyncTask this$0
android.support.v4.content.ModernAsyncTask$3: ModernAsyncTask$3(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)
android.support.v4.content.ModernAsyncTask$3: void done()
android.support.v4.content.ModernAsyncTask$4
android.support.v4.content.ModernAsyncTask$4: int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$4: void <clinit>()
android.support.v4.content.ModernAsyncTask$AsyncTaskResult
android.support.v4.content.ModernAsyncTask$AsyncTaskResult: android.support.v4.content.ModernAsyncTask mTask
android.support.v4.content.ModernAsyncTask$AsyncTaskResult: java.lang.Object[] mData
android.support.v4.content.ModernAsyncTask$AsyncTaskResult: ModernAsyncTask$AsyncTaskResult(android.support.v4.content.ModernAsyncTask,java.lang.Object[])
android.support.v4.content.ModernAsyncTask$InternalHandler
android.support.v4.content.ModernAsyncTask$InternalHandler: ModernAsyncTask$InternalHandler()
android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)
android.support.v4.content.ModernAsyncTask$InternalHandler: ModernAsyncTask$InternalHandler(android.support.v4.content.ModernAsyncTask$1)
android.support.v4.content.ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status PENDING
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status RUNNING
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status FINISHED
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] $VALUES
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.content.ModernAsyncTask$Status: ModernAsyncTask$Status(java.lang.String,int)
android.support.v4.content.ModernAsyncTask$Status: void <clinit>()
android.support.v4.content.ModernAsyncTask$WorkerRunnable
android.support.v4.content.ModernAsyncTask$WorkerRunnable: java.lang.Object[] mParams
android.support.v4.content.ModernAsyncTask$WorkerRunnable: ModernAsyncTask$WorkerRunnable()
android.support.v4.content.ModernAsyncTask$WorkerRunnable: ModernAsyncTask$WorkerRunnable(android.support.v4.content.ModernAsyncTask$1)
android.support.v4.content.pm.ActivityInfoCompat
android.support.v4.content.pm.ActivityInfoCompat: int CONFIG_UI_MODE
android.support.v4.content.pm.ActivityInfoCompat: ActivityInfoCompat()
android.support.v4.database.DatabaseUtilsCompat
android.support.v4.database.DatabaseUtilsCompat: DatabaseUtilsCompat()
android.support.v4.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
android.support.v4.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])
android.support.v4.net.ConnectivityManagerCompat
android.support.v4.net.ConnectivityManagerCompat: android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL
android.support.v4.net.ConnectivityManagerCompat: ConnectivityManagerCompat()
android.support.v4.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompat: void <clinit>()
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl: ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl()
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl: ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl()
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl: ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl()
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl: ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl()
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompatGingerbread
android.support.v4.net.ConnectivityManagerCompatGingerbread: ConnectivityManagerCompatGingerbread()
android.support.v4.net.ConnectivityManagerCompatGingerbread: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2: ConnectivityManagerCompatHoneycombMR2()
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.ConnectivityManagerCompatJellyBean
android.support.v4.net.ConnectivityManagerCompatJellyBean: ConnectivityManagerCompatJellyBean()
android.support.v4.net.ConnectivityManagerCompatJellyBean: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
android.support.v4.net.TrafficStatsCompat
android.support.v4.net.TrafficStatsCompat: android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL
android.support.v4.net.TrafficStatsCompat: TrafficStatsCompat()
android.support.v4.net.TrafficStatsCompat: void clearThreadStatsTag()
android.support.v4.net.TrafficStatsCompat: int getThreadStatsTag()
android.support.v4.net.TrafficStatsCompat: void incrementOperationCount(int)
android.support.v4.net.TrafficStatsCompat: void incrementOperationCount(int,int)
android.support.v4.net.TrafficStatsCompat: void setThreadStatsTag(int)
android.support.v4.net.TrafficStatsCompat: void tagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat: void untagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat: void <clinit>()
android.support.v4.net.TrafficStatsCompat$1
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: java.lang.ThreadLocal mThreadSocketTags
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: TrafficStatsCompat$BaseTrafficStatsCompatImpl()
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void clearThreadStatsTag()
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: int getThreadStatsTag()
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void incrementOperationCount(int)
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void incrementOperationCount(int,int)
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void setThreadStatsTag(int)
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void tagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void untagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1: android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1: TrafficStatsCompat$BaseTrafficStatsCompatImpl$1(android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl)
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1: android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue()
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1: java.lang.Object initialValue()
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags: int statsTag
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags: TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags()
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags: TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags(android.support.v4.net.TrafficStatsCompat$1)
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: TrafficStatsCompat$IcsTrafficStatsCompatImpl()
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void clearThreadStatsTag()
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: int getThreadStatsTag()
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void incrementOperationCount(int)
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void incrementOperationCount(int,int)
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void setThreadStatsTag(int)
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void tagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void untagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: void clearThreadStatsTag()
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: int getThreadStatsTag()
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: void incrementOperationCount(int)
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: void incrementOperationCount(int,int)
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: void setThreadStatsTag(int)
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: void tagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl: void untagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompatIcs
android.support.v4.net.TrafficStatsCompatIcs: TrafficStatsCompatIcs()
android.support.v4.net.TrafficStatsCompatIcs: void clearThreadStatsTag()
android.support.v4.net.TrafficStatsCompatIcs: int getThreadStatsTag()
android.support.v4.net.TrafficStatsCompatIcs: void incrementOperationCount(int)
android.support.v4.net.TrafficStatsCompatIcs: void incrementOperationCount(int,int)
android.support.v4.net.TrafficStatsCompatIcs: void setThreadStatsTag(int)
android.support.v4.net.TrafficStatsCompatIcs: void tagSocket(java.net.Socket)
android.support.v4.net.TrafficStatsCompatIcs: void untagSocket(java.net.Socket)
android.support.v4.os.ParcelableCompat
android.support.v4.os.ParcelableCompat: ParcelableCompat()
android.support.v4.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks)
android.support.v4.os.ParcelableCompat$CompatCreator
android.support.v4.os.ParcelableCompat$CompatCreator: android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks
android.support.v4.os.ParcelableCompat$CompatCreator: ParcelableCompat$CompatCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks)
android.support.v4.os.ParcelableCompat$CompatCreator: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.os.ParcelableCompat$CompatCreator: java.lang.Object[] newArray(int)
android.support.v4.os.ParcelableCompatCreatorCallbacks
android.support.v4.os.ParcelableCompatCreatorCallbacks: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.os.ParcelableCompatCreatorCallbacks: java.lang.Object[] newArray(int)
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: ParcelableCompatCreatorHoneycombMR2(android.support.v4.os.ParcelableCompatCreatorCallbacks)
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object[] newArray(int)
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub: ParcelableCompatCreatorHoneycombMR2Stub()
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub: android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks)
android.support.v4.util.DebugUtils
android.support.v4.util.DebugUtils: DebugUtils()
android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
android.support.v4.util.LogWriter
android.support.v4.util.LogWriter: java.lang.String mTag
android.support.v4.util.LogWriter: java.lang.StringBuilder mBuilder
android.support.v4.util.LogWriter: LogWriter(java.lang.String)
android.support.v4.util.LogWriter: void close()
android.support.v4.util.LogWriter: void flush()
android.support.v4.util.LogWriter: void write(char[],int,int)
android.support.v4.util.LogWriter: void flushBuilder()
android.support.v4.util.LongSparseArray
android.support.v4.util.LongSparseArray: java.lang.Object DELETED
android.support.v4.util.LongSparseArray: boolean mGarbage
android.support.v4.util.LongSparseArray: long[] mKeys
android.support.v4.util.LongSparseArray: java.lang.Object[] mValues
android.support.v4.util.LongSparseArray: int mSize
android.support.v4.util.LongSparseArray: LongSparseArray()
android.support.v4.util.LongSparseArray: LongSparseArray(int)
android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()
android.support.v4.util.LongSparseArray: java.lang.Object get(long)
android.support.v4.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)
android.support.v4.util.LongSparseArray: void delete(long)
android.support.v4.util.LongSparseArray: void remove(long)
android.support.v4.util.LongSparseArray: void removeAt(int)
android.support.v4.util.LongSparseArray: void gc()
android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)
android.support.v4.util.LongSparseArray: int size()
android.support.v4.util.LongSparseArray: long keyAt(int)
android.support.v4.util.LongSparseArray: java.lang.Object valueAt(int)
android.support.v4.util.LongSparseArray: void setValueAt(int,java.lang.Object)
android.support.v4.util.LongSparseArray: int indexOfKey(long)
android.support.v4.util.LongSparseArray: int indexOfValue(java.lang.Object)
android.support.v4.util.LongSparseArray: void clear()
android.support.v4.util.LongSparseArray: void append(long,java.lang.Object)
android.support.v4.util.LongSparseArray: int binarySearch(long[],int,int,long)
android.support.v4.util.LongSparseArray: int idealByteArraySize(int)
android.support.v4.util.LongSparseArray: int idealLongArraySize(int)
android.support.v4.util.LongSparseArray: java.lang.Object clone()
android.support.v4.util.LongSparseArray: void <clinit>()
android.support.v4.util.LruCache
android.support.v4.util.LruCache: java.util.LinkedHashMap map
android.support.v4.util.LruCache: int size
android.support.v4.util.LruCache: int maxSize
android.support.v4.util.LruCache: int putCount
android.support.v4.util.LruCache: int createCount
android.support.v4.util.LruCache: int evictionCount
android.support.v4.util.LruCache: int hitCount
android.support.v4.util.LruCache: int missCount
android.support.v4.util.LruCache: LruCache(int)
android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)
android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
android.support.v4.util.LruCache: void trimToSize(int)
android.support.v4.util.LruCache: java.lang.Object remove(java.lang.Object)
android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
android.support.v4.util.LruCache: java.lang.Object create(java.lang.Object)
android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
android.support.v4.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
android.support.v4.util.LruCache: void evictAll()
android.support.v4.util.LruCache: int size()
android.support.v4.util.LruCache: int maxSize()
android.support.v4.util.LruCache: int hitCount()
android.support.v4.util.LruCache: int missCount()
android.support.v4.util.LruCache: int createCount()
android.support.v4.util.LruCache: int putCount()
android.support.v4.util.LruCache: int evictionCount()
android.support.v4.util.LruCache: java.util.Map snapshot()
android.support.v4.util.LruCache: java.lang.String toString()
android.support.v4.util.SparseArrayCompat
android.support.v4.util.SparseArrayCompat: java.lang.Object DELETED
android.support.v4.util.SparseArrayCompat: boolean mGarbage
android.support.v4.util.SparseArrayCompat: int[] mKeys
android.support.v4.util.SparseArrayCompat: java.lang.Object[] mValues
android.support.v4.util.SparseArrayCompat: int mSize
android.support.v4.util.SparseArrayCompat: SparseArrayCompat()
android.support.v4.util.SparseArrayCompat: SparseArrayCompat(int)
android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)
android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
android.support.v4.util.SparseArrayCompat: void delete(int)
android.support.v4.util.SparseArrayCompat: void remove(int)
android.support.v4.util.SparseArrayCompat: void removeAt(int)
android.support.v4.util.SparseArrayCompat: void removeAtRange(int,int)
android.support.v4.util.SparseArrayCompat: void gc()
android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)
android.support.v4.util.SparseArrayCompat: int size()
android.support.v4.util.SparseArrayCompat: int keyAt(int)
android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)
android.support.v4.util.SparseArrayCompat: void setValueAt(int,java.lang.Object)
android.support.v4.util.SparseArrayCompat: int indexOfKey(int)
android.support.v4.util.SparseArrayCompat: int indexOfValue(java.lang.Object)
android.support.v4.util.SparseArrayCompat: void clear()
android.support.v4.util.SparseArrayCompat: void append(int,java.lang.Object)
android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)
android.support.v4.util.SparseArrayCompat: int idealByteArraySize(int)
android.support.v4.util.SparseArrayCompat: int idealIntArraySize(int)
android.support.v4.util.SparseArrayCompat: void <clinit>()
android.support.v4.util.TimeUtils
android.support.v4.util.TimeUtils: int HUNDRED_DAY_FIELD_LEN
android.support.v4.util.TimeUtils: int SECONDS_PER_MINUTE
android.support.v4.util.TimeUtils: int SECONDS_PER_HOUR
android.support.v4.util.TimeUtils: int SECONDS_PER_DAY
android.support.v4.util.TimeUtils: java.lang.Object sFormatSync
android.support.v4.util.TimeUtils: char[] sFormatStr
android.support.v4.util.TimeUtils: TimeUtils()
android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)
android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)
android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)
android.support.v4.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)
android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)
android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)
android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)
android.support.v4.util.TimeUtils: void <clinit>()
android.support.v4.view.AccessibilityDelegateCompat
android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL
android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object DEFAULT_DELEGATE
android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object mBridge
android.support.v4.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()
android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompat: void <clinit>()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: android.support.v4.view.AccessibilityDelegateCompat val$compat
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: android.support.v4.view.AccessibilityDelegateCompat val$compat
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: java.lang.Object getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: AccessibilityDelegateCompat$AccessibilityDelegateStubImpl()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompatIcs
android.support.v4.view.AccessibilityDelegateCompatIcs: AccessibilityDelegateCompatIcs()
android.support.v4.view.AccessibilityDelegateCompatIcs: java.lang.Object newAccessibilityDelegateDefaultImpl()
android.support.v4.view.AccessibilityDelegateCompatIcs: java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)
android.support.v4.view.AccessibilityDelegateCompatIcs: boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs: void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs: void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object)
android.support.v4.view.AccessibilityDelegateCompatIcs: void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs: boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$1
android.support.v4.view.AccessibilityDelegateCompatIcs$1: android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge
android.support.v4.view.AccessibilityDelegateCompatIcs$1: AccessibilityDelegateCompatIcs$1(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompatIcs$1: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean
android.support.v4.view.AccessibilityDelegateCompatJellyBean: AccessibilityDelegateCompatJellyBean()
android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)
android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View)
android.support.v4.view.AccessibilityDelegateCompatJellyBean: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: AccessibilityDelegateCompatJellyBean$1(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: void sendAccessibilityEvent(android.view.View,int)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: java.lang.Object getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
android.support.v4.view.KeyEventCompat
android.support.v4.view.KeyEventCompat: android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL
android.support.v4.view.KeyEventCompat: KeyEventCompat()
android.support.v4.view.KeyEventCompat: int normalizeMetaState(int)
android.support.v4.view.KeyEventCompat: boolean metaStateHasModifiers(int,int)
android.support.v4.view.KeyEventCompat: boolean metaStateHasNoModifiers(int)
android.support.v4.view.KeyEventCompat: boolean hasModifiers(android.view.KeyEvent,int)
android.support.v4.view.KeyEventCompat: boolean hasNoModifiers(android.view.KeyEvent)
android.support.v4.view.KeyEventCompat: void <clinit>()
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: int META_MODIFIER_MASK
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: int META_ALL_MASK
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: KeyEventCompat$BaseKeyEventVersionImpl()
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: int metaStateFilterDirectionalModifiers(int,int,int,int,int)
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: int normalizeMetaState(int)
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: boolean metaStateHasModifiers(int,int)
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: boolean metaStateHasNoModifiers(int)
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: KeyEventCompat$HoneycombKeyEventVersionImpl()
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: int normalizeMetaState(int)
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: boolean metaStateHasModifiers(int,int)
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: boolean metaStateHasNoModifiers(int)
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl: int normalizeMetaState(int)
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl: boolean metaStateHasModifiers(int,int)
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl: boolean metaStateHasNoModifiers(int)
android.support.v4.view.KeyEventCompatHoneycomb
android.support.v4.view.KeyEventCompatHoneycomb: KeyEventCompatHoneycomb()
android.support.v4.view.KeyEventCompatHoneycomb: int normalizeMetaState(int)
android.support.v4.view.KeyEventCompatHoneycomb: boolean metaStateHasModifiers(int,int)
android.support.v4.view.KeyEventCompatHoneycomb: boolean metaStateHasNoModifiers(int)
android.support.v4.view.MenuCompat
android.support.v4.view.MenuCompat: android.support.v4.view.MenuCompat$MenuVersionImpl IMPL
android.support.v4.view.MenuCompat: MenuCompat()
android.support.v4.view.MenuCompat: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuCompat: void <clinit>()
android.support.v4.view.MenuCompat$BaseMenuVersionImpl
android.support.v4.view.MenuCompat$BaseMenuVersionImpl: MenuCompat$BaseMenuVersionImpl()
android.support.v4.view.MenuCompat$BaseMenuVersionImpl: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl: MenuCompat$HoneycombMenuVersionImpl()
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuCompat$MenuVersionImpl
android.support.v4.view.MenuCompat$MenuVersionImpl: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuItemCompat
android.support.v4.view.MenuItemCompat: int SHOW_AS_ACTION_NEVER
android.support.v4.view.MenuItemCompat: int SHOW_AS_ACTION_IF_ROOM
android.support.v4.view.MenuItemCompat: int SHOW_AS_ACTION_ALWAYS
android.support.v4.view.MenuItemCompat: int SHOW_AS_ACTION_WITH_TEXT
android.support.v4.view.MenuItemCompat: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
android.support.v4.view.MenuItemCompat: android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL
android.support.v4.view.MenuItemCompat: MenuItemCompat()
android.support.v4.view.MenuItemCompat: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
android.support.v4.view.MenuItemCompat: void <clinit>()
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: MenuItemCompat$BaseMenuVersionImpl()
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: MenuItemCompat$HoneycombMenuVersionImpl()
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
android.support.v4.view.MenuItemCompat$MenuVersionImpl
android.support.v4.view.MenuItemCompat$MenuVersionImpl: boolean setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuItemCompat$MenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
android.support.v4.view.MenuItemCompatHoneycomb
android.support.v4.view.MenuItemCompatHoneycomb: MenuItemCompatHoneycomb()
android.support.v4.view.MenuItemCompatHoneycomb: void setShowAsAction(android.view.MenuItem,int)
android.support.v4.view.MenuItemCompatHoneycomb: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
android.support.v4.view.MotionEventCompat
android.support.v4.view.MotionEventCompat: android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL
android.support.v4.view.MotionEventCompat: int ACTION_MASK
android.support.v4.view.MotionEventCompat: int ACTION_POINTER_DOWN
android.support.v4.view.MotionEventCompat: int ACTION_POINTER_UP
android.support.v4.view.MotionEventCompat: int ACTION_HOVER_MOVE
android.support.v4.view.MotionEventCompat: int ACTION_SCROLL
android.support.v4.view.MotionEventCompat: int ACTION_POINTER_INDEX_MASK
android.support.v4.view.MotionEventCompat: int ACTION_POINTER_INDEX_SHIFT
android.support.v4.view.MotionEventCompat: int ACTION_HOVER_ENTER
android.support.v4.view.MotionEventCompat: int ACTION_HOVER_EXIT
android.support.v4.view.MotionEventCompat: MotionEventCompat()
android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)
android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)
android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat: void <clinit>()
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: MotionEventCompat$BaseMotionEventVersionImpl()
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: MotionEventCompat$EclairMotionEventVersionImpl()
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getX(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getY(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl: float getX(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl: float getY(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompatEclair
android.support.v4.view.MotionEventCompatEclair: MotionEventCompatEclair()
android.support.v4.view.MotionEventCompatEclair: int findPointerIndex(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompatEclair: int getPointerId(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)
android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)
android.support.v4.view.PagerAdapter
android.support.v4.view.PagerAdapter: android.database.DataSetObservable mObservable
android.support.v4.view.PagerAdapter: int POSITION_UNCHANGED
android.support.v4.view.PagerAdapter: int POSITION_NONE
android.support.v4.view.PagerAdapter: PagerAdapter()
android.support.v4.view.PagerAdapter: int getCount()
android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)
android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)
android.support.v4.view.PagerAdapter: void startUpdate(android.view.View)
android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
android.support.v4.view.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void finishUpdate(android.view.View)
android.support.v4.view.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()
android.support.v4.view.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)
android.support.v4.view.PagerAdapter: void notifyDataSetChanged()
android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)
android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)
android.support.v4.view.PagerAdapter: float getPageWidth(int)
android.support.v4.view.PagerTabStrip
android.support.v4.view.PagerTabStrip: java.lang.String TAG
android.support.v4.view.PagerTabStrip: int INDICATOR_HEIGHT
android.support.v4.view.PagerTabStrip: int MIN_PADDING_BOTTOM
android.support.v4.view.PagerTabStrip: int TAB_PADDING
android.support.v4.view.PagerTabStrip: int TAB_SPACING
android.support.v4.view.PagerTabStrip: int MIN_TEXT_SPACING
android.support.v4.view.PagerTabStrip: int FULL_UNDERLINE_HEIGHT
android.support.v4.view.PagerTabStrip: int MIN_STRIP_HEIGHT
android.support.v4.view.PagerTabStrip: int mIndicatorColor
android.support.v4.view.PagerTabStrip: int mIndicatorHeight
android.support.v4.view.PagerTabStrip: int mMinPaddingBottom
android.support.v4.view.PagerTabStrip: int mMinTextSpacing
android.support.v4.view.PagerTabStrip: int mMinStripHeight
android.support.v4.view.PagerTabStrip: int mTabPadding
android.support.v4.view.PagerTabStrip: android.graphics.Paint mTabPaint
android.support.v4.view.PagerTabStrip: android.graphics.Rect mTempRect
android.support.v4.view.PagerTabStrip: int mTabAlpha
android.support.v4.view.PagerTabStrip: boolean mDrawFullUnderline
android.support.v4.view.PagerTabStrip: boolean mDrawFullUnderlineSet
android.support.v4.view.PagerTabStrip: int mFullUnderlineHeight
android.support.v4.view.PagerTabStrip: boolean mIgnoreTap
android.support.v4.view.PagerTabStrip: float mInitialMotionX
android.support.v4.view.PagerTabStrip: float mInitialMotionY
android.support.v4.view.PagerTabStrip: int mTouchSlop
android.support.v4.view.PagerTabStrip: PagerTabStrip(android.content.Context)
android.support.v4.view.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColor(int)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColorResource(int)
android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()
android.support.v4.view.PagerTabStrip: void setPadding(int,int,int,int)
android.support.v4.view.PagerTabStrip: void setTextSpacing(int)
android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)
android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)
android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()
android.support.v4.view.PagerTabStrip: int getMinHeight()
android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)
android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)
android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)
android.support.v4.view.PagerTabStrip$1
android.support.v4.view.PagerTabStrip$1: android.support.v4.view.PagerTabStrip this$0
android.support.v4.view.PagerTabStrip$1: PagerTabStrip$1(android.support.v4.view.PagerTabStrip)
android.support.v4.view.PagerTabStrip$1: void onClick(android.view.View)
android.support.v4.view.PagerTabStrip$2
android.support.v4.view.PagerTabStrip$2: android.support.v4.view.PagerTabStrip this$0
android.support.v4.view.PagerTabStrip$2: PagerTabStrip$2(android.support.v4.view.PagerTabStrip)
android.support.v4.view.PagerTabStrip$2: void onClick(android.view.View)
android.support.v4.view.PagerTitleStrip
android.support.v4.view.PagerTitleStrip: java.lang.String TAG
android.support.v4.view.PagerTitleStrip: android.support.v4.view.ViewPager mPager
android.support.v4.view.PagerTitleStrip: android.widget.TextView mPrevText
android.support.v4.view.PagerTitleStrip: android.widget.TextView mCurrText
android.support.v4.view.PagerTitleStrip: android.widget.TextView mNextText
android.support.v4.view.PagerTitleStrip: int mLastKnownCurrentPage
android.support.v4.view.PagerTitleStrip: float mLastKnownPositionOffset
android.support.v4.view.PagerTitleStrip: int mScaledTextSpacing
android.support.v4.view.PagerTitleStrip: int mGravity
android.support.v4.view.PagerTitleStrip: boolean mUpdatingText
android.support.v4.view.PagerTitleStrip: boolean mUpdatingPositions
android.support.v4.view.PagerTitleStrip: android.support.v4.view.PagerTitleStrip$PageListener mPageListener
android.support.v4.view.PagerTitleStrip: int[] ATTRS
android.support.v4.view.PagerTitleStrip: int[] TEXT_ATTRS
android.support.v4.view.PagerTitleStrip: float SIDE_ALPHA
android.support.v4.view.PagerTitleStrip: int TEXT_SPACING
android.support.v4.view.PagerTitleStrip: int mNonPrimaryAlpha
android.support.v4.view.PagerTitleStrip: int mTextColor
android.support.v4.view.PagerTitleStrip: android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL
android.support.v4.view.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip: PagerTitleStrip(android.content.Context)
android.support.v4.view.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)
android.support.v4.view.PagerTitleStrip: int getTextSpacing()
android.support.v4.view.PagerTitleStrip: void setNonPrimaryAlpha(float)
android.support.v4.view.PagerTitleStrip: void setTextColor(int)
android.support.v4.view.PagerTitleStrip: void setTextSize(int,float)
android.support.v4.view.PagerTitleStrip: void setGravity(int)
android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()
android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()
android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)
android.support.v4.view.PagerTitleStrip: void requestLayout()
android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)
android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)
android.support.v4.view.PagerTitleStrip: void onLayout(boolean,int,int,int,int)
android.support.v4.view.PagerTitleStrip: int getMinHeight()
android.support.v4.view.PagerTitleStrip: void <clinit>()
android.support.v4.view.PagerTitleStrip$1
android.support.v4.view.PagerTitleStrip$PageListener
android.support.v4.view.PagerTitleStrip$PageListener: int mScrollState
android.support.v4.view.PagerTitleStrip$PageListener: android.support.v4.view.PagerTitleStrip this$0
android.support.v4.view.PagerTitleStrip$PageListener: PagerTitleStrip$PageListener(android.support.v4.view.PagerTitleStrip)
android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)
android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)
android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrollStateChanged(int)
android.support.v4.view.PagerTitleStrip$PageListener: void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
android.support.v4.view.PagerTitleStrip$PageListener: void onChanged()
android.support.v4.view.PagerTitleStrip$PageListener: PagerTitleStrip$PageListener(android.support.v4.view.PagerTitleStrip,android.support.v4.view.PagerTitleStrip$1)
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase: PagerTitleStrip$PagerTitleStripImplBase()
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs: PagerTitleStrip$PagerTitleStripImplIcs()
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStripIcs
android.support.v4.view.PagerTitleStripIcs: PagerTitleStripIcs()
android.support.v4.view.PagerTitleStripIcs: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform: java.lang.String TAG
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform: java.util.Locale mLocale
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform: PagerTitleStripIcs$SingleLineAllCapsTransform(android.content.Context)
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
android.support.v4.view.VelocityTrackerCompat
android.support.v4.view.VelocityTrackerCompat: android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL
android.support.v4.view.VelocityTrackerCompat: VelocityTrackerCompat()
android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat: void <clinit>()
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: VelocityTrackerCompat$BaseVelocityTrackerVersionImpl()
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl()
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompatHoneycomb
android.support.v4.view.VelocityTrackerCompatHoneycomb: VelocityTrackerCompatHoneycomb()
android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)
android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)
android.support.v4.view.ViewCompat
android.support.v4.view.ViewCompat: int OVER_SCROLL_ALWAYS
android.support.v4.view.ViewCompat: int OVER_SCROLL_IF_CONTENT_SCROLLS
android.support.v4.view.ViewCompat: int OVER_SCROLL_NEVER
android.support.v4.view.ViewCompat: long FAKE_FRAME_TIME
android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_AUTO
android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_YES
android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO
android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatImpl IMPL
android.support.v4.view.ViewCompat: ViewCompat()
android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)
android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)
android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)
android.support.v4.view.ViewCompat: void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.ViewCompat: boolean hasTransientState(android.view.View)
android.support.v4.view.ViewCompat: void setHasTransientState(android.view.View,boolean)
android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
android.support.v4.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)
android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
android.support.v4.view.ViewCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.ViewCompat: void <clinit>()
android.support.v4.view.ViewCompat$BaseViewCompatImpl
android.support.v4.view.ViewCompat$BaseViewCompatImpl: ViewCompat$BaseViewCompatImpl()
android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean canScrollHorizontally(android.view.View,int)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean canScrollVertically(android.view.View,int)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getOverScrollMode(android.view.View)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean hasTransientState(android.view.View)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setHasTransientState(android.view.View,boolean)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()
android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getImportantForAccessibility(android.view.View)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setImportantForAccessibility(android.view.View,int)
android.support.v4.view.ViewCompat$BaseViewCompatImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.ViewCompat$GBViewCompatImpl
android.support.v4.view.ViewCompat$GBViewCompatImpl: ViewCompat$GBViewCompatImpl()
android.support.v4.view.ViewCompat$GBViewCompatImpl: int getOverScrollMode(android.view.View)
android.support.v4.view.ViewCompat$GBViewCompatImpl: void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompat$HCViewCompatImpl
android.support.v4.view.ViewCompat$HCViewCompatImpl: ViewCompat$HCViewCompatImpl()
android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()
android.support.v4.view.ViewCompat$ICSViewCompatImpl
android.support.v4.view.ViewCompat$ICSViewCompatImpl: ViewCompat$ICSViewCompatImpl()
android.support.v4.view.ViewCompat$ICSViewCompatImpl: boolean canScrollHorizontally(android.view.View,int)
android.support.v4.view.ViewCompat$ICSViewCompatImpl: boolean canScrollVertically(android.view.View,int)
android.support.v4.view.ViewCompat$ICSViewCompatImpl: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat$ICSViewCompatImpl: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat$ICSViewCompatImpl: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.ViewCompat$ICSViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.ViewCompat$JBViewCompatImpl
android.support.v4.view.ViewCompat$JBViewCompatImpl: ViewCompat$JBViewCompatImpl()
android.support.v4.view.ViewCompat$JBViewCompatImpl: boolean hasTransientState(android.view.View)
android.support.v4.view.ViewCompat$JBViewCompatImpl: void setHasTransientState(android.view.View,boolean)
android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)
android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
android.support.v4.view.ViewCompat$JBViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)
android.support.v4.view.ViewCompat$JBViewCompatImpl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
android.support.v4.view.ViewCompat$JBViewCompatImpl: int getImportantForAccessibility(android.view.View)
android.support.v4.view.ViewCompat$JBViewCompatImpl: void setImportantForAccessibility(android.view.View,int)
android.support.v4.view.ViewCompat$JBViewCompatImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.ViewCompat$ViewCompatImpl
android.support.v4.view.ViewCompat$ViewCompatImpl: boolean canScrollHorizontally(android.view.View,int)
android.support.v4.view.ViewCompat$ViewCompatImpl: boolean canScrollVertically(android.view.View,int)
android.support.v4.view.ViewCompat$ViewCompatImpl: int getOverScrollMode(android.view.View)
android.support.v4.view.ViewCompat$ViewCompatImpl: void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompat$ViewCompatImpl: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat$ViewCompatImpl: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompat$ViewCompatImpl: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.ViewCompat$ViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.ViewCompat$ViewCompatImpl: boolean hasTransientState(android.view.View)
android.support.v4.view.ViewCompat$ViewCompatImpl: void setHasTransientState(android.view.View,boolean)
android.support.v4.view.ViewCompat$ViewCompatImpl: void postInvalidateOnAnimation(android.view.View)
android.support.v4.view.ViewCompat$ViewCompatImpl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
android.support.v4.view.ViewCompat$ViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)
android.support.v4.view.ViewCompat$ViewCompatImpl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
android.support.v4.view.ViewCompat$ViewCompatImpl: int getImportantForAccessibility(android.view.View)
android.support.v4.view.ViewCompat$ViewCompatImpl: void setImportantForAccessibility(android.view.View,int)
android.support.v4.view.ViewCompat$ViewCompatImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.ViewCompatGingerbread
android.support.v4.view.ViewCompatGingerbread: ViewCompatGingerbread()
android.support.v4.view.ViewCompatGingerbread: int getOverScrollMode(android.view.View)
android.support.v4.view.ViewCompatGingerbread: void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompatHC
android.support.v4.view.ViewCompatHC: ViewCompatHC()
android.support.v4.view.ViewCompatHC: long getFrameTime()
android.support.v4.view.ViewCompatICS
android.support.v4.view.ViewCompatICS: ViewCompatICS()
android.support.v4.view.ViewCompatICS: boolean canScrollHorizontally(android.view.View,int)
android.support.v4.view.ViewCompatICS: boolean canScrollVertically(android.view.View,int)
android.support.v4.view.ViewCompatICS: void setAccessibilityDelegate(android.view.View,java.lang.Object)
android.support.v4.view.ViewCompatICS: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompatICS: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewCompatICS: void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
android.support.v4.view.ViewCompatJB
android.support.v4.view.ViewCompatJB: ViewCompatJB()
android.support.v4.view.ViewCompatJB: boolean hasTransientState(android.view.View)
android.support.v4.view.ViewCompatJB: void setHasTransientState(android.view.View,boolean)
android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)
android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
android.support.v4.view.ViewCompatJB: void postOnAnimation(android.view.View,java.lang.Runnable)
android.support.v4.view.ViewCompatJB: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)
android.support.v4.view.ViewCompatJB: void setImportantForAccessibility(android.view.View,int)
android.support.v4.view.ViewCompatJB: java.lang.Object getAccessibilityNodeProvider(android.view.View)
android.support.v4.view.ViewConfigurationCompat
android.support.v4.view.ViewConfigurationCompat: android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL
android.support.v4.view.ViewConfigurationCompat: ViewConfigurationCompat()
android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
android.support.v4.view.ViewConfigurationCompat: void <clinit>()
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: ViewConfigurationCompat$BaseViewConfigurationVersionImpl()
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: ViewConfigurationCompat$FroyoViewConfigurationVersionImpl()
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
android.support.v4.view.ViewConfigurationCompatFroyo
android.support.v4.view.ViewConfigurationCompatFroyo: ViewConfigurationCompatFroyo()
android.support.v4.view.ViewConfigurationCompatFroyo: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
android.support.v4.view.ViewGroupCompat
android.support.v4.view.ViewGroupCompat: android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL
android.support.v4.view.ViewGroupCompat: ViewGroupCompat()
android.support.v4.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewGroupCompat: void <clinit>()
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl: ViewGroupCompat$ViewGroupCompatIcsImpl()
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl: ViewGroupCompat$ViewGroupCompatStubImpl()
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewGroupCompatIcs
android.support.v4.view.ViewGroupCompatIcs: ViewGroupCompatIcs()
android.support.v4.view.ViewGroupCompatIcs: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewPager
android.support.v4.view.ViewPager: java.lang.String TAG
android.support.v4.view.ViewPager: boolean DEBUG
android.support.v4.view.ViewPager: boolean USE_CACHE
android.support.v4.view.ViewPager: int DEFAULT_OFFSCREEN_PAGES
android.support.v4.view.ViewPager: int MAX_SETTLE_DURATION
android.support.v4.view.ViewPager: int MIN_DISTANCE_FOR_FLING
android.support.v4.view.ViewPager: int DEFAULT_GUTTER_SIZE
android.support.v4.view.ViewPager: int[] LAYOUT_ATTRS
android.support.v4.view.ViewPager: java.util.Comparator COMPARATOR
android.support.v4.view.ViewPager: android.view.animation.Interpolator sInterpolator
android.support.v4.view.ViewPager: java.util.ArrayList mItems
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem
android.support.v4.view.ViewPager: android.graphics.Rect mTempRect
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter
android.support.v4.view.ViewPager: int mCurItem
android.support.v4.view.ViewPager: int mRestoredCurItem
android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState
android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader
android.support.v4.view.ViewPager: android.widget.Scroller mScroller
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver
android.support.v4.view.ViewPager: int mPageMargin
android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable
android.support.v4.view.ViewPager: int mTopPageBounds
android.support.v4.view.ViewPager: int mBottomPageBounds
android.support.v4.view.ViewPager: float mFirstOffset
android.support.v4.view.ViewPager: float mLastOffset
android.support.v4.view.ViewPager: int mChildWidthMeasureSpec
android.support.v4.view.ViewPager: int mChildHeightMeasureSpec
android.support.v4.view.ViewPager: boolean mInLayout
android.support.v4.view.ViewPager: boolean mScrollingCacheEnabled
android.support.v4.view.ViewPager: boolean mPopulatePending
android.support.v4.view.ViewPager: int mOffscreenPageLimit
android.support.v4.view.ViewPager: boolean mIsBeingDragged
android.support.v4.view.ViewPager: boolean mIsUnableToDrag
android.support.v4.view.ViewPager: boolean mIgnoreGutter
android.support.v4.view.ViewPager: int mDefaultGutterSize
android.support.v4.view.ViewPager: int mGutterSize
android.support.v4.view.ViewPager: int mTouchSlop
android.support.v4.view.ViewPager: float mInitialMotionX
android.support.v4.view.ViewPager: float mLastMotionX
android.support.v4.view.ViewPager: float mLastMotionY
android.support.v4.view.ViewPager: int mActivePointerId
android.support.v4.view.ViewPager: int INVALID_POINTER
android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker
android.support.v4.view.ViewPager: int mMinimumVelocity
android.support.v4.view.ViewPager: int mMaximumVelocity
android.support.v4.view.ViewPager: int mFlingDistance
android.support.v4.view.ViewPager: int mCloseEnough
android.support.v4.view.ViewPager: int CLOSE_ENOUGH
android.support.v4.view.ViewPager: boolean mFakeDragging
android.support.v4.view.ViewPager: long mFakeDragBeginTime
android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge
android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge
android.support.v4.view.ViewPager: boolean mFirstLayout
android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets
android.support.v4.view.ViewPager: boolean mCalledSuper
android.support.v4.view.ViewPager: int mDecorChildCount
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener
android.support.v4.view.ViewPager: int SCROLL_STATE_IDLE
android.support.v4.view.ViewPager: int SCROLL_STATE_DRAGGING
android.support.v4.view.ViewPager: int SCROLL_STATE_SETTLING
android.support.v4.view.ViewPager: int mScrollState
android.support.v4.view.ViewPager: ViewPager(android.content.Context)
android.support.v4.view.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager: void initViewPager()
android.support.v4.view.ViewPager: void setScrollState(int)
android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager: void removeNonDecorViews()
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()
android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
android.support.v4.view.ViewPager: void setCurrentItem(int)
android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)
android.support.v4.view.ViewPager: int getCurrentItem()
android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)
android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)
android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: int getOffscreenPageLimit()
android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)
android.support.v4.view.ViewPager: void setPageMargin(int)
android.support.v4.view.ViewPager: int getPageMargin()
android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void setPageMarginDrawable(int)
android.support.v4.view.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void drawableStateChanged()
android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)
android.support.v4.view.ViewPager: void smoothScrollTo(int,int)
android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)
android.support.v4.view.ViewPager: void dataSetChanged()
android.support.v4.view.ViewPager: void populate()
android.support.v4.view.ViewPager: void populate(int)
android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)
android.support.v4.view.ViewPager: android.os.Parcelable onSaveInstanceState()
android.support.v4.view.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
android.support.v4.view.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)
android.support.v4.view.ViewPager: void onAttachedToWindow()
android.support.v4.view.ViewPager: void onMeasure(int,int)
android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)
android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)
android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)
android.support.v4.view.ViewPager: void computeScroll()
android.support.v4.view.ViewPager: boolean pageScrolled(int)
android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)
android.support.v4.view.ViewPager: void completeScroll()
android.support.v4.view.ViewPager: boolean isGutterDrag(float,float)
android.support.v4.view.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
android.support.v4.view.ViewPager: boolean performDrag(float)
android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()
android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)
android.support.v4.view.ViewPager: void draw(android.graphics.Canvas)
android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)
android.support.v4.view.ViewPager: boolean beginFakeDrag()
android.support.v4.view.ViewPager: void endFakeDrag()
android.support.v4.view.ViewPager: void fakeDragBy(float)
android.support.v4.view.ViewPager: boolean isFakeDragging()
android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)
android.support.v4.view.ViewPager: void endDrag()
android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)
android.support.v4.view.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
android.support.v4.view.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
android.support.v4.view.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
android.support.v4.view.ViewPager: boolean arrowScroll(int)
android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
android.support.v4.view.ViewPager: boolean pageLeft()
android.support.v4.view.ViewPager: boolean pageRight()
android.support.v4.view.ViewPager: void addFocusables(java.util.ArrayList,int,int)
android.support.v4.view.ViewPager: void addTouchables(java.util.ArrayList)
android.support.v4.view.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
android.support.v4.view.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
android.support.v4.view.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter access$100(android.support.v4.view.ViewPager)
android.support.v4.view.ViewPager: int access$200(android.support.v4.view.ViewPager)
android.support.v4.view.ViewPager: int[] access$300()
android.support.v4.view.ViewPager: void <clinit>()
android.support.v4.view.ViewPager$1
android.support.v4.view.ViewPager$1: ViewPager$1()
android.support.v4.view.ViewPager$1: int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo)
android.support.v4.view.ViewPager$1: int compare(java.lang.Object,java.lang.Object)
android.support.v4.view.ViewPager$2
android.support.v4.view.ViewPager$2: ViewPager$2()
android.support.v4.view.ViewPager$2: float getInterpolation(float)
android.support.v4.view.ViewPager$Decor
android.support.v4.view.ViewPager$ItemInfo
android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object
android.support.v4.view.ViewPager$ItemInfo: int position
android.support.v4.view.ViewPager$ItemInfo: boolean scrolling
android.support.v4.view.ViewPager$ItemInfo: float widthFactor
android.support.v4.view.ViewPager$ItemInfo: float offset
android.support.v4.view.ViewPager$ItemInfo: ViewPager$ItemInfo()
android.support.v4.view.ViewPager$LayoutParams
android.support.v4.view.ViewPager$LayoutParams: boolean isDecor
android.support.v4.view.ViewPager$LayoutParams: int gravity
android.support.v4.view.ViewPager$LayoutParams: float widthFactor
android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure
android.support.v4.view.ViewPager$LayoutParams: ViewPager$LayoutParams()
android.support.v4.view.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager$MyAccessibilityDelegate
android.support.v4.view.ViewPager$MyAccessibilityDelegate: android.support.v4.view.ViewPager this$0
android.support.v4.view.ViewPager$MyAccessibilityDelegate: ViewPager$MyAccessibilityDelegate(android.support.v4.view.ViewPager)
android.support.v4.view.ViewPager$MyAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
android.support.v4.view.ViewPager$MyAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
android.support.v4.view.ViewPager$OnAdapterChangeListener
android.support.v4.view.ViewPager$OnAdapterChangeListener: void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager$OnPageChangeListener
android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)
android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)
android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)
android.support.v4.view.ViewPager$PagerObserver
android.support.v4.view.ViewPager$PagerObserver: android.support.v4.view.ViewPager this$0
android.support.v4.view.ViewPager$PagerObserver: ViewPager$PagerObserver(android.support.v4.view.ViewPager)
android.support.v4.view.ViewPager$PagerObserver: void onChanged()
android.support.v4.view.ViewPager$PagerObserver: void onInvalidated()
android.support.v4.view.ViewPager$PagerObserver: ViewPager$PagerObserver(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$1)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: int position
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState
android.support.v4.view.ViewPager$SavedState: java.lang.ClassLoader loader
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.view.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcelable)
android.support.v4.view.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)
android.support.v4.view.ViewPager$SavedState: java.lang.String toString()
android.support.v4.view.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.view.ViewPager$SavedState: void <clinit>()
android.support.v4.view.ViewPager$SavedState$1
android.support.v4.view.ViewPager$SavedState$1: ViewPager$SavedState$1()
android.support.v4.view.ViewPager$SavedState$1: android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.view.ViewPager$SavedState$1: android.support.v4.view.ViewPager$SavedState[] newArray(int)
android.support.v4.view.ViewPager$SavedState$1: java.lang.Object[] newArray(int)
android.support.v4.view.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.view.ViewPager$SimpleOnPageChangeListener
android.support.v4.view.ViewPager$SimpleOnPageChangeListener: ViewPager$SimpleOnPageChangeListener()
android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)
android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)
android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)
android.support.v4.view.accessibility.AccessibilityEventCompat
android.support.v4.view.accessibility.AccessibilityEventCompat: android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_ENTER
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_EXIT
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_START
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_END
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOW_CONTENT_CHANGED
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_SCROLLED
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_SELECTION_CHANGED
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_ANNOUNCEMENT
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUSED
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
android.support.v4.view.accessibility.AccessibilityEventCompat: int TYPES_ALL_MASK
android.support.v4.view.accessibility.AccessibilityEventCompat: AccessibilityEventCompat()
android.support.v4.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)
android.support.v4.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat)
android.support.v4.view.accessibility.AccessibilityEventCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
android.support.v4.view.accessibility.AccessibilityEventCompat: void <clinit>()
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl: AccessibilityEventCompat$AccessibilityEventIcsImpl()
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl: void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl: java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl: int getRecordCount(android.view.accessibility.AccessibilityEvent)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl: AccessibilityEventCompat$AccessibilityEventStubImpl()
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl: void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl: java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl: int getRecordCount(android.view.accessibility.AccessibilityEvent)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl: int getRecordCount(android.view.accessibility.AccessibilityEvent)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl: void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl: java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int)
android.support.v4.view.accessibility.AccessibilityEventCompatIcs
android.support.v4.view.accessibility.AccessibilityEventCompatIcs: AccessibilityEventCompatIcs()
android.support.v4.view.accessibility.AccessibilityEventCompatIcs: int getRecordCount(android.view.accessibility.AccessibilityEvent)
android.support.v4.view.accessibility.AccessibilityEventCompatIcs: void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
android.support.v4.view.accessibility.AccessibilityEventCompatIcs: java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int)
android.support.v4.view.accessibility.AccessibilityManagerCompat
android.support.v4.view.accessibility.AccessibilityManagerCompat: android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL
android.support.v4.view.accessibility.AccessibilityManagerCompat: AccessibilityManagerCompat()
android.support.v4.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
android.support.v4.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat: android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000()
android.support.v4.view.accessibility.AccessibilityManagerCompat: void <clinit>()
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: AccessibilityManagerCompat$AccessibilityManagerIcsImpl()
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1: android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1: android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1: AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1: void onAccessibilityStateChanged(boolean)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: AccessibilityManagerCompat$AccessibilityManagerStubImpl()
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl: java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: java.lang.Object mListener
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat()
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: void onAccessibilityStateChanged(boolean)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: AccessibilityManagerCompatIcs()
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1: android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1: AccessibilityManagerCompatIcs$1(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1: void onAccessibilityStateChanged(boolean)
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge: void onAccessibilityStateChanged(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object mInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_FOCUS
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_FOCUS
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SELECT
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_SELECTION
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLICK
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_LONG_CLICK
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_ACCESSIBILITY_FOCUS
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_ACCESSIBILITY_FOCUS
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_HTML_ELEMENT
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_HTML_ELEMENT
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_FORWARD
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_BACKWARD
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_INPUT
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_ACCESSIBILITY
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_CHARACTER
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_WORD
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_LINE
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PARAGRAPH
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PAGE
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void recycle()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void <clinit>()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object obtain(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void addAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void addChild(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: int getActions(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void getBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void getBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object getChild(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: int getChildCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getPackageName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object getParent(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isCheckable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isFocusable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isLongClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean isSelected(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean performAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setCheckable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setFocusable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setLongClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setParent(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setSelected(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object obtain(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object obtain(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object findFocus(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object focusSearch(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: int getChildCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object getChild(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void addChild(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void addChild(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: int getActions(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void addAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean performAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean performAction(java.lang.Object,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setMovementGranularities(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: int getMovementGranularities(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.Object getParent(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setParent(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setParent(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void getBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void getBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isCheckable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setCheckable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isFocusable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setFocusable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isVisibleToUser(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setVisibleToUser(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isAccessibilityFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setAccessibilityFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isSelected(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setSelected(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isLongClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setLongClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.CharSequence getPackageName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.CharSequence getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: java.lang.Object obtain(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: java.lang.Object findFocus(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: java.lang.Object focusSearch(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void addChild(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: boolean isVisibleToUser(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setVisibleToUser(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: boolean isAccessibilityFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setAccessibilityFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: boolean performAction(java.lang.Object,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setMovementGranularities(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: int getMovementGranularities(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setParent(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object obtain(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object obtain(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void addAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void addChild(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void addChild(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getActions(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void getBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void getBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object getChild(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getChildCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getPackageName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object getParent(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isCheckable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isFocusable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isVisibleToUser(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isAccessibilityFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isLongClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean isSelected(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean performAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: boolean performAction(java.lang.Object,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setMovementGranularities(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getMovementGranularities(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setCheckable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setFocusable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setVisibleToUser(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setAccessibilityFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setLongClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setParent(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSelected(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object findFocus(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object focusSearch(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setParent(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: AccessibilityNodeInfoCompatIcs()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object obtain(android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void addAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void addChild(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getActions(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void getBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void getBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getChild(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getChildCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getPackageName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getParent(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isCheckable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isFocusable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isLongClickable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean isSelected(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean performAction(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInParent(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setCheckable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setFocusable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setLongClickable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPackageName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setParent(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setSelected(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: AccessibilityNodeInfoCompatJellyBean()
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void addChild(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: boolean isVisibleToUser(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setVisibleToUser(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: boolean performAction(java.lang.Object,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setMovementGranularities(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: int getMovementGranularities(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: java.lang.Object obtain(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: java.lang.Object findFocus(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: java.lang.Object focusSearch(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setParent(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: boolean isAccessibilityFocused(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setAccesibilityFocused(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat()
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: void <clinit>()
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl: java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl: AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl()
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl: java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: boolean performAction(int,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: java.lang.Object createAccessibilityNodeInfo(int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl: AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl()
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl: java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean: AccessibilityNodeProviderCompatJellyBean()
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean: java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: AccessibilityNodeProviderCompatJellyBean$1(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: boolean performAction(int,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge: java.lang.Object createAccessibilityNodeInfo(int)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge: boolean performAction(int,int,android.os.Bundle)
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat
android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL
android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object mRecord
android.support.v4.view.accessibility.AccessibilityRecordCompat: AccessibilityRecordCompat(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()
android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat)
android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat obtain()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource()
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getWindowId()
android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isChecked()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isPassword()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getItemCount()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getFromIndex()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getToIndex()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollX()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollY()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getAddedCount()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)
android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat: java.util.List getText()
android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()
android.support.v4.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)
android.support.v4.view.accessibility.AccessibilityRecordCompat: void recycle()
android.support.v4.view.accessibility.AccessibilityRecordCompat: int hashCode()
android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat: void <clinit>()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: AccessibilityRecordCompat$AccessibilityRecordIcsImpl()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getAddedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.CharSequence getBeforeText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getCurrentItemIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getFromIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getItemCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: android.os.Parcelable getParcelableData(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getRemovedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.util.List getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getToIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: boolean isFullScreen(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setAddedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setBeforeText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setCurrentItemIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setFromIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setFullScreen(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setItemCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setParcelableData(java.lang.Object,android.os.Parcelable)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setRemovedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setToIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: int getMaxScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: int getMaxScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: void setMaxScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: void setMaxScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: boolean isFullScreen(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setFullScreen(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getItemCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setItemCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getCurrentItemIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setCurrentItemIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getFromIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setFromIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getToIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setToIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getMaxScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setMaxScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getMaxScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setMaxScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getAddedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setAddedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: int getRemovedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setRemovedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: java.util.List getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: java.lang.CharSequence getBeforeText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setBeforeText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: android.os.Parcelable getParcelableData(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void setParcelableData(java.lang.Object,android.os.Parcelable)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl: AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: AccessibilityRecordCompat$AccessibilityRecordStubImpl()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getAddedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.CharSequence getBeforeText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getCurrentItemIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getFromIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getItemCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getMaxScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getMaxScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: android.os.Parcelable getParcelableData(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getRemovedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.util.List getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getToIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: boolean isFullScreen(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setAddedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setBeforeText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setCurrentItemIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setFromIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setFullScreen(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setItemCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setMaxScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setMaxScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setParcelableData(java.lang.Object,android.os.Parcelable)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setRemovedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setToIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: AccessibilityRecordCompatIcs()
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object obtain()
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object obtain(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getAddedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getBeforeText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getCurrentItemIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getFromIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getItemCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: android.os.Parcelable getParcelableData(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getRemovedCount(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object getSource(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.util.List getText(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getToIndex(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getWindowId(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: boolean isChecked(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: boolean isEnabled(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: boolean isFullScreen(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: boolean isPassword(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: boolean isScrollable(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void recycle(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setAddedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setBeforeText(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setChecked(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setCurrentItemIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setEnabled(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setFromIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setFullScreen(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setItemCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setParcelableData(java.lang.Object,android.os.Parcelable)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setPassword(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setRemovedCount(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollable(java.lang.Object,boolean)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setSource(java.lang.Object,android.view.View)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setToIndex(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: AccessibilityRecordCompatIcsMr1()
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: int getMaxScrollX(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: int getMaxScrollY(java.lang.Object)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: void setMaxScrollX(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: void setMaxScrollY(java.lang.Object,int)
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean: AccessibilityRecordCompatJellyBean()
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)
android.support.v4.widget.CursorAdapter
android.support.v4.widget.CursorAdapter: boolean mDataValid
android.support.v4.widget.CursorAdapter: boolean mAutoRequery
android.support.v4.widget.CursorAdapter: android.database.Cursor mCursor
android.support.v4.widget.CursorAdapter: android.content.Context mContext
android.support.v4.widget.CursorAdapter: int mRowIDColumn
android.support.v4.widget.CursorAdapter: android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver
android.support.v4.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
android.support.v4.widget.CursorAdapter: android.support.v4.widget.CursorFilter mCursorFilter
android.support.v4.widget.CursorAdapter: android.widget.FilterQueryProvider mFilterQueryProvider
android.support.v4.widget.CursorAdapter: int FLAG_AUTO_REQUERY
android.support.v4.widget.CursorAdapter: int FLAG_REGISTER_CONTENT_OBSERVER
android.support.v4.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor)
android.support.v4.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
android.support.v4.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,int)
android.support.v4.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)
android.support.v4.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)
android.support.v4.widget.CursorAdapter: android.database.Cursor getCursor()
android.support.v4.widget.CursorAdapter: int getCount()
android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)
android.support.v4.widget.CursorAdapter: long getItemId(int)
android.support.v4.widget.CursorAdapter: boolean hasStableIds()
android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
android.support.v4.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
android.support.v4.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.support.v4.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.support.v4.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
android.support.v4.widget.CursorAdapter: void changeCursor(android.database.Cursor)
android.support.v4.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
android.support.v4.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
android.support.v4.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
android.support.v4.widget.CursorAdapter: android.widget.Filter getFilter()
android.support.v4.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()
android.support.v4.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)
android.support.v4.widget.CursorAdapter: void onContentChanged()
android.support.v4.widget.CursorAdapter$1
android.support.v4.widget.CursorAdapter$ChangeObserver
android.support.v4.widget.CursorAdapter$ChangeObserver: android.support.v4.widget.CursorAdapter this$0
android.support.v4.widget.CursorAdapter$ChangeObserver: CursorAdapter$ChangeObserver(android.support.v4.widget.CursorAdapter)
android.support.v4.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()
android.support.v4.widget.CursorAdapter$ChangeObserver: void onChange(boolean)
android.support.v4.widget.CursorAdapter$MyDataSetObserver
android.support.v4.widget.CursorAdapter$MyDataSetObserver: android.support.v4.widget.CursorAdapter this$0
android.support.v4.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(android.support.v4.widget.CursorAdapter)
android.support.v4.widget.CursorAdapter$MyDataSetObserver: void onChanged()
android.support.v4.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()
android.support.v4.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$1)
android.support.v4.widget.CursorFilter
android.support.v4.widget.CursorFilter: android.support.v4.widget.CursorFilter$CursorFilterClient mClient
android.support.v4.widget.CursorFilter: CursorFilter(android.support.v4.widget.CursorFilter$CursorFilterClient)
android.support.v4.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)
android.support.v4.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
android.support.v4.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
android.support.v4.widget.CursorFilter$CursorFilterClient
android.support.v4.widget.CursorFilter$CursorFilterClient: java.lang.CharSequence convertToString(android.database.Cursor)
android.support.v4.widget.CursorFilter$CursorFilterClient: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
android.support.v4.widget.CursorFilter$CursorFilterClient: android.database.Cursor getCursor()
android.support.v4.widget.CursorFilter$CursorFilterClient: void changeCursor(android.database.Cursor)
android.support.v4.widget.EdgeEffectCompat
android.support.v4.widget.EdgeEffectCompat: java.lang.Object mEdgeEffect
android.support.v4.widget.EdgeEffectCompat: android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL
android.support.v4.widget.EdgeEffectCompat: EdgeEffectCompat(android.content.Context)
android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)
android.support.v4.widget.EdgeEffectCompat: boolean isFinished()
android.support.v4.widget.EdgeEffectCompat: void finish()
android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)
android.support.v4.widget.EdgeEffectCompat: boolean onRelease()
android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)
android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)
android.support.v4.widget.EdgeEffectCompat: void <clinit>()
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: EdgeEffectCompat$BaseEdgeEffectImpl()
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: java.lang.Object newEdgeEffect(android.content.Context)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void setSize(java.lang.Object,int,int)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean isFinished(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void finish(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onPull(java.lang.Object,float)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onRelease(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean draw(java.lang.Object,android.graphics.Canvas)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: EdgeEffectCompat$EdgeEffectIcsImpl()
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: java.lang.Object newEdgeEffect(android.content.Context)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void setSize(java.lang.Object,int,int)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean isFinished(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void finish(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onPull(java.lang.Object,float)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onRelease(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean draw(java.lang.Object,android.graphics.Canvas)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: java.lang.Object newEdgeEffect(android.content.Context)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: void setSize(java.lang.Object,int,int)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: boolean isFinished(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: void finish(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: boolean onPull(java.lang.Object,float)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: boolean onRelease(java.lang.Object)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl: boolean draw(java.lang.Object,android.graphics.Canvas)
android.support.v4.widget.EdgeEffectCompatIcs
android.support.v4.widget.EdgeEffectCompatIcs: EdgeEffectCompatIcs()
android.support.v4.widget.EdgeEffectCompatIcs: java.lang.Object newEdgeEffect(android.content.Context)
android.support.v4.widget.EdgeEffectCompatIcs: void setSize(java.lang.Object,int,int)
android.support.v4.widget.EdgeEffectCompatIcs: boolean isFinished(java.lang.Object)
android.support.v4.widget.EdgeEffectCompatIcs: void finish(java.lang.Object)
android.support.v4.widget.EdgeEffectCompatIcs: boolean onPull(java.lang.Object,float)
android.support.v4.widget.EdgeEffectCompatIcs: boolean onRelease(java.lang.Object)
android.support.v4.widget.EdgeEffectCompatIcs: boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompatIcs: boolean draw(java.lang.Object,android.graphics.Canvas)
android.support.v4.widget.ResourceCursorAdapter
android.support.v4.widget.ResourceCursorAdapter: int mLayout
android.support.v4.widget.ResourceCursorAdapter: int mDropDownLayout
android.support.v4.widget.ResourceCursorAdapter: android.view.LayoutInflater mInflater
android.support.v4.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor)
android.support.v4.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
android.support.v4.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,int)
android.support.v4.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.support.v4.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.support.v4.widget.ResourceCursorAdapter: void setViewResource(int)
android.support.v4.widget.ResourceCursorAdapter: void setDropDownViewResource(int)
android.support.v4.widget.ScrollerCompat
android.support.v4.widget.ScrollerCompat: android.widget.Scroller mScroller
android.support.v4.widget.ScrollerCompat: android.support.v4.widget.ScrollerCompat from(android.content.Context)
android.support.v4.widget.ScrollerCompat: ScrollerCompat(android.content.Context)
android.support.v4.widget.ScrollerCompat: boolean isFinished()
android.support.v4.widget.ScrollerCompat: int getDuration()
android.support.v4.widget.ScrollerCompat: int getCurrX()
android.support.v4.widget.ScrollerCompat: int getCurrY()
android.support.v4.widget.ScrollerCompat: float getCurrVelocity()
android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()
android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int)
android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int,int)
android.support.v4.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)
android.support.v4.widget.ScrollerCompat: void abortAnimation()
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs: ScrollerCompat$ScrollerCompatImplIcs(android.content.Context)
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs: float getCurrVelocity()
android.support.v4.widget.ScrollerCompatIcs
android.support.v4.widget.ScrollerCompatIcs: ScrollerCompatIcs()
android.support.v4.widget.ScrollerCompatIcs: float getCurrVelocity(android.widget.Scroller)
android.support.v4.widget.SearchViewCompat
android.support.v4.widget.SearchViewCompat: android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL
android.support.v4.widget.SearchViewCompat: SearchViewCompat(android.content.Context)
android.support.v4.widget.SearchViewCompat: android.view.View newSearchView(android.content.Context)
android.support.v4.widget.SearchViewCompat: void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
android.support.v4.widget.SearchViewCompat: android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000()
android.support.v4.widget.SearchViewCompat: void <clinit>()
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat: java.lang.Object mListener
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat: SearchViewCompat$OnQueryTextListenerCompat()
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat: boolean onQueryTextSubmit(java.lang.String)
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat: boolean onQueryTextChange(java.lang.String)
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl: SearchViewCompat$SearchViewCompatHoneycombImpl()
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl: android.view.View newSearchView(android.content.Context)
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl: java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl: void setOnQueryTextListener(java.lang.Object,java.lang.Object)
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1: android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1: android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1: SearchViewCompat$SearchViewCompatHoneycombImpl$1(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1: boolean onQueryTextSubmit(java.lang.String)
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1: boolean onQueryTextChange(java.lang.String)
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl: android.view.View newSearchView(android.content.Context)
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl: java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl: void setOnQueryTextListener(java.lang.Object,java.lang.Object)
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl: SearchViewCompat$SearchViewCompatStubImpl()
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl: android.view.View newSearchView(android.content.Context)
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl: java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl: void setOnQueryTextListener(java.lang.Object,java.lang.Object)
android.support.v4.widget.SearchViewCompatHoneycomb
android.support.v4.widget.SearchViewCompatHoneycomb: SearchViewCompatHoneycomb()
android.support.v4.widget.SearchViewCompatHoneycomb: android.view.View newSearchView(android.content.Context)
android.support.v4.widget.SearchViewCompatHoneycomb: java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge)
android.support.v4.widget.SearchViewCompatHoneycomb: void setOnQueryTextListener(java.lang.Object,java.lang.Object)
android.support.v4.widget.SearchViewCompatHoneycomb$1
android.support.v4.widget.SearchViewCompatHoneycomb$1: android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener
android.support.v4.widget.SearchViewCompatHoneycomb$1: SearchViewCompatHoneycomb$1(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge)
android.support.v4.widget.SearchViewCompatHoneycomb$1: boolean onQueryTextSubmit(java.lang.String)
android.support.v4.widget.SearchViewCompatHoneycomb$1: boolean onQueryTextChange(java.lang.String)
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge: boolean onQueryTextSubmit(java.lang.String)
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge: boolean onQueryTextChange(java.lang.String)
android.support.v4.widget.SimpleCursorAdapter
android.support.v4.widget.SimpleCursorAdapter: int[] mFrom
android.support.v4.widget.SimpleCursorAdapter: int[] mTo
android.support.v4.widget.SimpleCursorAdapter: int mStringConversionColumn
android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter
android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder
android.support.v4.widget.SimpleCursorAdapter: java.lang.String[] mOriginalFrom
android.support.v4.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])
android.support.v4.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)
android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder()
android.support.v4.widget.SimpleCursorAdapter: void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder)
android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)
android.support.v4.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)
android.support.v4.widget.SimpleCursorAdapter: int getStringConversionColumn()
android.support.v4.widget.SimpleCursorAdapter: void setStringConversionColumn(int)
android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()
android.support.v4.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter)
android.support.v4.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
android.support.v4.widget.SimpleCursorAdapter: void findColumns(java.lang.String[])
android.support.v4.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
android.support.v4.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)
android.support.v4.widget.SimpleCursorAdapter$ViewBinder
android.support.v4.widget.SimpleCursorAdapter$ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)
api.DevUser
api.DevUser: java.lang.String user
api.DevUser: DevUser()
cn.ac.ia.directtrans.json.AddQuestionReturn
cn.ac.ia.directtrans.json.AddQuestionReturn: long id
cn.ac.ia.directtrans.json.AddQuestionReturn: int flag
cn.ac.ia.directtrans.json.AddQuestionReturn: java.util.Date time
cn.ac.ia.directtrans.json.AddQuestionReturn: int count
cn.ac.ia.directtrans.json.AddQuestionReturn: AddQuestionReturn()
cn.ac.ia.directtrans.json.AskTask
cn.ac.ia.directtrans.json.AskTask: long id
cn.ac.ia.directtrans.json.AskTask: AskTask()
cn.ac.ia.directtrans.json.CommFunction
cn.ac.ia.directtrans.json.CommFunction: CommFunction()
cn.ac.ia.directtrans.json.CommFunction: java.lang.String getTimeString()
cn.ac.ia.directtrans.json.DefineRequestFlag
cn.ac.ia.directtrans.json.DefineRequestFlag: int SUCCEED
cn.ac.ia.directtrans.json.DefineRequestFlag: int NO_LOGIN
cn.ac.ia.directtrans.json.DefineRequestFlag: int SERVER_ERROR
cn.ac.ia.directtrans.json.DefineRequestFlag: DefineRequestFlag()
cn.ac.ia.directtrans.json.DefineType
cn.ac.ia.directtrans.json.DefineType: java.lang.String POST_TYPE_STR
cn.ac.ia.directtrans.json.DefineType: java.lang.String POST_TYPE_BIN
cn.ac.ia.directtrans.json.DefineType: java.lang.String POST_TYPE
cn.ac.ia.directtrans.json.DefineType: java.lang.String POST_CMD
cn.ac.ia.directtrans.json.DefineType: java.lang.String POST_ID
cn.ac.ia.directtrans.json.DefineType: long SYSTEM_ID
cn.ac.ia.directtrans.json.DefineType: java.lang.String SYSTEM_NAME
cn.ac.ia.directtrans.json.DefineType: DefineType()
cn.ac.ia.directtrans.json.DefineType$Link
cn.ac.ia.directtrans.json.DefineType$Link: java.lang.String LINKMAN
cn.ac.ia.directtrans.json.DefineType$Link: java.lang.String MEETING
cn.ac.ia.directtrans.json.DefineType$Link: void <clinit>()
cn.ac.ia.directtrans.json.DefineType$Link: DefineType$Link()
cn.ac.ia.directtrans.json.Json
cn.ac.ia.directtrans.json.Json: Json()
cn.ac.ia.directtrans.json.Json: java.lang.String toJson()
cn.ac.ia.directtrans.json.Json: java.lang.String toJson(java.lang.Object)
cn.ac.ia.directtrans.json.Json: java.lang.Object fromJson(java.lang.String,java.lang.Class)
cn.ac.ia.directtrans.json.Json: cn.ac.ia.directtrans.json.Json fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonBin
cn.ac.ia.directtrans.json.JsonBin: byte[] bin
cn.ac.ia.directtrans.json.JsonBin: JsonBin()
cn.ac.ia.directtrans.json.JsonByteArray
cn.ac.ia.directtrans.json.JsonByteArray: byte[] byteArray
cn.ac.ia.directtrans.json.JsonByteArray: JsonByteArray()
cn.ac.ia.directtrans.json.JsonByteArray: java.lang.String toString(byte[])
cn.ac.ia.directtrans.json.JsonByteArray: byte[] toByteArray()
cn.ac.ia.directtrans.json.JsonByteArray: void setData(byte[])
cn.ac.ia.directtrans.json.JsonByteArray: java.lang.String getJson()
cn.ac.ia.directtrans.json.JsonData
cn.ac.ia.directtrans.json.JsonData: java.lang.String function
cn.ac.ia.directtrans.json.JsonData: java.lang.String json
cn.ac.ia.directtrans.json.JsonData: java.util.ArrayList items
cn.ac.ia.directtrans.json.JsonData: cn.ac.ia.directtrans.json.JsonData get(int)
cn.ac.ia.directtrans.json.JsonData: int count()
cn.ac.ia.directtrans.json.JsonData: void add(cn.ac.ia.directtrans.json.JsonData)
cn.ac.ia.directtrans.json.JsonData: void add(java.lang.String,java.lang.Object)
cn.ac.ia.directtrans.json.JsonData: JsonData()
cn.ac.ia.directtrans.json.JsonData: java.lang.Object toClass(java.lang.Class)
cn.ac.ia.directtrans.json.JsonData: JsonData(java.lang.String,java.lang.String)
cn.ac.ia.directtrans.json.JsonEditLinkman
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String CMD_ADD
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String CMD_DELETE
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String CMD_INVITE
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String CMD_INVITE_RET
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String cmd
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String email
cn.ac.ia.directtrans.json.JsonEditLinkman: long id
cn.ac.ia.directtrans.json.JsonEditLinkman: java.lang.String name
cn.ac.ia.directtrans.json.JsonEditLinkman: JsonEditLinkman()
cn.ac.ia.directtrans.json.JsonEditLinkman: void setInviteLinkman(long)
cn.ac.ia.directtrans.json.JsonEditLinkman: void setAddLinkman(long,java.lang.String,java.lang.String)
cn.ac.ia.directtrans.json.JsonEditLinkman: void setDeleteLinkman(long)
cn.ac.ia.directtrans.json.JsonEditLinkman: cn.ac.ia.directtrans.json.JsonEditLinkman fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonEditLinkman: void setInviteRespond(long)
cn.ac.ia.directtrans.json.JsonEditLinkman: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonFindLinkman
cn.ac.ia.directtrans.json.JsonFindLinkman: java.lang.String TYPE_NAME
cn.ac.ia.directtrans.json.JsonFindLinkman: java.lang.String TYPE_EMAIL
cn.ac.ia.directtrans.json.JsonFindLinkman: java.lang.String text
cn.ac.ia.directtrans.json.JsonFindLinkman: java.lang.String type
cn.ac.ia.directtrans.json.JsonFindLinkman: java.lang.String from
cn.ac.ia.directtrans.json.JsonFindLinkman: java.lang.String to
cn.ac.ia.directtrans.json.JsonFindLinkman: JsonFindLinkman()
cn.ac.ia.directtrans.json.JsonFindLinkman: cn.ac.ia.directtrans.json.JsonFindLinkman fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonFindLinkman: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonFindLinkman$ReusltFlag
cn.ac.ia.directtrans.json.JsonFindLinkman$ReusltFlag: java.lang.String DB_ERROR
cn.ac.ia.directtrans.json.JsonFindLinkman$ReusltFlag: java.lang.String DATA_ERROR
cn.ac.ia.directtrans.json.JsonFindLinkman$ReusltFlag: JsonFindLinkman$ReusltFlag()
cn.ac.ia.directtrans.json.JsonFindNearby
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String TYPE_NAME
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String TYPE_EMAIL
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String text
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String type
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String longitude
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String latitude
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String radius
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String from
cn.ac.ia.directtrans.json.JsonFindNearby: java.lang.String to
cn.ac.ia.directtrans.json.JsonFindNearby: JsonFindNearby()
cn.ac.ia.directtrans.json.JsonFindNearby: cn.ac.ia.directtrans.json.JsonFindNearby fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonFindNearby: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonFindNearby$ReusltFlag
cn.ac.ia.directtrans.json.JsonFindNearby$ReusltFlag: java.lang.String DB_ERROR
cn.ac.ia.directtrans.json.JsonFindNearby$ReusltFlag: java.lang.String DATA_ERROR
cn.ac.ia.directtrans.json.JsonFindNearby$ReusltFlag: JsonFindNearby$ReusltFlag()
cn.ac.ia.directtrans.json.JsonFunction
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String REGISTER
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String LOGIN
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String LOGOUT
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String NO_LOGIN
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String EDIT_LINKMAN
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String FIND_LINKMAN
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String FIND_NEARBY
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String SEND_MSG
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String QUESTION
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String SEND_IMG
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String GET_MSG
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String GET_MEETING
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String DELETE_MEETING
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String GET_LINKMAN
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String EDIT_MEETING
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String QUESTION_LIST
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String EDIT_USER
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String GET_PHOTO
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String ONLINE_LINKMAN
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String SET_PHOTO
cn.ac.ia.directtrans.json.JsonFunction: java.lang.String SET_USER
cn.ac.ia.directtrans.json.JsonFunction: JsonFunction()
cn.ac.ia.directtrans.json.JsonGetLinkman
cn.ac.ia.directtrans.json.JsonGetLinkman: long linkmanId
cn.ac.ia.directtrans.json.JsonGetLinkman: JsonGetLinkman()
cn.ac.ia.directtrans.json.JsonGetLinkman: cn.ac.ia.directtrans.json.JsonGetLinkman fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetLinkman: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMeetings
cn.ac.ia.directtrans.json.JsonGetMeetings: java.lang.String GET_MEETINGS
cn.ac.ia.directtrans.json.JsonGetMeetings: java.lang.String GET_ITEMS
cn.ac.ia.directtrans.json.JsonGetMeetings: java.lang.String cmd
cn.ac.ia.directtrans.json.JsonGetMeetings: long linkId
cn.ac.ia.directtrans.json.JsonGetMeetings: JsonGetMeetings()
cn.ac.ia.directtrans.json.JsonGetMeetings: cn.ac.ia.directtrans.json.JsonGetMeetings fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMeetings: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMeetingsResult
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: java.lang.String EXPLAIN_INFO_NULL
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: java.lang.String EXPLAIN_DB_ERROR
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: java.lang.String cmd
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: java.lang.String linkId
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: java.util.ArrayList meetings
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: java.util.ArrayList items
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: JsonGetMeetingsResult()
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: cn.ac.ia.directtrans.json.JsonGetMeetingsResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: void add(cn.ac.ia.directtrans.json.UserState)
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: void add(cn.ac.ia.directtrans.json.MeetingInfo)
cn.ac.ia.directtrans.json.JsonGetMeetingsResult: cn.ac.ia.directtrans.json.JsonRequestResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMessage
cn.ac.ia.directtrans.json.JsonGetMessage: long LOST_MAX_ID
cn.ac.ia.directtrans.json.JsonGetMessage: long MIN_ID
cn.ac.ia.directtrans.json.JsonGetMessage: JsonGetMessage()
cn.ac.ia.directtrans.json.JsonGetMessage: cn.ac.ia.directtrans.json.JsonGetMessage fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMessage: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMesssageResult
cn.ac.ia.directtrans.json.JsonGetMesssageResult: java.lang.String EXPLAIN_INFO_NULL
cn.ac.ia.directtrans.json.JsonGetMesssageResult: java.lang.String EXPLAIN_DB_ERROR
cn.ac.ia.directtrans.json.JsonGetMesssageResult: JsonGetMesssageResult(cn.ac.ia.directtrans.json.JsonRequest)
cn.ac.ia.directtrans.json.JsonGetMesssageResult: cn.ac.ia.directtrans.json.JsonGetMesssageResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonGetMesssageResult: cn.ac.ia.directtrans.json.JsonRequestResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonLogin
cn.ac.ia.directtrans.json.JsonLogin: java.lang.String imei
cn.ac.ia.directtrans.json.JsonLogin: java.lang.String name
cn.ac.ia.directtrans.json.JsonLogin: java.lang.String version
cn.ac.ia.directtrans.json.JsonLogin: JsonLogin()
cn.ac.ia.directtrans.json.JsonMessage
cn.ac.ia.directtrans.json.JsonMessage: java.lang.String text
cn.ac.ia.directtrans.json.JsonMessage: int senderId
cn.ac.ia.directtrans.json.JsonMessage: java.lang.String senderName
cn.ac.ia.directtrans.json.JsonMessage: long linkId
cn.ac.ia.directtrans.json.JsonMessage: java.util.Date time
cn.ac.ia.directtrans.json.JsonMessage: java.lang.String vId
cn.ac.ia.directtrans.json.JsonMessage: int vLen
cn.ac.ia.directtrans.json.JsonMessage: long id
cn.ac.ia.directtrans.json.JsonMessage: java.lang.String photo
cn.ac.ia.directtrans.json.JsonMessage: int state
cn.ac.ia.directtrans.json.JsonMessage: JsonMessage()
cn.ac.ia.directtrans.json.JsonMessage: cn.ac.ia.directtrans.json.JsonMessage fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonMessage: void setData(cn.ac.ia.directtrans.json.JsonMessage)
cn.ac.ia.directtrans.json.JsonMessage: cn.ac.ia.directtrans.json.Json fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonMessage$Function
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String INVITE
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String INVITE_ADD
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String LINKMAN_DEL
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String ASK
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String FISH
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String MSG
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String QUESTION
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String MEETING_ADD
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String MEETING_DELETE
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String MEETING_EDIT
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String LINKMAN_ONLINE
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String LINKMAN_PHOTO
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String SOLVED
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String SOLVED_QUIT
cn.ac.ia.directtrans.json.JsonMessage$Function: java.lang.String SOLVED_CLOSE
cn.ac.ia.directtrans.json.JsonMessage$Function: JsonMessage$Function()
cn.ac.ia.directtrans.json.JsonMessage$State
cn.ac.ia.directtrans.json.JsonMessage$State: int RECEIVE
cn.ac.ia.directtrans.json.JsonMessage$State: int SENDING
cn.ac.ia.directtrans.json.JsonMessage$State: cn.ac.ia.directtrans.json.JsonMessage this$0
cn.ac.ia.directtrans.json.JsonMessage$State: JsonMessage$State(cn.ac.ia.directtrans.json.JsonMessage)
cn.ac.ia.directtrans.json.JsonMessage$Type
cn.ac.ia.directtrans.json.JsonMessage$Type: int MSG
cn.ac.ia.directtrans.json.JsonMessage$Type: int QA
cn.ac.ia.directtrans.json.JsonMessage$Type: void <clinit>()
cn.ac.ia.directtrans.json.JsonMessage$Type: JsonMessage$Type()
cn.ac.ia.directtrans.json.JsonMessageResult
cn.ac.ia.directtrans.json.JsonMessageResult: long id
cn.ac.ia.directtrans.json.JsonMessageResult: JsonMessageResult()
cn.ac.ia.directtrans.json.JsonPostImage
cn.ac.ia.directtrans.json.JsonPostImage: byte[] photo
cn.ac.ia.directtrans.json.JsonPostImage: JsonPostImage()
cn.ac.ia.directtrans.json.JsonQuestion
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String ASK
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String SOLVE
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String MARK
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String GIVE_UP
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String ASK_LIST
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String OBTAIN
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String GET_ASK
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String cmd
cn.ac.ia.directtrans.json.JsonQuestion: long id
cn.ac.ia.directtrans.json.JsonQuestion: int owner
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String type
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String text
cn.ac.ia.directtrans.json.JsonQuestion: java.lang.String vId
cn.ac.ia.directtrans.json.JsonQuestion: int vLen
cn.ac.ia.directtrans.json.JsonQuestion: JsonQuestion()
cn.ac.ia.directtrans.json.JsonRequest
cn.ac.ia.directtrans.json.JsonRequest: long handkey
cn.ac.ia.directtrans.json.JsonRequest: JsonRequest()
cn.ac.ia.directtrans.json.JsonRequest: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonRequest: cn.ac.ia.directtrans.json.Json fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonRequestResult
cn.ac.ia.directtrans.json.JsonRequestResult: boolean succeed
cn.ac.ia.directtrans.json.JsonRequestResult: int flag
cn.ac.ia.directtrans.json.JsonRequestResult: java.lang.String explain
cn.ac.ia.directtrans.json.JsonRequestResult: boolean isResultFrom(cn.ac.ia.directtrans.json.JsonFunction)
cn.ac.ia.directtrans.json.JsonRequestResult: JsonRequestResult(cn.ac.ia.directtrans.json.JsonRequest)
cn.ac.ia.directtrans.json.JsonRequestResult: JsonRequestResult()
cn.ac.ia.directtrans.json.JsonRequestResult: cn.ac.ia.directtrans.json.JsonRequestResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonRequestResult: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonSendMessage
cn.ac.ia.directtrans.json.JsonSendMessage: long linkId
cn.ac.ia.directtrans.json.JsonSendMessage: int vLen
cn.ac.ia.directtrans.json.JsonSendMessage: java.lang.String vId
cn.ac.ia.directtrans.json.JsonSendMessage: java.lang.String text
cn.ac.ia.directtrans.json.JsonSendMessage: java.lang.String cmd
cn.ac.ia.directtrans.json.JsonSendMessage: JsonSendMessage()
cn.ac.ia.directtrans.json.JsonSendMessageResult
cn.ac.ia.directtrans.json.JsonSendMessageResult: long id
cn.ac.ia.directtrans.json.JsonSendMessageResult: JsonSendMessageResult()
cn.ac.ia.directtrans.json.JsonSetUserInfo
cn.ac.ia.directtrans.json.JsonSetUserInfo: java.lang.String SET_PHOTO
cn.ac.ia.directtrans.json.JsonSetUserInfo: java.lang.String SET_NAME
cn.ac.ia.directtrans.json.JsonSetUserInfo: java.lang.String value
cn.ac.ia.directtrans.json.JsonSetUserInfo: java.lang.String name
cn.ac.ia.directtrans.json.JsonSetUserInfo: JsonSetUserInfo()
cn.ac.ia.directtrans.json.JsonSetUserInfo: void setUserName(java.lang.String)
cn.ac.ia.directtrans.json.JsonSetUserInfo: void setUserPhoto(java.lang.String)
cn.ac.ia.directtrans.json.JsonUserConfig
cn.ac.ia.directtrans.json.JsonUserConfig: boolean localeTTS
cn.ac.ia.directtrans.json.JsonUserConfig: float TTSSpeed
cn.ac.ia.directtrans.json.JsonUserConfig: boolean onlyRecoginze
cn.ac.ia.directtrans.json.JsonUserConfig: int fontSize
cn.ac.ia.directtrans.json.JsonUserConfig: boolean ttsGender
cn.ac.ia.directtrans.json.JsonUserConfig: java.lang.String photo
cn.ac.ia.directtrans.json.JsonUserConfig: boolean translatetalk
cn.ac.ia.directtrans.json.JsonUserConfig: boolean lClickRecord
cn.ac.ia.directtrans.json.JsonUserConfig: int openTrans
cn.ac.ia.directtrans.json.JsonUserConfig: boolean bRun
cn.ac.ia.directtrans.json.JsonUserConfig: long maxMsg
cn.ac.ia.directtrans.json.JsonUserConfig: int id
cn.ac.ia.directtrans.json.JsonUserConfig: JsonUserConfig()
cn.ac.ia.directtrans.json.JsonUserLogin
cn.ac.ia.directtrans.json.JsonUserLogin: java.lang.String imei
cn.ac.ia.directtrans.json.JsonUserLogin: java.lang.String name
cn.ac.ia.directtrans.json.JsonUserLogin: java.lang.String info
cn.ac.ia.directtrans.json.JsonUserLogin: JsonUserLogin()
cn.ac.ia.directtrans.json.JsonUserLogin: cn.ac.ia.directtrans.json.JsonUserLogin fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonUserLogin: cn.ac.ia.directtrans.json.JsonRequest fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonUserNoLoginResult
cn.ac.ia.directtrans.json.JsonUserNoLoginResult: java.lang.String EXPLAIN_NO_LOGIN
cn.ac.ia.directtrans.json.JsonUserNoLoginResult: JsonUserNoLoginResult()
cn.ac.ia.directtrans.json.JsonUserNoLoginResult: cn.ac.ia.directtrans.json.JsonUserNoLoginResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.JsonUserNoLoginResult: cn.ac.ia.directtrans.json.JsonRequestResult fromJson(java.lang.String)
cn.ac.ia.directtrans.json.MeetingInfo
cn.ac.ia.directtrans.json.MeetingInfo: int TYPE_FRIEND
cn.ac.ia.directtrans.json.MeetingInfo: int TYPE_SYSTEM
cn.ac.ia.directtrans.json.MeetingInfo: int TYPE_MEETING
cn.ac.ia.directtrans.json.MeetingInfo: java.lang.String name
cn.ac.ia.directtrans.json.MeetingInfo: long owner
cn.ac.ia.directtrans.json.MeetingInfo: long id
cn.ac.ia.directtrans.json.MeetingInfo: int type
cn.ac.ia.directtrans.json.MeetingInfo: java.util.ArrayList items
cn.ac.ia.directtrans.json.MeetingInfo: MeetingInfo()
cn.ac.ia.directtrans.json.QuestionInfo
cn.ac.ia.directtrans.json.QuestionInfo: int STATE_UNSOLVED
cn.ac.ia.directtrans.json.QuestionInfo: int STATE_DISPENSE
cn.ac.ia.directtrans.json.QuestionInfo: int STATE_MARK
cn.ac.ia.directtrans.json.QuestionInfo: int STATE_SOLVED
cn.ac.ia.directtrans.json.QuestionInfo: int STATE_CLOSE
cn.ac.ia.directtrans.json.QuestionInfo: long id
cn.ac.ia.directtrans.json.QuestionInfo: int senderId
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String senderName
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String text
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String photo
cn.ac.ia.directtrans.json.QuestionInfo: java.util.Date time
cn.ac.ia.directtrans.json.QuestionInfo: int state
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String type
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String vId
cn.ac.ia.directtrans.json.QuestionInfo: int vLen
cn.ac.ia.directtrans.json.QuestionInfo: int sId
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String sName
cn.ac.ia.directtrans.json.QuestionInfo: java.lang.String sPhoto
cn.ac.ia.directtrans.json.QuestionInfo: QuestionInfo()
cn.ac.ia.directtrans.json.QuestionInfo: void setInfo(cn.ac.ia.directtrans.json.QuestionInfo)
cn.ac.ia.directtrans.json.ResultString
cn.ac.ia.directtrans.json.ResultString: boolean succeed
cn.ac.ia.directtrans.json.ResultString: int flag
cn.ac.ia.directtrans.json.ResultString: java.lang.String function
cn.ac.ia.directtrans.json.ResultString: ResultString()
cn.ac.ia.directtrans.json.TimeString
cn.ac.ia.directtrans.json.TimeString: java.lang.String PATTERN
cn.ac.ia.directtrans.json.TimeString: java.text.SimpleDateFormat timeFormat
cn.ac.ia.directtrans.json.TimeString: void <clinit>()
cn.ac.ia.directtrans.json.TimeString: TimeString()
cn.ac.ia.directtrans.json.TimeString: java.lang.String getNowTime()
cn.ac.ia.directtrans.json.TimeString: java.lang.String getTimeString(java.lang.String,long)
cn.ac.ia.directtrans.json.TimeString: java.lang.String getTimeString(java.lang.String,java.util.Date)
cn.ac.ia.directtrans.json.TimeString: java.lang.String dateToString(java.util.Date)
cn.ac.ia.directtrans.json.TimeString: java.util.Date parseString(java.lang.String)
cn.ac.ia.directtrans.json.TransText
cn.ac.ia.directtrans.json.TransText: java.lang.String language
cn.ac.ia.directtrans.json.TransText: java.lang.String chinese
cn.ac.ia.directtrans.json.TransText: java.lang.String english
cn.ac.ia.directtrans.json.TransText: TransText()
cn.ac.ia.directtrans.json.TransText: void set(java.lang.String,java.lang.String)
cn.ac.ia.directtrans.json.TransText: java.lang.String getChinese()
cn.ac.ia.directtrans.json.TransText: void setChinese(java.lang.String)
cn.ac.ia.directtrans.json.TransText: java.lang.String getEnglish()
cn.ac.ia.directtrans.json.TransText: void setEnglish(java.lang.String)
cn.ac.ia.directtrans.json.TransText$Language
cn.ac.ia.directtrans.json.TransText$Language: java.lang.String CHINESE
cn.ac.ia.directtrans.json.TransText$Language: java.lang.String ENGLISH
cn.ac.ia.directtrans.json.TransText$Language: TransText$Language()
cn.ac.ia.directtrans.json.UserInfo
cn.ac.ia.directtrans.json.UserInfo: int id
cn.ac.ia.directtrans.json.UserInfo: java.lang.String name
cn.ac.ia.directtrans.json.UserInfo: java.lang.String photo
cn.ac.ia.directtrans.json.UserInfo: int score
cn.ac.ia.directtrans.json.UserInfo: int level
cn.ac.ia.directtrans.json.UserInfo: java.lang.String distance
cn.ac.ia.directtrans.json.UserInfo: boolean online
cn.ac.ia.directtrans.json.UserInfo: UserInfo()
cn.ac.ia.directtrans.json.UserInfo: void setInfo(cn.ac.ia.directtrans.json.UserInfo)
cn.ac.ia.directtrans.json.UserInfo$Gender
cn.ac.ia.directtrans.json.UserInfo$Gender: java.lang.String GENDER_F
cn.ac.ia.directtrans.json.UserInfo$Gender: java.lang.String GENDER_M
cn.ac.ia.directtrans.json.UserInfo$Gender: int GENDER_DB_F
cn.ac.ia.directtrans.json.UserInfo$Gender: int GENDER_DB_M
cn.ac.ia.directtrans.json.UserInfo$Gender: UserInfo$Gender()
cn.ac.ia.directtrans.json.UserInfo$Gender: java.lang.String strToDB(java.lang.String)
cn.ac.ia.directtrans.json.UserInfo$Gender: java.lang.String dbToStr(int)
cn.ac.ia.directtrans.json.UserState
cn.ac.ia.directtrans.json.UserState: java.util.Date time
cn.ac.ia.directtrans.json.UserState: int id
cn.ac.ia.directtrans.json.UserState: java.lang.String name
cn.ac.ia.directtrans.json.UserState: java.lang.String photo
cn.ac.ia.directtrans.json.UserState: int score
cn.ac.ia.directtrans.json.UserState: int level
cn.ac.ia.directtrans.json.UserState: int solve
cn.ac.ia.directtrans.json.UserState: int ask
cn.ac.ia.directtrans.json.UserState: java.lang.String distance
cn.ac.ia.directtrans.json.UserState: boolean online
cn.ac.ia.directtrans.json.UserState: UserState()
cn.ac.ia.directtrans.json.UserState: void setInfo(cn.ac.ia.directtrans.json.UserState)
cn.ac.ia.files.RequestParam
cn.ac.ia.files.RequestParam: java.lang.String USER_ID
cn.ac.ia.files.RequestParam: java.lang.String FILE_ID
cn.ac.ia.files.RequestParam: java.lang.String VISITOR
cn.ac.ia.files.RequestParam: java.lang.String APP
cn.ac.ia.files.RequestParam: java.lang.String TYPE
cn.ac.ia.files.RequestParam: java.lang.String FILE_TYPE_VOICE
cn.ac.ia.files.RequestParam: java.lang.String FILE_TYPE_PHOTO
cn.ac.ia.files.RequestParam: java.lang.String fileId
cn.ac.ia.files.RequestParam: java.lang.String userId
cn.ac.ia.files.RequestParam: java.lang.String app
cn.ac.ia.files.RequestParam: java.lang.String type
cn.ac.ia.files.RequestParam: RequestParam(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.baidu.location.BDLocation
com.baidu.location.BDLocation: int TypeNone
com.baidu.location.BDLocation: int TypeGpsLocation
com.baidu.location.BDLocation: int TypeCriteriaException
com.baidu.location.BDLocation: int TypeNetWorkException
com.baidu.location.BDLocation: int TypeOffLineLocation
com.baidu.location.BDLocation: int TypeOffLineLocationFail
com.baidu.location.BDLocation: int TypeOffLineLocationNetworkFail
com.baidu.location.BDLocation: int TypeNetWorkLocation
com.baidu.location.BDLocation: int TypeCacheLocation
com.baidu.location.BDLocation: int TypeServerError
com.baidu.location.BDLocation: java.lang.String mServerString
com.baidu.location.BDLocation: com.baidu.location.BDLocation$a mAddr
com.baidu.location.BDLocation: BDLocation()
com.baidu.location.BDLocation: BDLocation(double,double,float)
com.baidu.location.BDLocation: BDLocation(java.lang.String,double,double,float,java.lang.String,java.lang.String)
com.baidu.location.BDLocation: BDLocation(java.lang.String)
com.baidu.location.BDLocation: java.lang.String toJsonString()
com.baidu.location.BDLocation: boolean isCellChangeFlag()
com.baidu.location.BDLocation: java.lang.String getTime()
com.baidu.location.BDLocation: void setTime(java.lang.String)
com.baidu.location.BDLocation: double getLatitude()
com.baidu.location.BDLocation: void setLatitude(double)
com.baidu.location.BDLocation: double getLongitude()
com.baidu.location.BDLocation: void setLongitude(double)
com.baidu.location.BDLocation: double getAltitude()
com.baidu.location.BDLocation: void setAltitude(double)
com.baidu.location.BDLocation: float getSpeed()
com.baidu.location.BDLocation: void setSpeed(float)
com.baidu.location.BDLocation: float getRadius()
com.baidu.location.BDLocation: void setRadius(float)
com.baidu.location.BDLocation: java.lang.String getCoorType()
com.baidu.location.BDLocation: void setCoorType(java.lang.String)
com.baidu.location.BDLocation: void setAddrStr(java.lang.String)
com.baidu.location.BDLocation: boolean hasAltitude()
com.baidu.location.BDLocation: boolean hasSpeed()
com.baidu.location.BDLocation: boolean hasRadius()
com.baidu.location.BDLocation: com.baidu.location.BDLocation toNewLocation(java.lang.String)
com.baidu.location.BDLocation: void setLocType(int)
com.baidu.location.BDLocation: int getLocType()
com.baidu.location.BDLocation: void setSatelliteNumber(int)
com.baidu.location.BDLocation: int getSatelliteNumber()
com.baidu.location.BDLocation: void setDerect(float)
com.baidu.location.BDLocation: float getDerect()
com.baidu.location.BDLocation: boolean hasSateNumber()
com.baidu.location.BDLocation: boolean hasPoi()
com.baidu.location.BDLocation: java.lang.String getPoi()
com.baidu.location.BDLocation: boolean hasAddr()
com.baidu.location.BDLocation: java.lang.String getAddrStr()
com.baidu.location.BDLocation: java.lang.String getProvince()
com.baidu.location.BDLocation: java.lang.String getCity()
com.baidu.location.BDLocation: java.lang.String getCityCode()
com.baidu.location.BDLocation: java.lang.String getDistrict()
com.baidu.location.BDLocation: java.lang.String getStreet()
com.baidu.location.BDLocation: java.lang.String getStreetNumber()
com.baidu.location.BDLocation$a
com.baidu.location.BDLocation$a: java.lang.String if
com.baidu.location.BDLocation$a: java.lang.String new
com.baidu.location.BDLocation$a: java.lang.String int
com.baidu.location.BDLocation$a: java.lang.String byte
com.baidu.location.BDLocation$a: java.lang.String do
com.baidu.location.BDLocation$a: java.lang.String for
com.baidu.location.BDLocation$a: java.lang.String try
com.baidu.location.BDLocation$a: BDLocation$a(com.baidu.location.BDLocation)
com.baidu.location.BDLocationListener
com.baidu.location.BDLocationListener: void onReceiveLocation(com.baidu.location.BDLocation)
com.baidu.location.BDLocationListener: void onReceivePoi(com.baidu.location.BDLocation)
com.baidu.location.BDNotifyListener
com.baidu.location.BDNotifyListener: double mLatitude
com.baidu.location.BDNotifyListener: double mLongitude
com.baidu.location.BDNotifyListener: float mRadius
com.baidu.location.BDNotifyListener: float differDistance
com.baidu.location.BDNotifyListener: java.lang.String mCoorType
com.baidu.location.BDNotifyListener: double mLatitudeC
com.baidu.location.BDNotifyListener: double mLongitudeC
com.baidu.location.BDNotifyListener: int Notified
com.baidu.location.BDNotifyListener: boolean isAdded
com.baidu.location.BDNotifyListener: com.baidu.location.i mNotifyCache
com.baidu.location.BDNotifyListener: BDNotifyListener()
com.baidu.location.BDNotifyListener: void SetNotifyLocation(double,double,float,java.lang.String)
com.baidu.location.BDNotifyListener: void onNotify(com.baidu.location.BDLocation,float)
com.baidu.location.Jni
com.baidu.location.Jni: java.lang.String a(byte[],int)
com.baidu.location.Jni: java.lang.String b(double,double,int,int)
com.baidu.location.LocationClient
com.baidu.location.LocationClient: LocationClient(android.content.Context)
com.baidu.location.LocationClient: LocationClient(android.content.Context,com.baidu.location.LocationClientOption)
com.baidu.location.LocationClient: com.baidu.location.LocationClientOption getLocOption()
com.baidu.location.LocationClient: void setLocOption(com.baidu.location.LocationClientOption)
com.baidu.location.LocationClient: boolean updateLocation(android.location.Location)
com.baidu.location.LocationClient: void requestNotifyLocation()
com.baidu.location.LocationClient: int requestOfflineLocation()
com.baidu.location.LocationClient: int requestLocation()
com.baidu.location.LocationClient: int requestPoi()
com.baidu.location.LocationClient: boolean isStarted()
com.baidu.location.LocationClient: com.baidu.location.BDLocation getLastKnownLocation()
com.baidu.location.LocationClient: java.lang.String getVersion()
com.baidu.location.LocationClient: void start()
com.baidu.location.LocationClient: void stop()
com.baidu.location.LocationClient: void registerNotify(com.baidu.location.BDNotifyListener)
com.baidu.location.LocationClient: void onRegisterNotify(android.os.Message)
com.baidu.location.LocationClient: void removeNotifyEvent(com.baidu.location.BDNotifyListener)
com.baidu.location.LocationClient: void onRemoveNotifyEvent(android.os.Message)
com.baidu.location.LocationClient: void registerNotifyLocationListener(com.baidu.location.BDLocationListener)
com.baidu.location.LocationClient: void onRegisterNotifyLocationListener(android.os.Message)
com.baidu.location.LocationClient: void registerLocationListener(com.baidu.location.BDLocationListener)
com.baidu.location.LocationClient: void unRegisterLocationListener(com.baidu.location.BDLocationListener)
com.baidu.location.LocationClient: void setTestUrl(java.lang.String)
com.baidu.location.LocationClient: void setForBaiduMap(boolean)
com.baidu.location.LocationClient: void setForPreImport(boolean)
com.baidu.location.LocationClientOption
com.baidu.location.LocationClientOption: int MIN_SCAN_SPAN
com.baidu.location.LocationClientOption: int GpsFirst
com.baidu.location.LocationClientOption: int NetWorkFirst
com.baidu.location.LocationClientOption: java.lang.String try
com.baidu.location.LocationClientOption: java.lang.String char
com.baidu.location.LocationClientOption: boolean case
com.baidu.location.LocationClientOption: int int
com.baidu.location.LocationClientOption: int long
com.baidu.location.LocationClientOption: java.lang.String new
com.baidu.location.LocationClientOption: int goto
com.baidu.location.LocationClientOption: boolean void
com.baidu.location.LocationClientOption: boolean for
com.baidu.location.LocationClientOption: boolean else
com.baidu.location.LocationClientOption: boolean if
com.baidu.location.LocationClientOption: float do
com.baidu.location.LocationClientOption: int a
com.baidu.location.LocationClientOption: java.lang.String byte
com.baidu.location.LocationClientOption: LocationClientOption()
com.baidu.location.LocationClientOption: LocationClientOption(com.baidu.location.LocationClientOption)
com.baidu.location.LocationClientOption: boolean equals(com.baidu.location.LocationClientOption)
com.baidu.location.LocationClientOption: java.lang.String getCoorType()
com.baidu.location.LocationClientOption: void setCoorType(java.lang.String)
com.baidu.location.LocationClientOption: java.lang.String getAddrType()
com.baidu.location.LocationClientOption: void setAddrType(java.lang.String)
com.baidu.location.LocationClientOption: boolean isOpenGps()
com.baidu.location.LocationClientOption: void setOpenGps(boolean)
com.baidu.location.LocationClientOption: boolean isLocationNotify()
com.baidu.location.LocationClientOption: void setLocationNotify(boolean)
com.baidu.location.LocationClientOption: int getScanSpan()
com.baidu.location.LocationClientOption: void setScanSpan(int)
com.baidu.location.LocationClientOption: int getTimeOut()
com.baidu.location.LocationClientOption: void setTimeOut(int)
com.baidu.location.LocationClientOption: java.lang.String getProdName()
com.baidu.location.LocationClientOption: void setProdName(java.lang.String)
com.baidu.location.LocationClientOption: int getPriority()
com.baidu.location.LocationClientOption: void setPriority(int)
com.baidu.location.LocationClientOption: java.lang.String getServiceName()
com.baidu.location.LocationClientOption: void setServiceName(java.lang.String)
com.baidu.location.LocationClientOption: void setPoiDistance(float)
com.baidu.location.LocationClientOption: float getPoiDistance()
com.baidu.location.LocationClientOption: void setPoiNumber(int)
com.baidu.location.LocationClientOption: int getPoiNumber()
com.baidu.location.LocationClientOption: void setPoiExtraInfo(boolean)
com.baidu.location.LocationClientOption: boolean getPoiExtranInfo()
com.baidu.location.LocationClientOption: void disableCache(boolean)
com.baidu.location.LocationClientOption: boolean isDisableCache()
com.baidu.location.b$c
com.baidu.location.b$c: java.lang.String g
com.baidu.location.b$c: java.lang.String if
com.baidu.location.b$c: java.lang.String int
com.baidu.location.b$c: java.lang.String for
com.baidu.location.b$c: int do
com.baidu.location.b$c: b$c(com.baidu.location.b,java.util.List,java.lang.String,java.lang.String,java.lang.String)
com.baidu.location.b$c: void void()
com.baidu.location.b$c: int c()
com.baidu.location.b$c: int a(boolean,boolean,boolean,boolean,boolean)
com.baidu.location.b$c: boolean if()
com.baidu.location.b$c: boolean char()
com.baidu.location.b$c: boolean i()
com.baidu.location.b$c: boolean h()
com.baidu.location.b$c: boolean long()
com.baidu.location.b$c: double l()
com.baidu.location.b$c: double d()
com.baidu.location.b$c: double try()
com.baidu.location.b$c: int g()
com.baidu.location.b$c: java.lang.String int()
com.baidu.location.b$c: char new()
com.baidu.location.b$c: int f()
com.baidu.location.b$c: double case()
com.baidu.location.b$c: double j()
com.baidu.location.b$c: double b()
com.baidu.location.b$c: double a()
com.baidu.location.b$c: double for()
com.baidu.location.b$c: java.lang.String byte()
com.baidu.location.b$c: int goto()
com.baidu.location.b$c: int m()
com.baidu.location.b$c: java.util.List do()
com.baidu.location.b$c: java.lang.String n()
com.baidu.location.b$c: java.lang.String k()
com.baidu.location.b$c: java.lang.String e()
com.baidu.location.b$c: java.util.List else()
com.baidu.location.b$c$a
com.baidu.location.b$c$a: b$c$a(com.baidu.location.b$c,int,int,int,int)
com.baidu.location.b$c$a: int for()
com.baidu.location.b$c$a: int a()
com.baidu.location.b$c$a: int if()
com.baidu.location.b$c$a: int do()
com.baidu.location.b$d
com.baidu.location.b$d: b$d(java.lang.String)
com.baidu.location.b$d: boolean a(android.location.Location)
com.baidu.location.b$d: boolean a(android.location.Location,int,int)
com.baidu.location.b$d: boolean for()
com.baidu.location.b$d: java.lang.String a(int)
com.baidu.location.b$d: int a()
com.baidu.location.b$d: void do()
com.baidu.location.b$d: boolean if()
com.baidu.location.b$d: void a(boolean)
com.baidu.location.c$a
com.baidu.location.c$a: int for
com.baidu.location.c$a: int try
com.baidu.location.c$a: int do
com.baidu.location.c$a: int if
com.baidu.location.c$a: long byte
com.baidu.location.c$a: int int
com.baidu.location.c$a: char new
com.baidu.location.c$a: c$a(com.baidu.location.c)
com.baidu.location.c$a: c$a(com.baidu.location.c,int,int,int,int,char)
com.baidu.location.c$a: boolean a(com.baidu.location.c$a)
com.baidu.location.c$a: boolean do()
com.baidu.location.c$a: boolean for()
com.baidu.location.c$a: java.lang.String a()
com.baidu.location.c$a: java.lang.String toString()
com.baidu.location.c$a: java.lang.String if()
com.baidu.location.c$a: java.lang.String int()
com.baidu.location.e$c
com.baidu.location.e$c: java.util.List do
com.baidu.location.e$c: e$c(com.baidu.location.e,java.util.List,long)
com.baidu.location.e$c: java.lang.String for()
com.baidu.location.e$c: int new()
com.baidu.location.e$c: java.lang.String byte()
com.baidu.location.e$c: java.lang.String try()
com.baidu.location.e$c: java.lang.String a(int)
com.baidu.location.e$c: java.lang.String case()
com.baidu.location.e$c: java.lang.String if(int)
com.baidu.location.e$c: boolean if(com.baidu.location.e$c)
com.baidu.location.e$c: boolean do(com.baidu.location.e$c)
com.baidu.location.e$c: boolean a(com.baidu.location.e$c)
com.baidu.location.e$c: boolean a(com.baidu.location.e$c,com.baidu.location.e$c,float)
com.baidu.location.e$c: boolean do()
com.baidu.location.e$c: boolean int()
com.baidu.location.e$c: boolean if()
com.baidu.location.f
com.baidu.location.f: java.lang.String v
com.baidu.location.f: f()
com.baidu.location.f: void onCreate()
com.baidu.location.f: android.os.IBinder onBind(android.content.Intent)
com.baidu.location.f: void onDestroy()
com.baidu.location.f: int onStartCommand(android.content.Intent,int,int)
com.baidu.location.f: void goto()
com.baidu.location.f: java.lang.String new()
com.baidu.location.f: boolean char()
com.baidu.location.f$a
com.baidu.location.f$a: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.baidu.location.f$a: void a(java.io.File,java.lang.String,java.lang.String)
com.baidu.location.f$a: void a()
com.baidu.location.f$c
com.baidu.location.f$c: java.lang.String for
com.baidu.location.f$c: f$c(com.baidu.location.f,android.content.Context)
com.baidu.location.f$c: void try()
com.baidu.location.f$c: void do()
com.baidu.location.f$c: void for()
com.baidu.location.f$c: void int()
com.baidu.location.f$c: void a()
com.baidu.location.f$c: void if()
com.baidu.location.f$c: void case()
com.baidu.location.f$c: void new()
com.baidu.location.f$c: void byte()
com.baidu.location.f$c$a
com.baidu.location.f$c$a: f$c$a(com.baidu.location.f$c)
com.baidu.location.f$c$a: void onReceive(android.content.Context,android.content.Intent)
com.baidu.location.f$d
com.baidu.location.f$d: f$d(com.baidu.location.f)
com.baidu.location.f$d: void handleMessage(android.os.Message)
com.baidu.location.i
com.baidu.location.i: java.lang.String new
com.baidu.location.i: i(android.content.Context,com.baidu.location.LocationClient)
com.baidu.location.i: void if()
com.baidu.location.i: int if(com.baidu.location.BDNotifyListener)
com.baidu.location.i: void a(com.baidu.location.BDNotifyListener)
com.baidu.location.i: int do(com.baidu.location.BDNotifyListener)
com.baidu.location.i$a
com.baidu.location.i$a: i$a(com.baidu.location.i)
com.baidu.location.i$a: void onReceiveLocation(com.baidu.location.BDLocation)
com.baidu.location.i$a: void onReceivePoi(com.baidu.location.BDLocation)
com.baidu.location.i$b
com.baidu.location.i$b: i$b(com.baidu.location.i)
com.baidu.location.i$b: void onReceive(android.content.Context,android.content.Intent)
com.baidu.location.j$a
com.baidu.location.j$a: j$a()
com.baidu.location.j$a: java.lang.String if(android.content.Context)
com.baidu.location.j$b
com.baidu.location.j$b: java.lang.String a(android.content.Context)
com.baidu.location.j$b: java.lang.String do(android.content.Context)
com.baidu.location.j$b: java.lang.String if(android.content.Context)
com.google.gson.ExclusionStrategy
com.google.gson.ExclusionStrategy: boolean shouldSkipField(com.google.gson.FieldAttributes)
com.google.gson.ExclusionStrategy: boolean shouldSkipClass(java.lang.Class)
com.google.gson.FieldAttributes
com.google.gson.FieldAttributes: FieldAttributes(java.lang.reflect.Field)
com.google.gson.FieldAttributes: java.lang.Class getDeclaringClass()
com.google.gson.FieldAttributes: java.lang.String getName()
com.google.gson.FieldAttributes: java.lang.reflect.Type getDeclaredType()
com.google.gson.FieldAttributes: java.lang.Class getDeclaredClass()
com.google.gson.FieldAttributes: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.google.gson.FieldAttributes: java.util.Collection getAnnotations()
com.google.gson.FieldAttributes: boolean hasModifier(int)
com.google.gson.FieldNamingPolicy
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.google.gson.FieldNamingStrategy
com.google.gson.FieldNamingStrategy: java.lang.String translateName(java.lang.reflect.Field)
com.google.gson.Gson
com.google.gson.Gson: Gson()
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)
com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(java.lang.Class)
com.google.gson.Gson: com.google.gson.JsonElement toJsonTree(java.lang.Object)
com.google.gson.Gson: com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)
com.google.gson.Gson: java.lang.String toJson(java.lang.Object)
com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.Appendable)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
com.google.gson.Gson: java.lang.String toJson(com.google.gson.JsonElement)
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,java.lang.Appendable)
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)
com.google.gson.Gson: java.lang.String toString()
com.google.gson.GsonBuilder
com.google.gson.GsonBuilder: GsonBuilder()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setVersion(double)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder generateNonExecutableJson()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder serializeNulls()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder enableComplexMapKeySerialization()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableInnerClassSerialization()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableHtmlEscaping()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(java.lang.String)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(int)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(int,int)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()
com.google.gson.GsonBuilder: com.google.gson.Gson create()
com.google.gson.InstanceCreator
com.google.gson.InstanceCreator: java.lang.Object createInstance(java.lang.reflect.Type)
com.google.gson.JsonArray
com.google.gson.JsonArray: JsonArray()
com.google.gson.JsonArray: void add(com.google.gson.JsonElement)
com.google.gson.JsonArray: void addAll(com.google.gson.JsonArray)
com.google.gson.JsonArray: int size()
com.google.gson.JsonArray: java.util.Iterator iterator()
com.google.gson.JsonArray: com.google.gson.JsonElement get(int)
com.google.gson.JsonArray: java.lang.Number getAsNumber()
com.google.gson.JsonArray: java.lang.String getAsString()
com.google.gson.JsonArray: double getAsDouble()
com.google.gson.JsonArray: java.math.BigDecimal getAsBigDecimal()
com.google.gson.JsonArray: java.math.BigInteger getAsBigInteger()
com.google.gson.JsonArray: float getAsFloat()
com.google.gson.JsonArray: long getAsLong()
com.google.gson.JsonArray: int getAsInt()
com.google.gson.JsonArray: byte getAsByte()
com.google.gson.JsonArray: char getAsCharacter()
com.google.gson.JsonArray: short getAsShort()
com.google.gson.JsonArray: boolean getAsBoolean()
com.google.gson.JsonArray: boolean equals(java.lang.Object)
com.google.gson.JsonArray: int hashCode()
com.google.gson.JsonDeserializationContext
com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
com.google.gson.JsonDeserializer
com.google.gson.JsonDeserializer: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)
com.google.gson.JsonElement
com.google.gson.JsonElement: JsonElement()
com.google.gson.JsonElement: boolean isJsonArray()
com.google.gson.JsonElement: boolean isJsonObject()
com.google.gson.JsonElement: boolean isJsonPrimitive()
com.google.gson.JsonElement: boolean isJsonNull()
com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()
com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()
com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()
com.google.gson.JsonElement: com.google.gson.JsonNull getAsJsonNull()
com.google.gson.JsonElement: boolean getAsBoolean()
com.google.gson.JsonElement: java.lang.Number getAsNumber()
com.google.gson.JsonElement: java.lang.String getAsString()
com.google.gson.JsonElement: double getAsDouble()
com.google.gson.JsonElement: float getAsFloat()
com.google.gson.JsonElement: long getAsLong()
com.google.gson.JsonElement: int getAsInt()
com.google.gson.JsonElement: byte getAsByte()
com.google.gson.JsonElement: char getAsCharacter()
com.google.gson.JsonElement: java.math.BigDecimal getAsBigDecimal()
com.google.gson.JsonElement: java.math.BigInteger getAsBigInteger()
com.google.gson.JsonElement: short getAsShort()
com.google.gson.JsonElement: java.lang.String toString()
com.google.gson.JsonIOException
com.google.gson.JsonIOException: long serialVersionUID
com.google.gson.JsonIOException: JsonIOException(java.lang.String)
com.google.gson.JsonIOException: JsonIOException(java.lang.String,java.lang.Throwable)
com.google.gson.JsonIOException: JsonIOException(java.lang.Throwable)
com.google.gson.JsonNull
com.google.gson.JsonNull: com.google.gson.JsonNull INSTANCE
com.google.gson.JsonNull: JsonNull()
com.google.gson.JsonNull: int hashCode()
com.google.gson.JsonNull: boolean equals(java.lang.Object)
com.google.gson.JsonObject
com.google.gson.JsonObject: JsonObject()
com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)
com.google.gson.JsonObject: com.google.gson.JsonElement remove(java.lang.String)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Number)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Boolean)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Character)
com.google.gson.JsonObject: java.util.Set entrySet()
com.google.gson.JsonObject: boolean has(java.lang.String)
com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)
com.google.gson.JsonObject: com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
com.google.gson.JsonObject: com.google.gson.JsonArray getAsJsonArray(java.lang.String)
com.google.gson.JsonObject: com.google.gson.JsonObject getAsJsonObject(java.lang.String)
com.google.gson.JsonObject: boolean equals(java.lang.Object)
com.google.gson.JsonObject: int hashCode()
com.google.gson.JsonParseException
com.google.gson.JsonParseException: long serialVersionUID
com.google.gson.JsonParseException: JsonParseException(java.lang.String)
com.google.gson.JsonParseException: JsonParseException(java.lang.String,java.lang.Throwable)
com.google.gson.JsonParseException: JsonParseException(java.lang.Throwable)
com.google.gson.JsonParser
com.google.gson.JsonParser: JsonParser()
com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.io.Reader)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
com.google.gson.JsonPrimitive
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Boolean)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Number)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.String)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Character)
com.google.gson.JsonPrimitive: boolean isBoolean()
com.google.gson.JsonPrimitive: boolean getAsBoolean()
com.google.gson.JsonPrimitive: boolean isNumber()
com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()
com.google.gson.JsonPrimitive: boolean isString()
com.google.gson.JsonPrimitive: java.lang.String getAsString()
com.google.gson.JsonPrimitive: double getAsDouble()
com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()
com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()
com.google.gson.JsonPrimitive: float getAsFloat()
com.google.gson.JsonPrimitive: long getAsLong()
com.google.gson.JsonPrimitive: short getAsShort()
com.google.gson.JsonPrimitive: int getAsInt()
com.google.gson.JsonPrimitive: byte getAsByte()
com.google.gson.JsonPrimitive: char getAsCharacter()
com.google.gson.JsonPrimitive: int hashCode()
com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)
com.google.gson.JsonSerializationContext
com.google.gson.JsonSerializationContext: com.google.gson.JsonElement serialize(java.lang.Object)
com.google.gson.JsonSerializationContext: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
com.google.gson.JsonSerializer
com.google.gson.JsonSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)
com.google.gson.JsonStreamParser
com.google.gson.JsonStreamParser: JsonStreamParser(java.lang.String)
com.google.gson.JsonStreamParser: JsonStreamParser(java.io.Reader)
com.google.gson.JsonStreamParser: com.google.gson.JsonElement next()
com.google.gson.JsonStreamParser: boolean hasNext()
com.google.gson.JsonStreamParser: void remove()
com.google.gson.JsonStreamParser: java.lang.Object next()
com.google.gson.JsonSyntaxException
com.google.gson.JsonSyntaxException: long serialVersionUID
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String)
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String,java.lang.Throwable)
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.Throwable)
com.google.gson.LongSerializationPolicy
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy STRING
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.JsonElement serialize(java.lang.Long)
com.google.gson.TypeAdapter
com.google.gson.TypeAdapter: TypeAdapter()
com.google.gson.TypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.TypeAdapter: void toJson(java.io.Writer,java.lang.Object)
com.google.gson.TypeAdapter: com.google.gson.TypeAdapter nullSafe()
com.google.gson.TypeAdapter: java.lang.String toJson(java.lang.Object)
com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)
com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.io.Reader)
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.lang.String)
com.google.gson.TypeAdapter: java.lang.Object fromJsonTree(com.google.gson.JsonElement)
com.google.gson.TypeAdapterFactory
com.google.gson.TypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.annotations.Expose
com.google.gson.annotations.Expose: boolean serialize()
com.google.gson.annotations.Expose: boolean deserialize()
com.google.gson.annotations.SerializedName
com.google.gson.annotations.SerializedName: java.lang.String value()
com.google.gson.annotations.Since
com.google.gson.annotations.Since: double value()
com.google.gson.annotations.Until
com.google.gson.annotations.Until: double value()
com.google.gson.internal.$Gson$Preconditions
com.google.gson.internal.$Gson$Preconditions: $Gson$Preconditions()
com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)
com.google.gson.internal.$Gson$Types
com.google.gson.internal.$Gson$Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
com.google.gson.internal.ConstructorConstructor
com.google.gson.internal.ConstructorConstructor: ConstructorConstructor(java.util.Map)
com.google.gson.internal.ConstructorConstructor: ConstructorConstructor()
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken)
com.google.gson.internal.ConstructorConstructor: java.lang.String toString()
com.google.gson.internal.Excluder
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder DEFAULT
com.google.gson.internal.Excluder: Excluder()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withVersion(double)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withModifiers(int[])
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder disableInnerClassSerialization()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)
com.google.gson.internal.Excluder: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)
com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)
com.google.gson.internal.Excluder: java.lang.Object clone()
com.google.gson.internal.JsonReaderInternalAccess
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
com.google.gson.internal.JsonReaderInternalAccess: JsonReaderInternalAccess()
com.google.gson.internal.JsonReaderInternalAccess: void promoteNameToValue(com.google.gson.stream.JsonReader)
com.google.gson.internal.LazilyParsedNumber
com.google.gson.internal.LazilyParsedNumber: LazilyParsedNumber(java.lang.String)
com.google.gson.internal.LazilyParsedNumber: int intValue()
com.google.gson.internal.LazilyParsedNumber: long longValue()
com.google.gson.internal.LazilyParsedNumber: float floatValue()
com.google.gson.internal.LazilyParsedNumber: double doubleValue()
com.google.gson.internal.LazilyParsedNumber: java.lang.String toString()
com.google.gson.internal.ObjectConstructor
com.google.gson.internal.ObjectConstructor: java.lang.Object construct()
com.google.gson.internal.Primitives
com.google.gson.internal.Primitives: boolean isPrimitive(java.lang.reflect.Type)
com.google.gson.internal.Primitives: boolean isWrapperType(java.lang.reflect.Type)
com.google.gson.internal.Primitives: java.lang.Class wrap(java.lang.Class)
com.google.gson.internal.Primitives: java.lang.Class unwrap(java.lang.Class)
com.google.gson.internal.Streams
com.google.gson.internal.Streams: Streams()
com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
com.google.gson.internal.Streams: java.io.Writer writerForAppendable(java.lang.Appendable)
com.google.gson.internal.StringMap
com.google.gson.internal.StringMap: StringMap()
com.google.gson.internal.StringMap: int size()
com.google.gson.internal.StringMap: boolean containsKey(java.lang.Object)
com.google.gson.internal.StringMap: java.lang.Object get(java.lang.Object)
com.google.gson.internal.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)
com.google.gson.internal.StringMap: java.lang.Object remove(java.lang.Object)
com.google.gson.internal.StringMap: void clear()
com.google.gson.internal.StringMap: java.util.Set keySet()
com.google.gson.internal.StringMap: java.util.Collection values()
com.google.gson.internal.StringMap: java.util.Set entrySet()
com.google.gson.internal.StringMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.gson.internal.UnsafeAllocator
com.google.gson.internal.UnsafeAllocator: UnsafeAllocator()
com.google.gson.internal.UnsafeAllocator: java.lang.Object newInstance(java.lang.Class)
com.google.gson.internal.UnsafeAllocator: com.google.gson.internal.UnsafeAllocator create()
com.google.gson.internal.bind.ArrayTypeAdapter
com.google.gson.internal.bind.ArrayTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.google.gson.internal.bind.ArrayTypeAdapter: ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)
com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.CollectionTypeAdapterFactory
com.google.gson.internal.bind.CollectionTypeAdapterFactory: CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.bind.DateTypeAdapter
com.google.gson.internal.bind.DateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)
com.google.gson.internal.bind.DateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader
com.google.gson.internal.bind.JsonTreeReader: JsonTreeReader(com.google.gson.JsonElement)
com.google.gson.internal.bind.JsonTreeReader: void beginArray()
com.google.gson.internal.bind.JsonTreeReader: void endArray()
com.google.gson.internal.bind.JsonTreeReader: void beginObject()
com.google.gson.internal.bind.JsonTreeReader: void endObject()
com.google.gson.internal.bind.JsonTreeReader: boolean hasNext()
com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()
com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()
com.google.gson.internal.bind.JsonTreeReader: void nextNull()
com.google.gson.internal.bind.JsonTreeReader: double nextDouble()
com.google.gson.internal.bind.JsonTreeReader: long nextLong()
com.google.gson.internal.bind.JsonTreeReader: int nextInt()
com.google.gson.internal.bind.JsonTreeReader: void close()
com.google.gson.internal.bind.JsonTreeReader: void skipValue()
com.google.gson.internal.bind.JsonTreeReader: java.lang.String toString()
com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()
com.google.gson.internal.bind.JsonTreeWriter
com.google.gson.internal.bind.JsonTreeWriter: JsonTreeWriter()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement get()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginArray()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginObject()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter nullValue()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(boolean)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(double)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(long)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
com.google.gson.internal.bind.JsonTreeWriter: void flush()
com.google.gson.internal.bind.JsonTreeWriter: void close()
com.google.gson.internal.bind.MapTypeAdapterFactory
com.google.gson.internal.bind.MapTypeAdapterFactory: MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.bind.ObjectTypeAdapter
com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.SqlDateTypeAdapter
com.google.gson.internal.bind.SqlDateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.google.gson.internal.bind.SqlDateTypeAdapter: SqlDateTypeAdapter()
com.google.gson.internal.bind.SqlDateTypeAdapter: java.sql.Date read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)
com.google.gson.internal.bind.SqlDateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.TimeTypeAdapter
com.google.gson.internal.bind.TimeTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.google.gson.internal.bind.TimeTypeAdapter: TimeTypeAdapter()
com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)
com.google.gson.internal.bind.TimeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CLASS
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CLASS_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIT_SET
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BIT_SET_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN_AS_STRING
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BYTE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BYTE_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter SHORT
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory SHORT_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INTEGER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INTEGER_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LONG
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter FLOAT
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter DOUBLE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter NUMBER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory NUMBER_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CHARACTER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CHARACTER_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_DECIMAL
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_INTEGER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUILDER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUFFER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URL
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URL_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URI
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URI_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INET_ADDRESS
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter UUID
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory UUID_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CALENDAR
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CALENDAR_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LOCALE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory LOCALE_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter JSON_ELEMENT
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ENUM_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)
com.google.gson.reflect.TypeToken
com.google.gson.reflect.TypeToken: TypeToken()
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
com.google.gson.reflect.TypeToken: int hashCode()
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
com.google.gson.reflect.TypeToken: java.lang.String toString()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
com.google.gson.stream.JsonReader
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
com.google.gson.stream.JsonReader: void setLenient(boolean)
com.google.gson.stream.JsonReader: boolean isLenient()
com.google.gson.stream.JsonReader: void beginArray()
com.google.gson.stream.JsonReader: void endArray()
com.google.gson.stream.JsonReader: void beginObject()
com.google.gson.stream.JsonReader: void endObject()
com.google.gson.stream.JsonReader: boolean hasNext()
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
com.google.gson.stream.JsonReader: java.lang.String nextName()
com.google.gson.stream.JsonReader: java.lang.String nextString()
com.google.gson.stream.JsonReader: boolean nextBoolean()
com.google.gson.stream.JsonReader: void nextNull()
com.google.gson.stream.JsonReader: double nextDouble()
com.google.gson.stream.JsonReader: long nextLong()
com.google.gson.stream.JsonReader: int nextInt()
com.google.gson.stream.JsonReader: void close()
com.google.gson.stream.JsonReader: void skipValue()
com.google.gson.stream.JsonReader: java.lang.String toString()
com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()
com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope valueOf(java.lang.String)
com.google.gson.stream.JsonToken
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.gson.stream.JsonWriter
com.google.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)
com.google.gson.stream.JsonWriter: void setLenient(boolean)
com.google.gson.stream.JsonWriter: boolean isLenient()
com.google.gson.stream.JsonWriter: void setHtmlSafe(boolean)
com.google.gson.stream.JsonWriter: boolean isHtmlSafe()
com.google.gson.stream.JsonWriter: void setSerializeNulls(boolean)
com.google.gson.stream.JsonWriter: boolean getSerializeNulls()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
com.google.gson.stream.JsonWriter: void flush()
com.google.gson.stream.JsonWriter: void close()
com.google.gson.stream.MalformedJsonException
com.google.gson.stream.MalformedJsonException: long serialVersionUID
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String,java.lang.Throwable)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.Throwable)
com.tencent.mm.algorithm.Base64
com.tencent.mm.algorithm.Base64: Base64()
com.tencent.mm.algorithm.Base64: char[] encodeToChar(byte[],boolean)
com.tencent.mm.algorithm.Base64: byte[] decode(char[])
com.tencent.mm.algorithm.Base64: byte[] decodeFast(char[])
com.tencent.mm.algorithm.Base64: byte[] encodeToByte(byte[],boolean)
com.tencent.mm.algorithm.Base64: byte[] decode(byte[])
com.tencent.mm.algorithm.Base64: byte[] decodeFast(byte[])
com.tencent.mm.algorithm.Base64: java.lang.String encodeToString(byte[],boolean)
com.tencent.mm.algorithm.Base64: byte[] decode(java.lang.String)
com.tencent.mm.algorithm.Base64: byte[] decodeFast(java.lang.String)
com.tencent.mm.algorithm.LRUMap
com.tencent.mm.algorithm.LRUMap: LRUMap(int)
com.tencent.mm.algorithm.LRUMap: LRUMap(int,com.tencent.mm.algorithm.LRUMap$PreRemoveCallback)
com.tencent.mm.algorithm.LRUMap: int size()
com.tencent.mm.algorithm.LRUMap: void setMaxSize(int)
com.tencent.mm.algorithm.LRUMap: void setPerDeleteSize(int)
com.tencent.mm.algorithm.LRUMap: boolean check(java.lang.Object)
com.tencent.mm.algorithm.LRUMap: boolean checkAndUpTime(java.lang.Object)
com.tencent.mm.algorithm.LRUMap: java.lang.Object get(java.lang.Object)
com.tencent.mm.algorithm.LRUMap: java.lang.Object getAndUptime(java.lang.Object)
com.tencent.mm.algorithm.LRUMap: void remove(java.lang.Object)
com.tencent.mm.algorithm.LRUMap: void clear()
com.tencent.mm.algorithm.LRUMap: void clear(com.tencent.mm.algorithm.LRUMap$OnClearListener)
com.tencent.mm.algorithm.LRUMap: void update(java.lang.Object,java.lang.Object)
com.tencent.mm.algorithm.LRUMap$OnClearListener
com.tencent.mm.algorithm.LRUMap$OnClearListener: void onClear(java.lang.Object,java.lang.Object)
com.tencent.mm.algorithm.LRUMap$PreRemoveCallback
com.tencent.mm.algorithm.LRUMap$PreRemoveCallback: void preRemoveCallback(java.lang.Object,java.lang.Object)
com.tencent.mm.algorithm.LRUMap$TimeVal
com.tencent.mm.algorithm.LRUMap$TimeVal: java.lang.Object obj
com.tencent.mm.algorithm.LRUMap$TimeVal: java.lang.Long t
com.tencent.mm.algorithm.LRUMap$TimeVal: LRUMap$TimeVal(com.tencent.mm.algorithm.LRUMap,java.lang.Object)
com.tencent.mm.algorithm.LRUMap$TimeVal: void UpTime()
com.tencent.mm.algorithm.MD5
com.tencent.mm.algorithm.MD5: java.lang.String getMessageDigest(byte[])
com.tencent.mm.algorithm.MD5: byte[] getRawDigest(byte[])
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.io.FileInputStream,int,int,int)
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.io.FileInputStream,int)
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.lang.String)
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.io.File)
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.io.File,int)
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.lang.String,int,int)
com.tencent.mm.algorithm.MD5: java.lang.String getMD5(java.io.File,int,int)
com.tencent.mm.algorithm.TypeTransform
com.tencent.mm.algorithm.TypeTransform: byte[] intToByteArrayLH(int)
com.tencent.mm.algorithm.TypeTransform: byte[] longToByteArrayLH(long)
com.tencent.mm.algorithm.TypeTransform: byte[] intToByteArrayHL(int)
com.tencent.mm.algorithm.TypeTransform: byte[] longToByteArrayHL(long)
com.tencent.mm.algorithm.TypeTransform: int byteArrayLHToInt(byte[])
com.tencent.mm.algorithm.TypeTransform: int byteArrayLHToInt(byte[],int)
com.tencent.mm.algorithm.TypeTransform: long byteArrayLHToLong(byte[])
com.tencent.mm.algorithm.TypeTransform: long byteArrayLHToLong(byte[],int)
com.tencent.mm.algorithm.TypeTransform: int byteArrayHLToInt(byte[])
com.tencent.mm.algorithm.TypeTransform: int byteArrayHLToInt(byte[],int)
com.tencent.mm.algorithm.TypeTransform: long byteArrayHLToLong(byte[],int)
com.tencent.mm.algorithm.TypeTransform: long byteArrayHLToLong(byte[])
com.tencent.mm.algorithm.UIN
com.tencent.mm.algorithm.UIN: UIN(int)
com.tencent.mm.algorithm.UIN: UIN(long)
com.tencent.mm.algorithm.UIN: int value()
com.tencent.mm.algorithm.UIN: int valueOf(java.lang.String)
com.tencent.mm.algorithm.UIN: double doubleValue()
com.tencent.mm.algorithm.UIN: float floatValue()
com.tencent.mm.algorithm.UIN: int intValue()
com.tencent.mm.algorithm.UIN: long longValue()
com.tencent.mm.algorithm.UIN: java.lang.String toString()
com.tencent.mm.sdk.Build
com.tencent.mm.sdk.Build: int SDK_INT
com.tencent.mm.sdk.Build: java.lang.String SDK_VERSION_NAME
com.tencent.mm.sdk.Build: int TIMELINE_SUPPORTED_SDK_INT
com.tencent.mm.sdk.Build: int EMOJI_SUPPORTED_SDK_INT
com.tencent.mm.sdk.BuildConfig
com.tencent.mm.sdk.BuildConfig: boolean DEBUG
com.tencent.mm.sdk.BuildConfig: BuildConfig()
com.tencent.mm.sdk.ConstantsUI
com.tencent.mm.sdk.ConstantsUI: java.lang.String PREF_FILE_PATH
com.tencent.mm.sdk.ConstantsUI$Contact
com.tencent.mm.sdk.ConstantsUI$Contact: java.lang.String KUser
com.tencent.mm.sdk.MMAppMgr
com.tencent.mm.sdk.MMAppMgr: void activate(boolean)
com.tencent.mm.sdk.MMAppMgr: android.content.SharedPreferences getSharedPreferences(android.content.Context,int)
com.tencent.mm.sdk.MMAppMgr: com.tencent.mm.sdk.plugin.IMMPluginAPI getPluginMgr(android.content.Context)
com.tencent.mm.sdk.MMSharedPreferences
com.tencent.mm.sdk.MMSharedPreferences: MMSharedPreferences(android.content.Context)
com.tencent.mm.sdk.MMSharedPreferences: java.util.Map getAll()
com.tencent.mm.sdk.MMSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences: int getInt(java.lang.String,int)
com.tencent.mm.sdk.MMSharedPreferences: long getLong(java.lang.String,long)
com.tencent.mm.sdk.MMSharedPreferences: float getFloat(java.lang.String,float)
com.tencent.mm.sdk.MMSharedPreferences: boolean getBoolean(java.lang.String,boolean)
com.tencent.mm.sdk.MMSharedPreferences: boolean contains(java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences: android.content.SharedPreferences$Editor edit()
com.tencent.mm.sdk.MMSharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.tencent.mm.sdk.MMSharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.tencent.mm.sdk.MMSharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)
com.tencent.mm.sdk.channel.ConstantsMMessage
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String APP_PACKAGE
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String SDK_VERSION
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String CONTENT
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String CHECK_SUM
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String ACTION_MESSAGE
com.tencent.mm.sdk.channel.ConstantsMMessage: ConstantsMMessage()
com.tencent.mm.sdk.channel.MMessage
com.tencent.mm.sdk.channel.MMessage: MMessage()
com.tencent.mm.sdk.channel.MMessage: boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessage: void send(android.content.Context,java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.MMessage: void send(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.MMessage$CallBack
com.tencent.mm.sdk.channel.MMessage$CallBack: void handleMessage(android.content.Intent)
com.tencent.mm.sdk.channel.MMessage$Receiver
com.tencent.mm.sdk.channel.MMessage$Receiver: java.util.Map callbacks
com.tencent.mm.sdk.channel.MMessage$Receiver: MMessage$Receiver()
com.tencent.mm.sdk.channel.MMessage$Receiver: MMessage$Receiver(com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.channel.MMessage$Receiver: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.channel.MMessage$Receiver: void registerCallBack(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.channel.MMessage$Receiver: void unregisterCallBack(java.lang.String)
com.tencent.mm.sdk.channel.MMessageAct
com.tencent.mm.sdk.channel.MMessageAct: MMessageAct()
com.tencent.mm.sdk.channel.MMessageAct: boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessageAct: boolean send(android.content.Context,java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.MMessageAct: boolean send(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessageAct: boolean sendToWx(android.content.Context,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessageAct: boolean sendToWx(android.content.Context,java.lang.String)
com.tencent.mm.sdk.channel.MMessageUtil
com.tencent.mm.sdk.contact.RContact
com.tencent.mm.sdk.contact.RContact: java.lang.reflect.Field[] p
com.tencent.mm.sdk.contact.RContact: java.lang.String[] COLUMNS
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_USERNAME
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_ALIAS
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_CONREMARK
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_DOMAINLIST
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_NICKNAME
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_PYINITIAL
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_QUANPIN
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_SHOWHEAD
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_TYPE
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_WEIBOFLAG
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_WEIBONICKNAME
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_CONREMARK_PYFULL
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_CONREMARK_PYSHORT
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_VERIFY_FLAG
com.tencent.mm.sdk.contact.RContact: long contactId
com.tencent.mm.sdk.contact.RContact: java.lang.String field_username
com.tencent.mm.sdk.contact.RContact: java.lang.String field_alias
com.tencent.mm.sdk.contact.RContact: java.lang.String field_conRemark
com.tencent.mm.sdk.contact.RContact: java.lang.String field_domainList
com.tencent.mm.sdk.contact.RContact: java.lang.String field_nickname
com.tencent.mm.sdk.contact.RContact: java.lang.String field_pyInitial
com.tencent.mm.sdk.contact.RContact: java.lang.String field_quanPin
com.tencent.mm.sdk.contact.RContact: int field_showHead
com.tencent.mm.sdk.contact.RContact: int field_type
com.tencent.mm.sdk.contact.RContact: int field_weiboFlag
com.tencent.mm.sdk.contact.RContact: java.lang.String field_weiboNickname
com.tencent.mm.sdk.contact.RContact: java.lang.String field_conRemarkPYFull
com.tencent.mm.sdk.contact.RContact: java.lang.String field_conRemarkPYShort
com.tencent.mm.sdk.contact.RContact: byte[] field_lvbuff
com.tencent.mm.sdk.contact.RContact: int field_verifyFlag
com.tencent.mm.sdk.contact.RContact: int DEL_CONTACT_MSG
com.tencent.mm.sdk.contact.RContact: int NOT_IN_CHAT_LIST
com.tencent.mm.sdk.contact.RContact: int FAVOUR_CONTACT_SHOW_HEAD_CODE
com.tencent.mm.sdk.contact.RContact: java.lang.String FAVOUR_CONTACT_SHOW_HEAD_CHAR
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_NULL
com.tencent.mm.sdk.contact.RContact: int MM_SEX_UNKNOWN
com.tencent.mm.sdk.contact.RContact: int MM_SEX_MALE
com.tencent.mm.sdk.contact.RContact: int MM_SEX_FEMALE
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_WEIXIN
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_QQMICROBLOG
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_CHATROOM
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_EMAIL
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_QQ
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_BOTTLE
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_CONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_CHATCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_CHATROOMCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_BLACKLISTCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_DOMAINCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_HIDECONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_FAVOURCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_ALL
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_NOTMODIFY
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_MODIFY
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_HAS_HEADIMG
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_HAS_NO_HEADIMG
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_LOCAL_EXIST
com.tencent.mm.sdk.contact.RContact: int COL_ID_INVALID_VALUE
com.tencent.mm.sdk.contact.RContact: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.contact.RContact: void reset()
com.tencent.mm.sdk.contact.RContact: RContact(java.lang.String)
com.tencent.mm.sdk.contact.RContact: RContact()
com.tencent.mm.sdk.contact.RContact: void setHardCodeNickMaps(java.util.Map)
com.tencent.mm.sdk.contact.RContact: void setHardCodeAliasMaps(java.util.Map)
com.tencent.mm.sdk.contact.RContact: int calculateShowHead()
com.tencent.mm.sdk.contact.RContact: void setNullContact()
com.tencent.mm.sdk.contact.RContact: void setChatroomContact()
com.tencent.mm.sdk.contact.RContact: void setContact()
com.tencent.mm.sdk.contact.RContact: void unSetContact()
com.tencent.mm.sdk.contact.RContact: void setBlackList()
com.tencent.mm.sdk.contact.RContact: void unSetBlackList()
com.tencent.mm.sdk.contact.RContact: void setChatContact()
com.tencent.mm.sdk.contact.RContact: void unSetChatContact()
com.tencent.mm.sdk.contact.RContact: void setHidden()
com.tencent.mm.sdk.contact.RContact: void unSetHidden()
com.tencent.mm.sdk.contact.RContact: void setFavour()
com.tencent.mm.sdk.contact.RContact: void unSetFavour()
com.tencent.mm.sdk.contact.RContact: int getContactBit()
com.tencent.mm.sdk.contact.RContact: int getBlackListContactBit()
com.tencent.mm.sdk.contact.RContact: int getDomainContactBit()
com.tencent.mm.sdk.contact.RContact: int getHiddenContactBit()
com.tencent.mm.sdk.contact.RContact: boolean isContact()
com.tencent.mm.sdk.contact.RContact: boolean isContact(int)
com.tencent.mm.sdk.contact.RContact: boolean isChatContact()
com.tencent.mm.sdk.contact.RContact: boolean isHidden()
com.tencent.mm.sdk.contact.RContact: boolean isImgLocalExist()
com.tencent.mm.sdk.contact.RContact: boolean isChatRoomContact()
com.tencent.mm.sdk.contact.RContact: boolean isBlackListContact()
com.tencent.mm.sdk.contact.RContact: boolean isDomainContact()
com.tencent.mm.sdk.contact.RContact: boolean isFavourContact()
com.tencent.mm.sdk.contact.RContact: int getContactID()
com.tencent.mm.sdk.contact.RContact: int getSex()
com.tencent.mm.sdk.contact.RContact: void setSex(int)
com.tencent.mm.sdk.contact.RContact: int getType()
com.tencent.mm.sdk.contact.RContact: void setType(int)
com.tencent.mm.sdk.contact.RContact: int getShowHead()
com.tencent.mm.sdk.contact.RContact: void setShowHead(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getUsername()
com.tencent.mm.sdk.contact.RContact: void setUsername(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getNickname()
com.tencent.mm.sdk.contact.RContact: void setNickname(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getFaceBookUsername()
com.tencent.mm.sdk.contact.RContact: void setFaceBookUsername(java.lang.String)
com.tencent.mm.sdk.contact.RContact: long getFaceBookId()
com.tencent.mm.sdk.contact.RContact: void setFaceBookId(long)
com.tencent.mm.sdk.contact.RContact: java.lang.String getPyInitial()
com.tencent.mm.sdk.contact.RContact: void setPyInitial(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getQuanPin()
com.tencent.mm.sdk.contact.RContact: void setQuanPin(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setAlias(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getAlias()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDisplayNick()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDisplayRemark()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDisplayUser()
com.tencent.mm.sdk.contact.RContact: java.lang.String formatDisplayNick(java.lang.String)
com.tencent.mm.sdk.contact.RContact: int getUin()
com.tencent.mm.sdk.contact.RContact: java.lang.String getEmail()
com.tencent.mm.sdk.contact.RContact: java.lang.String getMobile()
com.tencent.mm.sdk.contact.RContact: int getShowFlag()
com.tencent.mm.sdk.contact.RContact: int getConType()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConRemark()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConRemarkPYShort()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConRemarkPYFull()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConSMBlog()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConQQMBlog()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDomainList()
com.tencent.mm.sdk.contact.RContact: int getChatroomNotify()
com.tencent.mm.sdk.contact.RContact: int getImgFlag()
com.tencent.mm.sdk.contact.RContact: int getPersonalCard()
com.tencent.mm.sdk.contact.RContact: void setPersonalCard(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getSignature()
com.tencent.mm.sdk.contact.RContact: void setSignature(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getProvince()
com.tencent.mm.sdk.contact.RContact: void setProvince(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getCity()
com.tencent.mm.sdk.contact.RContact: void setCity(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setDistance(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getDistance()
com.tencent.mm.sdk.contact.RContact: void setFromType(int)
com.tencent.mm.sdk.contact.RContact: int getFromType()
com.tencent.mm.sdk.contact.RContact: void setSource(int)
com.tencent.mm.sdk.contact.RContact: int getSource()
com.tencent.mm.sdk.contact.RContact: void setWeibo(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getWeibo()
com.tencent.mm.sdk.contact.RContact: int getWeiboFlag()
com.tencent.mm.sdk.contact.RContact: void setWeiboFlag(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getWeiboNickName()
com.tencent.mm.sdk.contact.RContact: void setWeiboNickName(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setUin(int)
com.tencent.mm.sdk.contact.RContact: void setEmail(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setMobile(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setShowFlag(int)
com.tencent.mm.sdk.contact.RContact: void setConType(int)
com.tencent.mm.sdk.contact.RContact: void setConRemark(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConRemarkPYShort(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConRemarkPYFull(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConSMBlog(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConQQMBlog(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setDomainList(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setChatroomNotify(int)
com.tencent.mm.sdk.contact.RContact: void setImgFlag(int)
com.tencent.mm.sdk.contact.RContact: int getVerifyFlag()
com.tencent.mm.sdk.contact.RContact: void setVerifyFlag(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getVerifyInfo()
com.tencent.mm.sdk.contact.RContact: void setVerifyInfo(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getRegionCode()
com.tencent.mm.sdk.contact.RContact: void setRegionCode(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void convertFrom(android.database.Cursor)
com.tencent.mm.sdk.contact.RContact: android.content.ContentValues convertTo()
com.tencent.mm.sdk.contact.RContactAvatar
com.tencent.mm.sdk.contact.RContactAvatar: RContactAvatar()
com.tencent.mm.sdk.contact.RContactDB
com.tencent.mm.sdk.contact.RContactDB: RContactDB(android.content.Context)
com.tencent.mm.sdk.contact.RContactDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.contact.RContactStorage
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String AUTHORITY
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String TABLE
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String PRIMARY_KEY
com.tencent.mm.sdk.contact.RContactStorage: com.tencent.mm.sdk.contact.RContactStorage create(android.content.Context)
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String getTableName()
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String getPrimaryKey()
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String[] getColumns()
com.tencent.mm.sdk.contact.RContactStorage: com.tencent.mm.sdk.contact.RContact get(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation
com.tencent.mm.sdk.conversation.RConversation: java.lang.reflect.Field[] p
com.tencent.mm.sdk.conversation.RConversation: java.lang.String[] COLUMNS
com.tencent.mm.sdk.conversation.RConversation: int NOT_SHOWN_TIPS
com.tencent.mm.sdk.conversation.RConversation: int HAS_SHOWN_TIPS
com.tencent.mm.sdk.conversation.RConversation: int FLAG_NORMAL
com.tencent.mm.sdk.conversation.RConversation: int ROOM_MUTE_ON
com.tencent.mm.sdk.conversation.RConversation: int ROOM_MUTE_OFF
com.tencent.mm.sdk.conversation.RConversation: int field_unReadCount
com.tencent.mm.sdk.conversation.RConversation: int field_chatmode
com.tencent.mm.sdk.conversation.RConversation: int field_status
com.tencent.mm.sdk.conversation.RConversation: int field_isSend
com.tencent.mm.sdk.conversation.RConversation: long field_conversationTime
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_username
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_content
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_msgType
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_customNotify
com.tencent.mm.sdk.conversation.RConversation: int field_showTips
com.tencent.mm.sdk.conversation.RConversation: long field_flag
com.tencent.mm.sdk.conversation.RConversation: int COL_UNREAD_COUNT_INVALID_VALUE
com.tencent.mm.sdk.conversation.RConversation: int INDEX_UNREAD_COUNT
com.tencent.mm.sdk.conversation.RConversation: int INDEX_STATUE
com.tencent.mm.sdk.conversation.RConversation: int INDEX_IS_SEND
com.tencent.mm.sdk.conversation.RConversation: int INDEX_CONVERSATION_TIME
com.tencent.mm.sdk.conversation.RConversation: int INDEX_USERNAME
com.tencent.mm.sdk.conversation.RConversation: int INDEX_CONTENT
com.tencent.mm.sdk.conversation.RConversation: int INDEX_MSGTYPE
com.tencent.mm.sdk.conversation.RConversation: int INDEX_FLAG
com.tencent.mm.sdk.conversation.RConversation: java.lang.String OLD_TABLE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String OLD_BOTTLE_TABLE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_UNREAD_COUNT
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_CHATMODE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_STATUS
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_IS_SEND
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_CONVERSATION_TIME
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_USERNAME
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_CONTENT
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_MSGTYPE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_FLAG
com.tencent.mm.sdk.conversation.RConversation: long MAX_TIME
com.tencent.mm.sdk.conversation.RConversation: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.conversation.RConversation: java.lang.reflect.Field[] getFields()
com.tencent.mm.sdk.conversation.RConversation: RConversation()
com.tencent.mm.sdk.conversation.RConversation: RConversation(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: int getUnReadCount()
com.tencent.mm.sdk.conversation.RConversation: void setUnReadCount(int)
com.tencent.mm.sdk.conversation.RConversation: int getStatus()
com.tencent.mm.sdk.conversation.RConversation: void setStatus(int)
com.tencent.mm.sdk.conversation.RConversation: int getIsSend()
com.tencent.mm.sdk.conversation.RConversation: void setIsSend(int)
com.tencent.mm.sdk.conversation.RConversation: int getChatmode()
com.tencent.mm.sdk.conversation.RConversation: void setChatmode(int)
com.tencent.mm.sdk.conversation.RConversation: long getConversationTime()
com.tencent.mm.sdk.conversation.RConversation: void setConversationTime(long)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getUsername()
com.tencent.mm.sdk.conversation.RConversation: void setUsername(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getCustomNotify()
com.tencent.mm.sdk.conversation.RConversation: void setCustomNotify(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getContent()
com.tencent.mm.sdk.conversation.RConversation: void setContent(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getMsgType()
com.tencent.mm.sdk.conversation.RConversation: void setMsgType(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: int getShowTips()
com.tencent.mm.sdk.conversation.RConversation: void setShowTips(int)
com.tencent.mm.sdk.conversation.RConversation: long getFlag()
com.tencent.mm.sdk.conversation.RConversation: void setFlag(long)
com.tencent.mm.sdk.conversation.RConversationDB
com.tencent.mm.sdk.conversation.RConversationDB: RConversationDB(android.content.Context)
com.tencent.mm.sdk.conversation.RConversationDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.conversation.RConversationStorage
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String AUTHORITY
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String TABLE
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String PRIMARY_KEY
com.tencent.mm.sdk.conversation.RConversationStorage: com.tencent.mm.sdk.conversation.RConversationStorage create(android.content.Context)
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String getTableName()
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String getPrimaryKey()
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String[] getColumns()
com.tencent.mm.sdk.conversation.RConversationStorage: com.tencent.mm.sdk.conversation.RConversation get(java.lang.String)
com.tencent.mm.sdk.message.RMsgInfo
com.tencent.mm.sdk.message.RMsgInfo: java.lang.reflect.Field[] p
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String[] COLUMNS
com.tencent.mm.sdk.message.RMsgInfo: long field_msgId
com.tencent.mm.sdk.message.RMsgInfo: int field_msgSvrId
com.tencent.mm.sdk.message.RMsgInfo: int field_type
com.tencent.mm.sdk.message.RMsgInfo: int field_status
com.tencent.mm.sdk.message.RMsgInfo: int field_isSend
com.tencent.mm.sdk.message.RMsgInfo: int field_isShowTimer
com.tencent.mm.sdk.message.RMsgInfo: long field_createTime
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_talker
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_content
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_imgPath
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_reserved
com.tencent.mm.sdk.message.RMsgInfo: byte[] field_lvBuffer
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String commentUrl
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_ID
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_ID_SVR
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_TYPE
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_STATUS
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_IS_SEND
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_IS_SHOWTIMER
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_CREATE_TIME
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_TALKER
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_CONTENT
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_IMG_PATH
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_RESERVED
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_LVBUFFER
com.tencent.mm.sdk.message.RMsgInfo: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.message.RMsgInfo: RMsgInfo()
com.tencent.mm.sdk.message.RMsgInfo: RMsgInfo(long)
com.tencent.mm.sdk.message.RMsgInfo: RMsgInfo(java.lang.String)
com.tencent.mm.sdk.message.RMsgInfoDB
com.tencent.mm.sdk.message.RMsgInfoDB: java.lang.String TABLE
com.tencent.mm.sdk.message.RMsgInfoDB: RMsgInfoDB(android.content.Context)
com.tencent.mm.sdk.message.RMsgInfoDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.message.RMsgInfoStorage
com.tencent.mm.sdk.message.RMsgInfoStorage: java.lang.String AUTHORITY
com.tencent.mm.sdk.message.RMsgInfoStorage: java.lang.String PRIMARY_KEY
com.tencent.mm.sdk.message.RMsgInfoStorage: com.tencent.mm.sdk.message.RMsgInfoStorage create(android.content.Context)
com.tencent.mm.sdk.message.RMsgInfoStorage: long doInsert(com.tencent.mm.sdk.message.RMsgInfo)
com.tencent.mm.sdk.message.RMsgInfoStorage: int doDelete(long)
com.tencent.mm.sdk.message.RMsgInfoStorage: int doUpdate(long,com.tencent.mm.sdk.message.RMsgInfo)
com.tencent.mm.sdk.message.RMsgInfoStorage: com.tencent.mm.sdk.message.RMsgInfo getMsgById(long)
com.tencent.mm.sdk.message.RMsgInfoStorage: android.database.Cursor getMsgByTalker(java.lang.String)
com.tencent.mm.sdk.openapi.BaseReq
com.tencent.mm.sdk.openapi.BaseReq: java.lang.String transaction
com.tencent.mm.sdk.openapi.BaseReq: BaseReq()
com.tencent.mm.sdk.openapi.BaseReq: int getType()
com.tencent.mm.sdk.openapi.BaseReq: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseReq: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseResp
com.tencent.mm.sdk.openapi.BaseResp: int errCode
com.tencent.mm.sdk.openapi.BaseResp: java.lang.String errStr
com.tencent.mm.sdk.openapi.BaseResp: java.lang.String transaction
com.tencent.mm.sdk.openapi.BaseResp: BaseResp()
com.tencent.mm.sdk.openapi.BaseResp: int getType()
com.tencent.mm.sdk.openapi.BaseResp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseResp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseResp$ErrCode
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_OK
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_COMM
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_USER_CANCEL
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_SENT_FAILED
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_AUTH_DENIED
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_UNSUPPORT
com.tencent.mm.sdk.openapi.ConstantsAPI
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String ACTION_HANDLE_APP_REGISTER
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String ACTION_HANDLE_APP_UNREGISTER
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String ACTION_REFRESH_WXAPP
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_UNKNOWN
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_SENDAUTH
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_SENDMESSAGE_TO_WX
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_GETMESSAGE_FROM_WX
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_SHOWMESSAGE_FROM_WX
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String WX_TOKEN_KEY
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String WX_TOKEN_VALUE
com.tencent.mm.sdk.openapi.GetMessageFromWX
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: java.lang.String username
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: GetMessageFromWX$Req()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: GetMessageFromWX$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: int getType()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: com.tencent.mm.sdk.openapi.WXMediaMessage message
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: GetMessageFromWX$Resp()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: GetMessageFromWX$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: int getType()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.IWXAPI
com.tencent.mm.sdk.openapi.IWXAPI: boolean registerApp(java.lang.String)
com.tencent.mm.sdk.openapi.IWXAPI: void unregisterApp()
com.tencent.mm.sdk.openapi.IWXAPI: boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler)
com.tencent.mm.sdk.openapi.IWXAPI: boolean isWXAppInstalled()
com.tencent.mm.sdk.openapi.IWXAPI: boolean isWXAppSupportAPI()
com.tencent.mm.sdk.openapi.IWXAPI: int getWXAppSupportAPI()
com.tencent.mm.sdk.openapi.IWXAPI: boolean openWXApp()
com.tencent.mm.sdk.openapi.IWXAPI: boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq)
com.tencent.mm.sdk.openapi.IWXAPI: boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp)
com.tencent.mm.sdk.openapi.IWXAPIEventHandler
com.tencent.mm.sdk.openapi.IWXAPIEventHandler: void onReq(com.tencent.mm.sdk.openapi.BaseReq)
com.tencent.mm.sdk.openapi.IWXAPIEventHandler: void onResp(com.tencent.mm.sdk.openapi.BaseResp)
com.tencent.mm.sdk.openapi.SendAuth
com.tencent.mm.sdk.openapi.SendAuth$Req
com.tencent.mm.sdk.openapi.SendAuth$Req: java.lang.String scope
com.tencent.mm.sdk.openapi.SendAuth$Req: java.lang.String state
com.tencent.mm.sdk.openapi.SendAuth$Req: SendAuth$Req()
com.tencent.mm.sdk.openapi.SendAuth$Req: SendAuth$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Req: int getType()
com.tencent.mm.sdk.openapi.SendAuth$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Resp
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String userName
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String token
com.tencent.mm.sdk.openapi.SendAuth$Resp: int expireDate
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String state
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String resultUrl
com.tencent.mm.sdk.openapi.SendAuth$Resp: SendAuth$Resp()
com.tencent.mm.sdk.openapi.SendAuth$Resp: SendAuth$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Resp: int getType()
com.tencent.mm.sdk.openapi.SendAuth$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Resp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX
com.tencent.mm.sdk.openapi.SendMessageToWX$Req
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int WXSceneSession
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int WXSceneTimeline
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: com.tencent.mm.sdk.openapi.WXMediaMessage message
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int scene
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: SendMessageToWX$Req()
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: SendMessageToWX$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int getType()
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: SendMessageToWX$Resp()
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: SendMessageToWX$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: int getType()
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: com.tencent.mm.sdk.openapi.WXMediaMessage message
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: ShowMessageFromWX$Req()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: ShowMessageFromWX$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: int getType()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: ShowMessageFromWX$Resp()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: ShowMessageFromWX$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: int getType()
com.tencent.mm.sdk.openapi.WXAPIFactory
com.tencent.mm.sdk.openapi.WXAPIFactory: com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String)
com.tencent.mm.sdk.openapi.WXAPIFactory: com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean)
com.tencent.mm.sdk.openapi.WXAppExtendObject
com.tencent.mm.sdk.openapi.WXAppExtendObject: java.lang.String extInfo
com.tencent.mm.sdk.openapi.WXAppExtendObject: java.lang.String filePath
com.tencent.mm.sdk.openapi.WXAppExtendObject: byte[] fileData
com.tencent.mm.sdk.openapi.WXAppExtendObject: WXAppExtendObject()
com.tencent.mm.sdk.openapi.WXAppExtendObject: WXAppExtendObject(java.lang.String,byte[])
com.tencent.mm.sdk.openapi.WXAppExtendObject: WXAppExtendObject(java.lang.String,java.lang.String)
com.tencent.mm.sdk.openapi.WXAppExtendObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXAppExtendObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXAppExtendObject: int type()
com.tencent.mm.sdk.openapi.WXAppExtendObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXAppLaunchData
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPPLAUNCH
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPP_RESULT
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPP_SHOW
com.tencent.mm.sdk.openapi.WXAppLaunchData: int launchType
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String message
com.tencent.mm.sdk.openapi.WXAppLaunchData: WXAppLaunchData()
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder: WXAppLaunchData$Builder()
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder: com.tencent.mm.sdk.openapi.WXAppLaunchData fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder: android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXAppLaunchData)
com.tencent.mm.sdk.openapi.WXEmojiObject
com.tencent.mm.sdk.openapi.WXEmojiObject: byte[] emojiData
com.tencent.mm.sdk.openapi.WXEmojiObject: java.lang.String emojiPath
com.tencent.mm.sdk.openapi.WXEmojiObject: WXEmojiObject()
com.tencent.mm.sdk.openapi.WXEmojiObject: WXEmojiObject(byte[])
com.tencent.mm.sdk.openapi.WXEmojiObject: WXEmojiObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXEmojiObject: void setEmojiData(byte[])
com.tencent.mm.sdk.openapi.WXEmojiObject: void setEmojiPath(java.lang.String)
com.tencent.mm.sdk.openapi.WXEmojiObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXEmojiObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXEmojiObject: int type()
com.tencent.mm.sdk.openapi.WXEmojiObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXFileObject
com.tencent.mm.sdk.openapi.WXFileObject: byte[] fileData
com.tencent.mm.sdk.openapi.WXFileObject: java.lang.String filePath
com.tencent.mm.sdk.openapi.WXFileObject: WXFileObject()
com.tencent.mm.sdk.openapi.WXFileObject: WXFileObject(byte[])
com.tencent.mm.sdk.openapi.WXFileObject: WXFileObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXFileObject: void setFileData(byte[])
com.tencent.mm.sdk.openapi.WXFileObject: void setFilePath(java.lang.String)
com.tencent.mm.sdk.openapi.WXFileObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXFileObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXFileObject: int type()
com.tencent.mm.sdk.openapi.WXFileObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXImageObject
com.tencent.mm.sdk.openapi.WXImageObject: byte[] imageData
com.tencent.mm.sdk.openapi.WXImageObject: java.lang.String imagePath
com.tencent.mm.sdk.openapi.WXImageObject: java.lang.String imageUrl
com.tencent.mm.sdk.openapi.WXImageObject: WXImageObject()
com.tencent.mm.sdk.openapi.WXImageObject: WXImageObject(byte[])
com.tencent.mm.sdk.openapi.WXImageObject: WXImageObject(android.graphics.Bitmap)
com.tencent.mm.sdk.openapi.WXImageObject: void setImagePath(java.lang.String)
com.tencent.mm.sdk.openapi.WXImageObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXImageObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXImageObject: int type()
com.tencent.mm.sdk.openapi.WXImageObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXMediaMessage
com.tencent.mm.sdk.openapi.WXMediaMessage: java.lang.String ACTION_WXAPPMESSAGE
com.tencent.mm.sdk.openapi.WXMediaMessage: int sdkVer
com.tencent.mm.sdk.openapi.WXMediaMessage: java.lang.String title
com.tencent.mm.sdk.openapi.WXMediaMessage: java.lang.String description
com.tencent.mm.sdk.openapi.WXMediaMessage: byte[] thumbData
com.tencent.mm.sdk.openapi.WXMediaMessage: com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject mediaObject
com.tencent.mm.sdk.openapi.WXMediaMessage: WXMediaMessage()
com.tencent.mm.sdk.openapi.WXMediaMessage: WXMediaMessage(com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject)
com.tencent.mm.sdk.openapi.WXMediaMessage: int getType()
com.tencent.mm.sdk.openapi.WXMediaMessage: void setThumbImage(android.graphics.Bitmap)
com.tencent.mm.sdk.openapi.WXMediaMessage: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: java.lang.String KEY_IDENTIFIER
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: WXMediaMessage$Builder()
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXMediaMessage)
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: com.tencent.mm.sdk.openapi.WXMediaMessage fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_UNKNOWN
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_TEXT
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_IMAGE
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_MUSIC
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_VIDEO
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_URL
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_FILE
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_APPDATA
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_EMOJI
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int type()
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXMusicObject
com.tencent.mm.sdk.openapi.WXMusicObject: java.lang.String musicUrl
com.tencent.mm.sdk.openapi.WXMusicObject: java.lang.String musicLowBandUrl
com.tencent.mm.sdk.openapi.WXMusicObject: WXMusicObject()
com.tencent.mm.sdk.openapi.WXMusicObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMusicObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMusicObject: int type()
com.tencent.mm.sdk.openapi.WXMusicObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXTextObject
com.tencent.mm.sdk.openapi.WXTextObject: java.lang.String text
com.tencent.mm.sdk.openapi.WXTextObject: WXTextObject()
com.tencent.mm.sdk.openapi.WXTextObject: WXTextObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXTextObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXTextObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXTextObject: int type()
com.tencent.mm.sdk.openapi.WXTextObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXVideoObject
com.tencent.mm.sdk.openapi.WXVideoObject: java.lang.String videoUrl
com.tencent.mm.sdk.openapi.WXVideoObject: java.lang.String videoLowBandUrl
com.tencent.mm.sdk.openapi.WXVideoObject: WXVideoObject()
com.tencent.mm.sdk.openapi.WXVideoObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXVideoObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXVideoObject: int type()
com.tencent.mm.sdk.openapi.WXVideoObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXWebpageObject
com.tencent.mm.sdk.openapi.WXWebpageObject: java.lang.String webpageUrl
com.tencent.mm.sdk.openapi.WXWebpageObject: WXWebpageObject()
com.tencent.mm.sdk.openapi.WXWebpageObject: WXWebpageObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXWebpageObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXWebpageObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXWebpageObject: int type()
com.tencent.mm.sdk.openapi.WXWebpageObject: boolean checkArgs()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil
com.tencent.mm.sdk.platformtools.BackwardSupportUtil: BackwardSupportUtil()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper: BackwardSupportUtil$AnimationHelper()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper: void cancelAnimation(android.view.View,android.view.animation.Animation)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper: void overridePendingTransition(android.app.Activity,int,int)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper: void cancelAnimation(android.view.View,android.view.animation.Animation)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: BackwardSupportUtil$BitmapFactory()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,float)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: int fromDPToPix(android.content.Context,float)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,float)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: java.lang.String getDisplayDensityType(android.content.Context)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap getBitmapFromURL(java.lang.String)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper: BackwardSupportUtil$ExifHelper()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper: int getExifOrientation(java.lang.String)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory: BackwardSupportUtil$SmoothScrollFactory()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory: void scrollToTop(android.widget.ListView)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory: void scrollTo(android.widget.ListView,int)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll: void doScroll(android.widget.ListView)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll: void doScroll(android.widget.ListView,int)
com.tencent.mm.sdk.platformtools.ChannelUtil
com.tencent.mm.sdk.platformtools.ChannelUtil: int FLAG_UPDATE_EXTERNAL
com.tencent.mm.sdk.platformtools.ChannelUtil: int FLAG_UPDATE_NOTIP
com.tencent.mm.sdk.platformtools.ChannelUtil: int FLAG_NULL
com.tencent.mm.sdk.platformtools.ChannelUtil: int channelId
com.tencent.mm.sdk.platformtools.ChannelUtil: java.lang.String profileDeviceType
com.tencent.mm.sdk.platformtools.ChannelUtil: int updateMode
com.tencent.mm.sdk.platformtools.ChannelUtil: int buildRev
com.tencent.mm.sdk.platformtools.ChannelUtil: java.lang.String marketURL
com.tencent.mm.sdk.platformtools.ChannelUtil: boolean fullVersionInfo
com.tencent.mm.sdk.platformtools.ChannelUtil: void setupChannelId(android.content.Context)
com.tencent.mm.sdk.platformtools.ChannelUtil: void loadProfile(android.content.Context)
com.tencent.mm.sdk.platformtools.ChannelUtil: java.lang.String formatVersion(android.content.Context,int)
com.tencent.mm.sdk.platformtools.CharSequences
com.tencent.mm.sdk.platformtools.CharSequences: CharSequences()
com.tencent.mm.sdk.platformtools.CharSequences: java.lang.CharSequence forAsciiBytes(byte[])
com.tencent.mm.sdk.platformtools.CharSequences: java.lang.CharSequence forAsciiBytes(byte[],int,int)
com.tencent.mm.sdk.platformtools.CharSequences: boolean equals(java.lang.CharSequence,java.lang.CharSequence)
com.tencent.mm.sdk.platformtools.CharSequences: int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)
com.tencent.mm.sdk.platformtools.InetUtil
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv4Address(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv6StdAddress(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv6HexCompressedAddress(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv6Address(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: java.net.InetAddress getByDottedAddress(java.lang.String)
com.tencent.mm.sdk.platformtools.KVConfig
com.tencent.mm.sdk.platformtools.KVConfig: KVConfig()
com.tencent.mm.sdk.platformtools.KVConfig: java.util.Map parseIni(java.lang.String)
com.tencent.mm.sdk.platformtools.KVConfig: java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.LBSManager
com.tencent.mm.sdk.platformtools.LBSManager: java.lang.String FILTER_GPS
com.tencent.mm.sdk.platformtools.LBSManager: float INVALID_LAT
com.tencent.mm.sdk.platformtools.LBSManager: float INVALID_LNG
com.tencent.mm.sdk.platformtools.LBSManager: int INVALID_ACC
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_HARDWARE
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_NET
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_REPORT_HARWARE
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_REPORT_NETWORK
com.tencent.mm.sdk.platformtools.LBSManager: LBSManager(android.content.Context,com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener)
com.tencent.mm.sdk.platformtools.LBSManager: void start()
com.tencent.mm.sdk.platformtools.LBSManager: boolean isGpsEnable()
com.tencent.mm.sdk.platformtools.LBSManager: boolean isNetworkPrividerEnable()
com.tencent.mm.sdk.platformtools.LBSManager: void removeGpsUpdate()
com.tencent.mm.sdk.platformtools.LBSManager: void requestGpsUpdate()
com.tencent.mm.sdk.platformtools.LBSManager: void removeListener()
com.tencent.mm.sdk.platformtools.LBSManager: java.lang.String getTelLocation()
com.tencent.mm.sdk.platformtools.LBSManager: java.lang.String getWIFILocation()
com.tencent.mm.sdk.platformtools.LBSManager: void setLocationCache(float,float,int,int)
com.tencent.mm.sdk.platformtools.LBSManager: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener: void onLocationGot(float,float,int,int,java.lang.String,java.lang.String,boolean)
com.tencent.mm.sdk.platformtools.LVBuffer
com.tencent.mm.sdk.platformtools.LVBuffer: int LENGTH_ALLOC_PER_NEW
com.tencent.mm.sdk.platformtools.LVBuffer: int MAX_STRING_LENGTH
com.tencent.mm.sdk.platformtools.LVBuffer: LVBuffer()
com.tencent.mm.sdk.platformtools.LVBuffer: int initParse(byte[])
com.tencent.mm.sdk.platformtools.LVBuffer: int getInt()
com.tencent.mm.sdk.platformtools.LVBuffer: long getLong()
com.tencent.mm.sdk.platformtools.LVBuffer: java.lang.String getString()
com.tencent.mm.sdk.platformtools.LVBuffer: boolean checkGetFinish()
com.tencent.mm.sdk.platformtools.LVBuffer: int initBuild()
com.tencent.mm.sdk.platformtools.LVBuffer: int putInt(int)
com.tencent.mm.sdk.platformtools.LVBuffer: int putLong(long)
com.tencent.mm.sdk.platformtools.LVBuffer: int putString(java.lang.String)
com.tencent.mm.sdk.platformtools.LVBuffer: byte[] buildFinish()
com.tencent.mm.sdk.platformtools.LocaleUtil
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String LANGUAGE_DEFAULT
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String LANGUAGE_KEY
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String TAIWAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String HONGKONG
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String CHINA
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String ENGLISH
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String THAI
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String INDONESIAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String VIETNAMESE
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String PORTUGUESE
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String SPANISH
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String RUSSIAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String ARABIC
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String HEBREW
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String POLISH
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String HINDI
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String JAPANESE
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String ITALIAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String KOREAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String MALAY
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String TURKEY
com.tencent.mm.sdk.platformtools.LocaleUtil: boolean isLanguageSupported(java.lang.String)
com.tencent.mm.sdk.platformtools.LocaleUtil: void updateApplicationResourceLocale(android.content.Context,java.util.Locale)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.util.Locale transLanguageToLocale(java.lang.String)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String getCurrentCountryCode()
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String getApplicationLanguage()
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String loadApplicationLanguage(android.content.SharedPreferences,android.content.Context)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String loadApplicationLanguageSettings(android.content.SharedPreferences,android.content.Context)
com.tencent.mm.sdk.platformtools.LocaleUtil: void saveApplicationLanguage(android.content.SharedPreferences,android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Log
com.tencent.mm.sdk.platformtools.Log: int LEVEL_VERBOSE
com.tencent.mm.sdk.platformtools.Log: int LEVEL_DEBUG
com.tencent.mm.sdk.platformtools.Log: int LEVEL_INFO
com.tencent.mm.sdk.platformtools.Log: int LEVEL_WARNING
com.tencent.mm.sdk.platformtools.Log: int LEVEL_ERROR
com.tencent.mm.sdk.platformtools.Log: int LEVEL_FATAL
com.tencent.mm.sdk.platformtools.Log: int LEVEL_NONE
com.tencent.mm.sdk.platformtools.Log: Log()
com.tencent.mm.sdk.platformtools.Log: void setOutputPath(java.lang.String,java.lang.String,java.lang.String,int)
com.tencent.mm.sdk.platformtools.Log: void setOutputStream(java.io.InputStream,java.io.OutputStream,java.lang.String,java.lang.String,int)
com.tencent.mm.sdk.platformtools.Log: void reset()
com.tencent.mm.sdk.platformtools.Log: void setLevel(int,boolean)
com.tencent.mm.sdk.platformtools.Log: int getLevel()
com.tencent.mm.sdk.platformtools.Log: void f(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void e(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void w(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void i(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void d(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void v(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void f(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void e(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void w(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void i(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void d(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void v(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: java.lang.String getSysInfo()
com.tencent.mm.sdk.platformtools.MAlarmHandler
com.tencent.mm.sdk.platformtools.MAlarmHandler: long NEXT_FIRE_INTERVAL
com.tencent.mm.sdk.platformtools.MAlarmHandler: void initAlarmBumper(com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper)
com.tencent.mm.sdk.platformtools.MAlarmHandler: void finalize()
com.tencent.mm.sdk.platformtools.MAlarmHandler: MAlarmHandler(com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack,boolean)
com.tencent.mm.sdk.platformtools.MAlarmHandler: long fire()
com.tencent.mm.sdk.platformtools.MAlarmHandler: void startTimer(long)
com.tencent.mm.sdk.platformtools.MAlarmHandler: void stopTimer()
com.tencent.mm.sdk.platformtools.MAlarmHandler: boolean stopped()
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack: boolean onTimerExpired()
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper: void prepare()
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper: void cancel()
com.tencent.mm.sdk.platformtools.MMApplicationContext
com.tencent.mm.sdk.platformtools.MMApplicationContext: void setContext(android.content.Context)
com.tencent.mm.sdk.platformtools.MMApplicationContext: android.content.Context getContext()
com.tencent.mm.sdk.platformtools.MMApplicationContext: java.lang.String getPackageName()
com.tencent.mm.sdk.platformtools.MMApplicationContext: java.lang.String getDefaultPreferencePath()
com.tencent.mm.sdk.platformtools.MMEntryLock
com.tencent.mm.sdk.platformtools.MMEntryLock: boolean lock(java.lang.String)
com.tencent.mm.sdk.platformtools.MMEntryLock: void unlock(java.lang.String)
com.tencent.mm.sdk.platformtools.MMEntryLock: boolean isLocked(java.lang.String)
com.tencent.mm.sdk.platformtools.MTimerHandler
com.tencent.mm.sdk.platformtools.MTimerHandler: MTimerHandler(com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack,boolean)
com.tencent.mm.sdk.platformtools.MTimerHandler: MTimerHandler(android.os.Looper,com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack,boolean)
com.tencent.mm.sdk.platformtools.MTimerHandler: void finalize()
com.tencent.mm.sdk.platformtools.MTimerHandler: void handleMessage(android.os.Message)
com.tencent.mm.sdk.platformtools.MTimerHandler: void startTimer(long)
com.tencent.mm.sdk.platformtools.MTimerHandler: void stopTimer()
com.tencent.mm.sdk.platformtools.MTimerHandler: boolean stopped()
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack: boolean onTimerExpired()
com.tencent.mm.sdk.platformtools.NetStatusUtil
com.tencent.mm.sdk.platformtools.NetStatusUtil: int NON_NETWORK
com.tencent.mm.sdk.platformtools.NetStatusUtil: int WIFI
com.tencent.mm.sdk.platformtools.NetStatusUtil: int UNINET
com.tencent.mm.sdk.platformtools.NetStatusUtil: int UNIWAP
com.tencent.mm.sdk.platformtools.NetStatusUtil: int WAP_3G
com.tencent.mm.sdk.platformtools.NetStatusUtil: int NET_3G
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CMWAP
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CMNET
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CTWAP
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CTNET
com.tencent.mm.sdk.platformtools.NetStatusUtil: int MOBILE
com.tencent.mm.sdk.platformtools.NetStatusUtil: int LTE
com.tencent.mm.sdk.platformtools.NetStatusUtil: int POLICY_NONE
com.tencent.mm.sdk.platformtools.NetStatusUtil: int POLICY_REJECT_METERED_BACKGROUND
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_NOT_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_PROCESS_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_DATA_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_WIFI_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: NetStatusUtil()
com.tencent.mm.sdk.platformtools.NetStatusUtil: void dumpNetStatus(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isConnected(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: java.lang.String getNetTypeString(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: int getNetType(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is2G(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is4G(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWap(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWap(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is2G(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is4G(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is3G(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isMobile(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isMobile(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is3G(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWifi(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWifi(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: void startSettingItent(android.content.Context,int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: int getWifiSleeepPolicy(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isLimited(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: int getBackgroundLimitType(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isRestrictBacground(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isImmediatelyDestroyActivities(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean checkFromXml(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean runRootCommand()
com.tencent.mm.sdk.platformtools.PhoneUtil
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String CELL_GSM
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String CELL_CDMA
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String getMacXml(java.util.List)
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String getCellXml(java.util.List)
com.tencent.mm.sdk.platformtools.PhoneUtil: void getSignalStrength(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil: java.util.List getCellInfoList(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: int MAX_CID
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: int MAX_LAC
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String mcc
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String mnc
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String lac
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String cellid
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String type
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String stationId
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String networkId
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String systemId
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String dbm
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: PhoneUtil$CellInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo: java.lang.String mac
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo: java.lang.String dbm
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo: PhoneUtil$MacInfo(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.SensorController
com.tencent.mm.sdk.platformtools.SensorController: SensorController(android.content.Context)
com.tencent.mm.sdk.platformtools.SensorController: void setSensorCallBack(com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack)
com.tencent.mm.sdk.platformtools.SensorController: void removeSensorCallBack()
com.tencent.mm.sdk.platformtools.SensorController: void onAccuracyChanged(android.hardware.Sensor,int)
com.tencent.mm.sdk.platformtools.SensorController: boolean isSensorEnable()
com.tencent.mm.sdk.platformtools.SensorController: void onSensorChanged(android.hardware.SensorEvent)
com.tencent.mm.sdk.platformtools.SensorController: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack: void onSensorEvent(boolean)
com.tencent.mm.sdk.platformtools.SyncTask
com.tencent.mm.sdk.platformtools.SyncTask: SyncTask()
com.tencent.mm.sdk.platformtools.SyncTask: SyncTask(long,java.lang.Object)
com.tencent.mm.sdk.platformtools.SyncTask: void setResult(java.lang.Object)
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Object exec(android.os.Handler)
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Object run()
com.tencent.mm.sdk.platformtools.SystemProperty
com.tencent.mm.sdk.platformtools.SystemProperty: java.lang.String getProperty(java.lang.String)
com.tencent.mm.sdk.platformtools.SystemProperty: void setProperty(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger
com.tencent.mm.sdk.platformtools.TimeLogger: TimeLogger(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger: void reset(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger: void reset()
com.tencent.mm.sdk.platformtools.TimeLogger: void addSplit(java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger: void dumpToLog()
com.tencent.mm.sdk.platformtools.TrafficStats
com.tencent.mm.sdk.platformtools.TrafficStats: java.lang.String DEV_FILE
com.tencent.mm.sdk.platformtools.TrafficStats: java.lang.String GPRSLINE
com.tencent.mm.sdk.platformtools.TrafficStats: java.lang.String WIFILINE
com.tencent.mm.sdk.platformtools.TrafficStats: long getWifiTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long getWifiRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long getMobileTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long getMobileRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateWifiTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateWifiRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateMobileTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateMobileRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: void reset()
com.tencent.mm.sdk.platformtools.TrafficStats: void update()
com.tencent.mm.sdk.platformtools.Util
com.tencent.mm.sdk.platformtools.Util: int MAX_DECODE_PICTURE_SIZE
com.tencent.mm.sdk.platformtools.Util: java.lang.String PHOTO_DEFAULT_EXT
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_SECOND
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_MINUTE
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_HOUR
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_DAY
com.tencent.mm.sdk.platformtools.Util: long SECOND_OF_MINUTE
com.tencent.mm.sdk.platformtools.Util: long MINUTE_OF_HOUR
com.tencent.mm.sdk.platformtools.Util: long MAX_32BIT_VALUE
com.tencent.mm.sdk.platformtools.Util: int MIN_ACCOUNT_LENGTH
com.tencent.mm.sdk.platformtools.Util: int MAX_ACCOUNT_LENGTH
com.tencent.mm.sdk.platformtools.Util: int MIN_PASSWORD_LENGTH
com.tencent.mm.sdk.platformtools.Util: int MAX_PASSWORD_LENGTH
com.tencent.mm.sdk.platformtools.Util: int BIT_OF_KB
com.tencent.mm.sdk.platformtools.Util: int BIT_OF_MB
com.tencent.mm.sdk.platformtools.Util: int BYTE_OF_KB
com.tencent.mm.sdk.platformtools.Util: int BYTE_OF_MB
com.tencent.mm.sdk.platformtools.Util: int MASK_4BIT
com.tencent.mm.sdk.platformtools.Util: int MASK_8BIT
com.tencent.mm.sdk.platformtools.Util: int MASK_16BIT
com.tencent.mm.sdk.platformtools.Util: int MASK_32BIT
com.tencent.mm.sdk.platformtools.Util: int BEGIN_TIME
com.tencent.mm.sdk.platformtools.Util: int END_TIME
com.tencent.mm.sdk.platformtools.Util: int DAY
com.tencent.mm.sdk.platformtools.Util: java.lang.String TAIWAN
com.tencent.mm.sdk.platformtools.Util: java.lang.String HONGKONG
com.tencent.mm.sdk.platformtools.Util: java.lang.String CHINA
com.tencent.mm.sdk.platformtools.Util: java.lang.String ENGLISH
com.tencent.mm.sdk.platformtools.Util: java.lang.String LANGUAGE_DEFAULT
com.tencent.mm.sdk.platformtools.Util: java.lang.String escapeSqlValue(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String listToString(java.util.List,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.util.List stringsToList(java.lang.String[])
com.tencent.mm.sdk.platformtools.Util: int getIntRandom(int,int)
com.tencent.mm.sdk.platformtools.Util: boolean isDayTimeNow()
com.tencent.mm.sdk.platformtools.Util: boolean isNightTime(int,int,int)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTimeZoneOffset()
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTimeZone()
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTimeZoneDef()
com.tencent.mm.sdk.platformtools.Util: java.lang.String formatUnixTime(long)
com.tencent.mm.sdk.platformtools.Util: boolean isChinese(char)
com.tencent.mm.sdk.platformtools.Util: boolean isAlpha(char)
com.tencent.mm.sdk.platformtools.Util: boolean isNum(char)
com.tencent.mm.sdk.platformtools.Util: boolean isValidQQNum(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isValidEmail(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: byte[] bmpToByteArray(android.graphics.Bitmap,boolean)
com.tencent.mm.sdk.platformtools.Util: boolean isValidAccount(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isValidPassword(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: android.graphics.BitmapFactory$Options getImageOptions(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,java.lang.String,boolean)
com.tencent.mm.sdk.platformtools.Util: void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,boolean)
com.tencent.mm.sdk.platformtools.Util: android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,boolean,float)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getSizeKB(long)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getSizeMB(long)
com.tencent.mm.sdk.platformtools.Util: java.lang.String dumpArray(java.lang.Object[])
com.tencent.mm.sdk.platformtools.Util: java.lang.String dumpHex(byte[])
com.tencent.mm.sdk.platformtools.Util: android.content.Intent getInstallPackIntent(java.lang.String,android.content.Context)
com.tencent.mm.sdk.platformtools.Util: void installPack(java.lang.String,android.content.Context)
com.tencent.mm.sdk.platformtools.Util: void shake(android.content.Context,boolean)
com.tencent.mm.sdk.platformtools.Util: android.media.MediaPlayer playSound(android.content.Context,int,android.media.MediaPlayer$OnCompletionListener)
com.tencent.mm.sdk.platformtools.Util: void playSound(android.content.Context,int)
com.tencent.mm.sdk.platformtools.Util: long nowSecond()
com.tencent.mm.sdk.platformtools.Util: java.lang.String formatSecToMin(int)
com.tencent.mm.sdk.platformtools.Util: long nowMilliSecond()
com.tencent.mm.sdk.platformtools.Util: long secondsToNow(long)
com.tencent.mm.sdk.platformtools.Util: long milliSecondsToNow(long)
com.tencent.mm.sdk.platformtools.Util: long ticksToNow(long)
com.tencent.mm.sdk.platformtools.Util: long currentTicks()
com.tencent.mm.sdk.platformtools.Util: long currentDayInMills()
com.tencent.mm.sdk.platformtools.Util: long currentWeekInMills()
com.tencent.mm.sdk.platformtools.Util: long currentMonthInMills()
com.tencent.mm.sdk.platformtools.Util: long currentYearInMills()
com.tencent.mm.sdk.platformtools.Util: int getSystemVersion(android.content.Context,int)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getDeviceId(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getLine1Number(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isLockScreen(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isTopActivity(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isServiceRunning(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isProcessRunning(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTopActivityName(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isTopApplication(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isIntentAvailable(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.platformtools.Util: void freeBitmapMap(java.util.Map)
com.tencent.mm.sdk.platformtools.Util: void selectPicture(android.content.Context,int)
com.tencent.mm.sdk.platformtools.Util: int nullAsNil(java.lang.Integer)
com.tencent.mm.sdk.platformtools.Util: long nullAsNil(java.lang.Long)
com.tencent.mm.sdk.platformtools.Util: java.lang.String nullAsNil(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean nullAsTrue(java.lang.Boolean)
com.tencent.mm.sdk.platformtools.Util: boolean nullAsFalse(java.lang.Boolean)
com.tencent.mm.sdk.platformtools.Util: int nullAs(java.lang.Integer,int)
com.tencent.mm.sdk.platformtools.Util: long nullAs(java.lang.Long,long)
com.tencent.mm.sdk.platformtools.Util: boolean nullAs(java.lang.Boolean,boolean)
com.tencent.mm.sdk.platformtools.Util: java.lang.String nullAs(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int nullAsInt(java.lang.Object,int)
com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(byte[])
com.tencent.mm.sdk.platformtools.Util: int getInt(java.lang.String,int)
com.tencent.mm.sdk.platformtools.Util: long getLong(java.lang.String,long)
com.tencent.mm.sdk.platformtools.Util: int getHex(java.lang.String,int)
com.tencent.mm.sdk.platformtools.Util: java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: void transClickToSelect(android.view.View,android.view.View)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getCutPasswordMD5(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getFullPasswordMD5(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: org.w3c.dom.Element getRootElementFromXML(byte[])
com.tencent.mm.sdk.platformtools.Util: java.lang.String convertStreamToString(java.io.InputStream)
com.tencent.mm.sdk.platformtools.Util: java.lang.String encodeHexString(byte[])
com.tencent.mm.sdk.platformtools.Util: byte[] decodeHexString(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int guessHttpSendLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessHttpRecvLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessHttpContinueRecvLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessTcpConnectLength()
com.tencent.mm.sdk.platformtools.Util: int guessTcpDisconnectLength()
com.tencent.mm.sdk.platformtools.Util: int guessTcpSendLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessTcpRecvLength(int)
com.tencent.mm.sdk.platformtools.Util: int[] splitToIntArray(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int UnZipFolder(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getStack()
com.tencent.mm.sdk.platformtools.Util: boolean checkSDCardFull()
com.tencent.mm.sdk.platformtools.Util: java.lang.String GetHostIp()
com.tencent.mm.sdk.platformtools.Util: boolean checkPermission(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean jump(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String escapeStringForXml(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String processXml(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String expandEntities(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isImgFile(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String mapToXml(java.lang.String,java.util.LinkedHashMap)
com.tencent.mm.sdk.platformtools.Util: java.util.Map parseIni(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI
com.tencent.mm.sdk.plugin.IMMPluginAPI: java.lang.String getPluginKey(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean isPluginInstalled(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean installPlugin(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createQRCodeController(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToSettingView(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createMsgController(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToChattingUI(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToBindQQ(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToBindMobile(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToBindEmail(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void release()
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean registerAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean unregisterAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean appendNetStat(int,int,int)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: MMPluginAPIImpl(android.content.Context)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void release()
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean registerAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean unregisterAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: java.lang.String getPluginKey(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean isPluginInstalled(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean installPlugin(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createQRCodeController(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToSettingView(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToChattingUI(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToBindQQ(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToBindMobile(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToBindEmail(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createMsgController(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean appendNetStat(int,int,int)
com.tencent.mm.sdk.plugin.MMPluginMsg
com.tencent.mm.sdk.plugin.MMPluginMsg: long msgClientId
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String content
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String ACTION_AUTO_MSG
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String RECV_PKG
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String RECV_MSG
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String RECV_THUMB
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String SEND_ID
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String SEND_ERR_TYPE
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String SEND_ERR_CODE
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String TYPE
com.tencent.mm.sdk.plugin.MMPluginMsg: int TYPE_SEND_RET
com.tencent.mm.sdk.plugin.MMPluginMsg: int TYPE_RECV_MSG
com.tencent.mm.sdk.plugin.MMPluginMsg: MMPluginMsg()
com.tencent.mm.sdk.plugin.MMPluginMsg: com.tencent.mm.sdk.openapi.WXAppExtendObject pluginMsgToWXAppExtendObject(com.tencent.mm.sdk.plugin.MMPluginMsg)
com.tencent.mm.sdk.plugin.MMPluginMsg: com.tencent.mm.sdk.plugin.MMPluginMsg WXAppExtentObjectToPluginMsg(com.tencent.mm.sdk.openapi.WXAppExtendObject)
com.tencent.mm.sdk.plugin.MMPluginMsg: long sendMessage(android.content.Context,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: MMPluginMsg$ReceiverHelper(android.content.Intent)
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: boolean isSendRet()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: boolean isRecvNew()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.String getMsgContent()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.Integer getSendErrCode()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.Integer getSendErrType()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.Long getSendMsgId()
com.tencent.mm.sdk.plugin.MMPluginOAuth
com.tencent.mm.sdk.plugin.MMPluginOAuth: MMPluginOAuth(android.content.Context,com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult)
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String getAccessToken()
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String getRequestToken()
com.tencent.mm.sdk.plugin.MMPluginOAuth: void start()
com.tencent.mm.sdk.plugin.MMPluginOAuth: boolean start(android.os.Handler)
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult: void onResult(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult: void onSessionTimeOut()
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: MMPluginOAuth$Receiver()
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: MMPluginOAuth$Receiver(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void register(java.lang.String,com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void unregister(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: java.lang.String AUTHORITY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_UNKNOWN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_INT
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_LONG
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_STRING
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_BOOLEAN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_FLOAT
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_DOUBLE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: java.lang.String PLUGIN_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: MMPluginProviderConstants()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String API_KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String ACCESS_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String SECRET
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String ACTION_REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: java.lang.String KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: java.lang.String TYPE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: java.lang.String VALUE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String AUTH_KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String NAME
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String PACKAGE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACCESS_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String PERMISSIONS
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACTION_REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACTION_RESPONSE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACTION_QRCODE_SCANNED
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String PLUGIN_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String APP_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: MMPluginProviderConstants$PluginIntent()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: int getType(java.lang.Object)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: boolean unresolveObj(android.content.ContentValues,java.lang.Object)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: java.lang.Object resolveObj(int,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: java.lang.String KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: java.lang.String TYPE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: java.lang.String VALUE
com.tencent.mm.sdk.plugin.MMPluginUtil
com.tencent.mm.sdk.plugin.MMPluginUtil: MMPluginUtil()
com.tencent.mm.sdk.plugin.MMPluginUtil: com.tencent.mm.sdk.plugin.IMMPluginAPI queryPluginMgr(android.content.Context)
com.tencent.mm.sdk.plugin.Profile
com.tencent.mm.sdk.plugin.Profile: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.Profile: java.lang.String[] columns
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_username
com.tencent.mm.sdk.plugin.Profile: long field_bindqq
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_bindmobile
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_bindemail
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_alias
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_nickname
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_signature
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_province
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_city
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_weibo
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_avatar
com.tencent.mm.sdk.plugin.Profile: Profile()
com.tencent.mm.sdk.plugin.Profile: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.storage.ContentProviderDB
com.tencent.mm.sdk.storage.ContentProviderDB: ContentProviderDB(android.content.Context)
com.tencent.mm.sdk.storage.ContentProviderDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.storage.ContentProviderDB: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ContentProviderDB: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ContentProviderDB: boolean execSQL(java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ContentProviderDB: long insert(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ContentProviderDB: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ContentProviderDB: long replace(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ContentProviderDB: int delete(java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ISQLiteDatabase
com.tencent.mm.sdk.storage.ISQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ISQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ISQLiteDatabase: boolean execSQL(java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ISQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ISQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ISQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ISQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoDBItem
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.String SYSTEM_ROWID_FIELD
com.tencent.mm.sdk.storage.MAutoDBItem: long systemRowid
com.tencent.mm.sdk.storage.MAutoDBItem: MAutoDBItem()
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.reflect.Field[] getValidFields(java.lang.Class)
com.tencent.mm.sdk.storage.MAutoDBItem: void convertFrom(android.database.Cursor)
com.tencent.mm.sdk.storage.MAutoDBItem: android.content.ContentValues convertTo()
com.tencent.mm.sdk.storage.MAutoDBItem: android.database.Cursor getCursorForProjection(android.content.ContentValues,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoDBItem: java.util.Map identify(java.lang.reflect.Field[],java.lang.StringBuilder,java.lang.String)
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.String[] getFullColumns(java.lang.reflect.Field[])
com.tencent.mm.sdk.storage.MAutoDBItem: boolean checkIOEqual(android.content.ContentValues,android.database.Cursor)
com.tencent.mm.sdk.storage.MAutoStorage
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String getTableName()
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String getPrimaryKey()
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String[] getColumns()
com.tencent.mm.sdk.storage.MAutoStorage: MAutoStorage(com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.storage.MAutoStorage: java.util.List getCreateSQLs(java.lang.reflect.Field[],java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: java.util.List getUpdateSQLs(java.lang.reflect.Field[],java.lang.String,com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.storage.MAutoStorage: boolean insert(com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean delete(com.tencent.mm.sdk.storage.MAutoDBItem,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: boolean delete(long)
com.tencent.mm.sdk.storage.MAutoStorage: boolean get(long,com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean get(com.tencent.mm.sdk.storage.MAutoDBItem,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: boolean update(long,com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean update(com.tencent.mm.sdk.storage.MAutoDBItem,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: boolean replace(com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: android.database.Cursor getAll()
com.tencent.mm.sdk.storage.MAutoStorage: int getCount()
com.tencent.mm.sdk.storage.MAutoStorage: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.MDBItem
com.tencent.mm.sdk.storage.MDBItem: void convertFrom(android.database.Cursor)
com.tencent.mm.sdk.storage.MDBItem: android.content.ContentValues convertTo()
com.tencent.mm.sdk.storage.MStorage
com.tencent.mm.sdk.storage.MStorage: MStorage()
com.tencent.mm.sdk.storage.MStorage: void lock()
com.tencent.mm.sdk.storage.MStorage: void unlock()
com.tencent.mm.sdk.storage.MStorage: void add(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange)
com.tencent.mm.sdk.storage.MStorage: void addLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded)
com.tencent.mm.sdk.storage.MStorage: void remove(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange)
com.tencent.mm.sdk.storage.MStorage: void removeLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded)
com.tencent.mm.sdk.storage.MStorage: void doNotify()
com.tencent.mm.sdk.storage.MStorage: void doNotify(java.lang.String)
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange: void onNotifyChange(java.lang.String)
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded: void onNotifyLoaded()
com.tencent.mm.sdk.storage.MStorageEvent
com.tencent.mm.sdk.storage.MStorageEvent: MStorageEvent()
com.tencent.mm.sdk.storage.MStorageEvent: void lock()
com.tencent.mm.sdk.storage.MStorageEvent: void unlock()
com.tencent.mm.sdk.storage.MStorageEvent: boolean isLocked()
com.tencent.mm.sdk.storage.MStorageEvent: void add(java.lang.Object,android.os.Looper)
com.tencent.mm.sdk.storage.MStorageEvent: boolean event(java.lang.Object)
com.tencent.mm.sdk.storage.MStorageEvent: void remove(java.lang.Object)
com.tencent.mm.sdk.storage.MStorageEvent: void removeAll()
com.tencent.mm.sdk.storage.MStorageEvent: void doNotify()
com.tencent.mm.sdk.storage.MStorageEvent: void processEvent(java.lang.Object,java.lang.Object)
com.tencent.weibo.api.BasicAPI
com.tencent.weibo.api.BasicAPI: com.tencent.weibo.api.RequestAPI requestAPI
com.tencent.weibo.api.BasicAPI: java.lang.String apiBaseUrl
com.tencent.weibo.api.BasicAPI: BasicAPI(java.lang.String)
com.tencent.weibo.api.BasicAPI: BasicAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.BasicAPI: void shutdownConnection()
com.tencent.weibo.api.BasicAPI: java.lang.String getAPIBaseUrl()
com.tencent.weibo.api.BasicAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.FriendsAPI
com.tencent.weibo.api.FriendsAPI: FriendsAPI(java.lang.String)
com.tencent.weibo.api.FriendsAPI: FriendsAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.FriendsAPI: java.lang.String fanslist(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String idollist(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String add(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String del(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String check(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String userFanslist(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String userIdollist(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String userSpeciallist(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: java.lang.String fanslistS(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.FriendsAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.InfoAPI
com.tencent.weibo.api.InfoAPI: InfoAPI(java.lang.String)
com.tencent.weibo.api.InfoAPI: InfoAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.InfoAPI: java.lang.String update(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.InfoAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.PrivateAPI
com.tencent.weibo.api.PrivateAPI: PrivateAPI(java.lang.String)
com.tencent.weibo.api.PrivateAPI: PrivateAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.PrivateAPI: java.lang.String recv(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.PrivateAPI: java.lang.String send(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.PrivateAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.RequestAPI
com.tencent.weibo.api.RequestAPI: java.lang.String getResource(java.lang.String,java.util.List,com.tencent.weibo.beans.OAuth)
com.tencent.weibo.api.RequestAPI: java.lang.String postContent(java.lang.String,java.util.List,com.tencent.weibo.beans.OAuth)
com.tencent.weibo.api.RequestAPI: java.lang.String postFile(java.lang.String,java.util.List,java.util.List,com.tencent.weibo.beans.OAuth)
com.tencent.weibo.api.RequestAPI: void shutdownConnection()
com.tencent.weibo.api.SearchAPI
com.tencent.weibo.api.SearchAPI: SearchAPI(java.lang.String)
com.tencent.weibo.api.SearchAPI: SearchAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.SearchAPI: java.lang.String t(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.SearchAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.StatusesAPI
com.tencent.weibo.api.StatusesAPI: StatusesAPI(java.lang.String)
com.tencent.weibo.api.StatusesAPI: StatusesAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.StatusesAPI: java.lang.String homeTimeline(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.StatusesAPI: java.lang.String userTimeline(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.StatusesAPI: java.lang.String mentionsTimeline(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.StatusesAPI: java.lang.String broadcastTimeline(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.StatusesAPI: java.lang.String userTimelineIds(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.StatusesAPI: java.lang.String usersTimeline(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.StatusesAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.TAPI
com.tencent.weibo.api.TAPI: TAPI(java.lang.String)
com.tencent.weibo.api.TAPI: TAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.TAPI: java.lang.String show(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String add(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String add(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String del(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String reAdd(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String reAdd(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String comment(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String comment(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String reply(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String reply(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String addPic(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String addPic(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String reCount(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String reList(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: java.lang.String addVideo(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.TAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.api.UserAPI
com.tencent.weibo.api.UserAPI: UserAPI(java.lang.String)
com.tencent.weibo.api.UserAPI: UserAPI(java.lang.String,com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.api.UserAPI: java.lang.String info(com.tencent.weibo.beans.OAuth,java.lang.String)
com.tencent.weibo.api.UserAPI: java.lang.String otherInfo(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.UserAPI: java.lang.String infos(com.tencent.weibo.beans.OAuth,java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.api.UserAPI: void setAPIBaseUrl(java.lang.String)
com.tencent.weibo.beans.OAuth
com.tencent.weibo.beans.OAuth: long serialVersionUID
com.tencent.weibo.beans.OAuth: java.lang.String seqid
com.tencent.weibo.beans.OAuth: java.lang.String clientIP
com.tencent.weibo.beans.OAuth: java.lang.String appFrom
com.tencent.weibo.beans.OAuth: java.lang.String openid
com.tencent.weibo.beans.OAuth: java.lang.String openkey
com.tencent.weibo.beans.OAuth: java.lang.String oauthVersion
com.tencent.weibo.beans.OAuth: java.lang.String scope
com.tencent.weibo.beans.OAuth: int status
com.tencent.weibo.beans.OAuth: java.lang.String msg
com.tencent.weibo.beans.OAuth: java.util.Random random
com.tencent.weibo.beans.OAuth: OAuth()
com.tencent.weibo.beans.OAuth: java.util.List getCommonParamsList()
com.tencent.weibo.beans.OAuth: java.lang.String generateSeqId()
com.tencent.weibo.beans.OAuth: java.lang.String getSeqId()
com.tencent.weibo.beans.OAuth: void setSeqId(java.lang.String)
com.tencent.weibo.beans.OAuth: java.lang.String getClientIP()
com.tencent.weibo.beans.OAuth: void setClientIP(java.lang.String)
com.tencent.weibo.beans.OAuth: java.lang.String getAppFrom()
com.tencent.weibo.beans.OAuth: void setAppFrom(java.lang.String)
com.tencent.weibo.beans.OAuth: java.lang.String getOpenid()
com.tencent.weibo.beans.OAuth: void setOpenid(java.lang.String)
com.tencent.weibo.beans.OAuth: java.lang.String getOpenkey()
com.tencent.weibo.beans.OAuth: void setOpenkey(java.lang.String)
com.tencent.weibo.beans.OAuth: java.lang.String getOauthVersion()
com.tencent.weibo.beans.OAuth: void setOauthVersion(java.lang.String)
com.tencent.weibo.beans.OAuth: java.lang.String getScope()
com.tencent.weibo.beans.OAuth: void setScope(java.lang.String)
com.tencent.weibo.beans.OAuth: int getStatus()
com.tencent.weibo.beans.OAuth: void setStatus(int)
com.tencent.weibo.beans.OAuth: java.lang.String getMsg()
com.tencent.weibo.beans.OAuth: void setMsg(java.lang.String)
com.tencent.weibo.beans.RouteCfg
com.tencent.weibo.beans.RouteCfg: RouteCfg()
com.tencent.weibo.beans.RouteCfg: java.lang.String getHost()
com.tencent.weibo.beans.RouteCfg: void setHost(java.lang.String)
com.tencent.weibo.beans.RouteCfg: int getPort()
com.tencent.weibo.beans.RouteCfg: void setPort(int)
com.tencent.weibo.beans.RouteCfg: int getMaxConnetions()
com.tencent.weibo.beans.RouteCfg: void setMaxConnetions(int)
com.tencent.weibo.constants.APIConstants
com.tencent.weibo.constants.APIConstants: java.lang.String API_V1_BASE_URL
com.tencent.weibo.constants.ErrorCodeConstants
com.tencent.weibo.constants.ErrorCodeConstants: ErrorCodeConstants()
com.tencent.weibo.constants.ErrorCodeConstants: java.lang.String getErrmsg(java.lang.String)
com.tencent.weibo.constants.MyErrorCodeHashMap: long serialVersionUID
com.tencent.weibo.constants.OAuthConstants
com.tencent.weibo.constants.OAuthConstants: java.lang.String OAUTH_VERSION_1
com.tencent.weibo.constants.OAuthConstants: java.lang.String APP_FROM_ANDROID_SDK_1
com.tencent.weibo.constants.OAuthConstants: java.lang.String OAUTH_V1_GET_REQUEST_TOKEN_URL
com.tencent.weibo.constants.OAuthConstants: java.lang.String OAUTH_V1_AUTHORIZE_URL
com.tencent.weibo.constants.OAuthConstants: java.lang.String OAUTH_V1_GET_ACCESS_TOKEN_URL
com.tencent.weibo.exceptions.OAuthClientException
com.tencent.weibo.exceptions.OAuthClientException: long serialVersionUID
com.tencent.weibo.exceptions.OAuthClientException: OAuthClientException(java.lang.String)
com.tencent.weibo.exceptions.OAuthClientException: OAuthClientException(java.lang.String,java.lang.String)
com.tencent.weibo.exceptions.OAuthClientException: java.lang.String getErrcode()
com.tencent.weibo.exceptions.OAuthClientException: void setErrcode(java.lang.String)
com.tencent.weibo.exceptions.OAuthClientException: java.lang.String getErrmsg()
com.tencent.weibo.exceptions.OAuthClientException: void setErrmsg(java.lang.String)
com.tencent.weibo.exceptions.QweibosdkException
com.tencent.weibo.exceptions.QweibosdkException: long serialVersionUID
com.tencent.weibo.exceptions.QweibosdkException: QweibosdkException(java.lang.String,java.lang.String)
com.tencent.weibo.exceptions.QweibosdkException: java.lang.String getErrcode()
com.tencent.weibo.exceptions.QweibosdkException: void setErrcode(java.lang.String)
com.tencent.weibo.exceptions.QweibosdkException: java.lang.String getErrmsg()
com.tencent.weibo.exceptions.QweibosdkException: void setErrmsg(java.lang.String)
com.tencent.weibo.oauthv1.Base64Encoder
com.tencent.weibo.oauthv1.Base64Encoder: Base64Encoder()
com.tencent.weibo.oauthv1.Base64Encoder: java.lang.String encode(byte[])
com.tencent.weibo.oauthv1.OAuthV1
com.tencent.weibo.oauthv1.OAuthV1: long serialVersionUID
com.tencent.weibo.oauthv1.OAuthV1: OAuthV1()
com.tencent.weibo.oauthv1.OAuthV1: OAuthV1(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: OAuthV1(java.lang.String,java.lang.String,java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.util.List getParamsList()
com.tencent.weibo.oauthv1.OAuthV1: java.util.List getAccessParams()
com.tencent.weibo.oauthv1.OAuthV1: java.util.List getTokenParamsList()
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthConsumerKey()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthConsumerKey(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthSignatureMethod()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthSignatureMethod(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthConsumerSecret()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthConsumerSecret(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthToken()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthToken(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthTimestamp()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthTimestamp(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthNonce()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthNonce(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthCallback()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthCallback(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthTokenSecret()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthTokenSecret(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1: java.lang.String getOauthVerifier()
com.tencent.weibo.oauthv1.OAuthV1: void setOauthVerifier(java.lang.String)
com.tencent.weibo.oauthv1.OAuthV1Client
com.tencent.weibo.oauthv1.OAuthV1Client: com.tencent.weibo.oauthv1.OAuthV1 requestToken(com.tencent.weibo.oauthv1.OAuthV1)
com.tencent.weibo.oauthv1.OAuthV1Client: java.lang.String generateAuthorizationURL(com.tencent.weibo.oauthv1.OAuthV1)
com.tencent.weibo.oauthv1.OAuthV1Client: boolean parseAuthorization(java.lang.String,com.tencent.weibo.oauthv1.OAuthV1)
com.tencent.weibo.oauthv1.OAuthV1Client: com.tencent.weibo.oauthv1.OAuthV1 accessToken(com.tencent.weibo.oauthv1.OAuthV1)
com.tencent.weibo.oauthv1.OAuthV1Client: java.lang.String getOauthParams(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.tencent.weibo.oauthv1.OAuthV1Client: boolean parseToken(java.lang.String,com.tencent.weibo.oauthv1.OAuthV1)
com.tencent.weibo.oauthv1.OAuthV1Client: com.tencent.weibo.utils.QHttpClient getQHttpClient()
com.tencent.weibo.oauthv1.OAuthV1Client: void setQHttpClient(com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.oauthv1.OAuthV1Request
com.tencent.weibo.oauthv1.OAuthV1Request: OAuthV1Request()
com.tencent.weibo.oauthv1.OAuthV1Request: OAuthV1Request(com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.oauthv1.OAuthV1Request: java.lang.String getResource(java.lang.String,java.util.List,com.tencent.weibo.beans.OAuth)
com.tencent.weibo.oauthv1.OAuthV1Request: java.lang.String postContent(java.lang.String,java.util.List,com.tencent.weibo.beans.OAuth)
com.tencent.weibo.oauthv1.OAuthV1Request: java.lang.String postFile(java.lang.String,java.util.List,java.util.List,com.tencent.weibo.beans.OAuth)
com.tencent.weibo.oauthv1.OAuthV1Request: void shutdownConnection()
com.tencent.weibo.oauthv1.OAuthV1Request: com.tencent.weibo.utils.QHttpClient getqHttpClient()
com.tencent.weibo.oauthv1.OAuthV1Request: void setqHttpClient(com.tencent.weibo.utils.QHttpClient)
com.tencent.weibo.utils.QArrayList
com.tencent.weibo.utils.QArrayList: long serialVersionUID
com.tencent.weibo.utils.QArrayList: QArrayList()
com.tencent.weibo.utils.QArrayList: boolean add(org.apache.http.NameValuePair)
com.tencent.weibo.utils.QArrayList: boolean add(java.lang.Object)
com.tencent.weibo.utils.QHttpClient
com.tencent.weibo.utils.QHttpClient: int CONNECTION_TIMEOUT
com.tencent.weibo.utils.QHttpClient: int CON_TIME_OUT_MS
com.tencent.weibo.utils.QHttpClient: int SO_TIME_OUT_MS
com.tencent.weibo.utils.QHttpClient: int MAX_CONNECTIONS_PER_HOST
com.tencent.weibo.utils.QHttpClient: int MAX_TOTAL_CONNECTIONS
com.tencent.weibo.utils.QHttpClient: QHttpClient()
com.tencent.weibo.utils.QHttpClient: QHttpClient(int,int,int,int)
com.tencent.weibo.utils.QHttpClient: java.lang.String httpGet(java.lang.String,java.lang.String)
com.tencent.weibo.utils.QHttpClient: java.lang.String httpPost(java.lang.String,java.lang.String)
com.tencent.weibo.utils.QHttpClient: java.lang.String httpPostWithFile(java.lang.String,java.lang.String,java.util.List)
com.tencent.weibo.utils.QHttpClient: void shutdownConnection()
com.tencent.weibo.utils.QSSLSocketFactory
com.tencent.weibo.utils.QSSLSocketFactory: QSSLSocketFactory()
com.tencent.weibo.utils.QSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)
com.tencent.weibo.utils.QSSLSocketFactory: java.net.Socket createSocket()
com.tencent.weibo.utils.QSSLSocketFactory: boolean isSecure(java.net.Socket)
com.tencent.weibo.utils.QSSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)
com.tencent.weibo.utils.QSSLSocketFactory: boolean equals(java.lang.Object)
com.tencent.weibo.utils.QSSLSocketFactory: int hashCode()
com.tencent.weibo.utils.QStrOperate
com.tencent.weibo.utils.QStrOperate: boolean hasValue(java.lang.String)
com.tencent.weibo.utils.QStrOperate: java.lang.String paramEncode(java.lang.String)
com.tencent.weibo.utils.QStrOperate: java.lang.String ParamDecode(java.lang.String)
com.tencent.weibo.utils.QStrOperate: java.util.List getQueryParamsList(java.lang.String)
com.tencent.weibo.utils.QStrOperate: java.lang.String getQueryString(java.util.List)
com.tencent.weibo.utils.QStrOperate: java.lang.String getTimeState(java.lang.String)
com.tencent.weibo.webview.OAuthV1AuthorizeWebView
com.tencent.weibo.webview.OAuthV1AuthorizeWebView: int RESULT_CODE
com.tencent.weibo.webview.OAuthV1AuthorizeWebView: OAuthV1AuthorizeWebView()
com.tencent.weibo.webview.OAuthV1AuthorizeWebView: void onCreate(android.os.Bundle)
com.ztspeech.engine.Codecs2
com.ztspeech.engine.Codecs2: Codecs2()
com.ztspeech.engine.Codecs2: int open(int)
com.ztspeech.engine.Codecs2: int encode(int,short[],int,byte[],int)
com.ztspeech.engine.Codecs2: void close(int)
com.ztspeech.engine.Codecs2: com.ztspeech.engine.Codecs2 a()
com.ztspeech.engine.a
com.ztspeech.engine.a: a()
com.ztspeech.engine.a: int a(short[],byte[])
com.ztspeech.engine.a: void a()
com.ztspeech.engine.a: boolean b()
com.ztspeech.recognizer.Codecs
com.ztspeech.recognizer.Codecs: com.ztspeech.recognizer.Codecs instanse
com.ztspeech.recognizer.Codecs: void <clinit>()
com.ztspeech.recognizer.Codecs: Codecs()
com.ztspeech.recognizer.Codecs: java.lang.String set()
com.ztspeech.recognizer.Codecs: java.lang.String set(java.lang.Object)
com.ztspeech.recognizer.Codecs: java.io.InputStream toWave(java.io.InputStream)
com.ztspeech.recognizer.Codecs: byte[] WaveToSpx(byte[])
com.ztspeech.recognizer.Codecs: java.io.OutputStream spxToWave(java.io.InputStream)
com.ztspeech.recognizer.Codecs: int open(int)
com.ztspeech.recognizer.Codecs: int encode(short[],int,byte[],int)
com.ztspeech.recognizer.Codecs: int decode(byte[],short[],int)
com.ztspeech.recognizer.Codecs: void close()
com.ztspeech.recognizer.Codecs: com.ztspeech.recognizer.Codecs getInstanse()
com.ztspeech.recognizer.Codecs: int decode(byte[],short[])
com.ztspeech.recognizer.Codecs: boolean open()
com.ztspeech.recognizer.EngineResultFlag
com.ztspeech.recognizer.EngineResultFlag: int OVER
com.ztspeech.recognizer.EngineResultFlag: int WORKING
com.ztspeech.recognizer.EngineResultFlag: int NOTHING
com.ztspeech.recognizer.EngineResultFlag: int CANCEL
com.ztspeech.recognizer.EngineResultFlag: int CONNECT_ERROR
com.ztspeech.recognizer.EngineResultFlag: EngineResultFlag()
com.ztspeech.recognizer.OnEngineListener
com.ztspeech.recognizer.OnEngineListener: void onEngineResult(java.util.List,int,java.lang.String)
com.ztspeech.recognizer.OnEngineListener: void onEngineStart()
com.ztspeech.recognizer.OnEngineListener: void onEngineEnd()
com.ztspeech.recognizer.OnEngineListenerPlus
com.ztspeech.recognizer.OnEngineListenerPlus: void onRecordData(short[],int)
com.ztspeech.recognizer.PhoneInfo
com.ztspeech.recognizer.PhoneInfo: java.lang.String g
com.ztspeech.recognizer.PhoneInfo: java.lang.String a
com.ztspeech.recognizer.PhoneInfo: java.lang.String b
com.ztspeech.recognizer.PhoneInfo: java.lang.String c
com.ztspeech.recognizer.PhoneInfo: java.lang.String d
com.ztspeech.recognizer.PhoneInfo: java.lang.String e
com.ztspeech.recognizer.PhoneInfo: java.lang.String f
com.ztspeech.recognizer.PhoneInfo: java.lang.String simOperatorName
com.ztspeech.recognizer.PhoneInfo: java.lang.String h
com.ztspeech.recognizer.PhoneInfo: android.content.Context i
com.ztspeech.recognizer.PhoneInfo: com.ztspeech.recognizer.PhoneInfo mInstance
com.ztspeech.recognizer.PhoneInfo: boolean j
com.ztspeech.recognizer.PhoneInfo: void <clinit>()
com.ztspeech.recognizer.PhoneInfo: PhoneInfo()
com.ztspeech.recognizer.PhoneInfo: com.ztspeech.recognizer.PhoneInfo getInstance()
com.ztspeech.recognizer.PhoneInfo: java.lang.String getIMEI()
com.ztspeech.recognizer.PhoneInfo: java.lang.String getUTF8(java.lang.String)
com.ztspeech.recognizer.PhoneInfo: void setUserInfo(java.lang.String)
com.ztspeech.recognizer.PhoneInfo: java.lang.String getUserInfo()
com.ztspeech.recognizer.PhoneInfo: java.lang.String getVersionName(android.content.Context)
com.ztspeech.recognizer.PhoneInfo: java.lang.String getLocalMacAddress()
com.ztspeech.recognizer.PhoneInfo: void initData(android.content.Context)
com.ztspeech.recognizer.Recognizer
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.OnEngineListener a
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.Codecs b
com.ztspeech.recognizer.Recognizer: com.ztspeech.engine.Codecs2 c
com.ztspeech.recognizer.Recognizer: com.ztspeech.engine.a d
com.ztspeech.recognizer.Recognizer: byte[] e
com.ztspeech.recognizer.Recognizer: boolean f
com.ztspeech.recognizer.Recognizer: boolean g
com.ztspeech.recognizer.Recognizer: boolean h
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.PhoneInfo i
com.ztspeech.recognizer.Recognizer: android.content.Context j
com.ztspeech.recognizer.Recognizer: java.io.ByteArrayOutputStream k
com.ztspeech.recognizer.Recognizer: java.io.ByteArrayOutputStream l
com.ztspeech.recognizer.Recognizer: int m
com.ztspeech.recognizer.Recognizer: java.lang.String n
com.ztspeech.recognizer.Recognizer: java.lang.String o
com.ztspeech.recognizer.Recognizer: java.lang.String p
com.ztspeech.recognizer.Recognizer: java.lang.String q
com.ztspeech.recognizer.Recognizer: java.lang.String r
com.ztspeech.recognizer.Recognizer: java.lang.Integer s
com.ztspeech.recognizer.Recognizer: java.lang.String t
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.net.a u
com.ztspeech.recognizer.Recognizer: int v
com.ztspeech.recognizer.Recognizer: java.lang.String w
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.a.a x
com.ztspeech.recognizer.Recognizer: java.util.List y
com.ztspeech.recognizer.Recognizer: int z
com.ztspeech.recognizer.Recognizer: boolean A
com.ztspeech.recognizer.Recognizer: boolean B
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.net.a C
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.OnEngineListener D
com.ztspeech.recognizer.Recognizer: boolean open()
com.ztspeech.recognizer.Recognizer: void close()
com.ztspeech.recognizer.Recognizer: void a(boolean)
com.ztspeech.recognizer.Recognizer: boolean a(short[])
com.ztspeech.recognizer.Recognizer: boolean write(short[])
com.ztspeech.recognizer.Recognizer: java.lang.Object a()
com.ztspeech.recognizer.Recognizer: void a(java.lang.Object)
com.ztspeech.recognizer.Recognizer: void a(java.lang.Integer)
com.ztspeech.recognizer.Recognizer: void setUserInfo(java.lang.String)
com.ztspeech.recognizer.Recognizer: Recognizer(android.content.Context,com.ztspeech.recognizer.OnEngineListener)
com.ztspeech.recognizer.Recognizer: void a(java.lang.String)
com.ztspeech.recognizer.Recognizer: void a(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.recognizer.Recognizer: void b(java.lang.Integer)
com.ztspeech.recognizer.Recognizer: void c(java.lang.Integer)
com.ztspeech.recognizer.Recognizer: void b(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.recognizer.Recognizer: void cancel()
com.ztspeech.recognizer.Recognizer: boolean isProcessing()
com.ztspeech.recognizer.Recognizer: void setToContinuous(int)
com.ztspeech.recognizer.Recognizer: void setToChineseEngine()
com.ztspeech.recognizer.Recognizer: void setToEnglishEngine()
com.ztspeech.recognizer.Recognizer: void setToCH2ENEngine()
com.ztspeech.recognizer.Recognizer: void setToEN2CHEngine()
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.net.a a(com.ztspeech.recognizer.Recognizer)
com.ztspeech.recognizer.Recognizer: void a(com.ztspeech.recognizer.Recognizer,com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.Recognizer: int b(com.ztspeech.recognizer.Recognizer)
com.ztspeech.recognizer.Recognizer: void a(com.ztspeech.recognizer.Recognizer,int)
com.ztspeech.recognizer.Recognizer: boolean a(com.ztspeech.recognizer.Recognizer,java.lang.String)
com.ztspeech.recognizer.Recognizer: com.ztspeech.recognizer.OnEngineListener c(com.ztspeech.recognizer.Recognizer)
com.ztspeech.recognizer.Recognizer: void a(com.ztspeech.recognizer.Recognizer,boolean)
com.ztspeech.recognizer.VADParam
com.ztspeech.recognizer.VADParam: int MAX_MUTE_VALUE
com.ztspeech.recognizer.VADParam: int MIN_MUTE_VALUE
com.ztspeech.recognizer.VADParam: int MAX_MUTE_COUNT
com.ztspeech.recognizer.VADParam: int MIN_RECORD_TIME
com.ztspeech.recognizer.VADParam: int MIN_VOICE_COUNT
com.ztspeech.recognizer.VADParam: VADParam()
com.ztspeech.recognizer.a.a
com.ztspeech.recognizer.a.a: int h
com.ztspeech.recognizer.a.a: int i
com.ztspeech.recognizer.a.a: int j
com.ztspeech.recognizer.a.a: int a
com.ztspeech.recognizer.a.a: int k
com.ztspeech.recognizer.a.a: int b
com.ztspeech.recognizer.a.a: int c
com.ztspeech.recognizer.a.a: int d
com.ztspeech.recognizer.a.a: int e
com.ztspeech.recognizer.a.a: int f
com.ztspeech.recognizer.a.a: int g
com.ztspeech.recognizer.a.a: int l
com.ztspeech.recognizer.a.a: int m
com.ztspeech.recognizer.a.a: int n
com.ztspeech.recognizer.a.a: int o
com.ztspeech.recognizer.a.a: boolean p
com.ztspeech.recognizer.a.a: boolean q
com.ztspeech.recognizer.a.a: void <clinit>()
com.ztspeech.recognizer.a.a: a()
com.ztspeech.recognizer.a.a: void a(boolean)
com.ztspeech.recognizer.a.a: void a(int,int)
com.ztspeech.recognizer.a.a: void a()
com.ztspeech.recognizer.a.a: boolean b()
com.ztspeech.recognizer.a.a: boolean c()
com.ztspeech.recognizer.a.a: int d()
com.ztspeech.recognizer.a.a: boolean a(short[])
com.ztspeech.recognizer.a.b
com.ztspeech.recognizer.a.b: com.ztspeech.recognizer.a.d e
com.ztspeech.recognizer.a.b: boolean a
com.ztspeech.recognizer.a.b: android.media.AudioRecord f
com.ztspeech.recognizer.a.b: int b
com.ztspeech.recognizer.a.b: int c
com.ztspeech.recognizer.a.b: int d
com.ztspeech.recognizer.a.b: com.ztspeech.recognizer.a.a g
com.ztspeech.recognizer.a.b: int h
com.ztspeech.recognizer.a.b: int i
com.ztspeech.recognizer.a.b: int j
com.ztspeech.recognizer.a.b: int k
com.ztspeech.recognizer.a.b: int l
com.ztspeech.recognizer.a.b: boolean m
com.ztspeech.recognizer.a.b: java.lang.Runnable n
com.ztspeech.recognizer.a.b: java.lang.Thread o
com.ztspeech.recognizer.a.b: boolean p
com.ztspeech.recognizer.a.b: void a(com.ztspeech.recognizer.a.d)
com.ztspeech.recognizer.a.b: void a(int,int)
com.ztspeech.recognizer.a.b: b()
com.ztspeech.recognizer.a.b: boolean c()
com.ztspeech.recognizer.a.b: boolean a()
com.ztspeech.recognizer.a.b: void b()
com.ztspeech.recognizer.a.b: void a(boolean)
com.ztspeech.recognizer.a.b: void b(boolean)
com.ztspeech.recognizer.a.b: android.media.AudioRecord a(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.b: com.ztspeech.recognizer.a.a b(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.b: boolean c(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.b: com.ztspeech.recognizer.a.d d(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.b: boolean e(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.b: void a(com.ztspeech.recognizer.a.b,int)
com.ztspeech.recognizer.a.b: void f(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.b: void g(com.ztspeech.recognizer.a.b)
com.ztspeech.recognizer.a.d
com.ztspeech.recognizer.a.d: void a(short[],int)
com.ztspeech.recognizer.a.d: boolean a()
com.ztspeech.recognizer.a.d: boolean b()
com.ztspeech.recognizer.a.d: void c()
com.ztspeech.recognizer.a.d: void a(int)
com.ztspeech.recognizer.b
com.ztspeech.recognizer.b: java.lang.Integer a
com.ztspeech.recognizer.b: java.lang.String b
com.ztspeech.recognizer.b: void <clinit>()
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onVoiceValue(int)
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onRecordEnd()
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onRecordBegin()
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onRecorderError(int)
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onWaitBegin()
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onWaitEnd()
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void onRecognizerError(int)
com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface: void setListView(java.lang.String[])
com.ztspeech.recognizer.interf.RecognizerDialogInterface
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setToChineseEngine()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setToEnglishEngine()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setToCH2ENEngine()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setToEN2CHEngine()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void show()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void close()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setToContinuous(int)
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setListViewShow(boolean)
com.ztspeech.recognizer.interf.RecognizerDialogInterface: java.lang.Object getObject()
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setObject(java.lang.Object)
com.ztspeech.recognizer.interf.RecognizerDialogInterface: void setMtype(java.lang.String)
com.ztspeech.recognizer.interf.RecognizerInterface
com.ztspeech.recognizer.interf.RecognizerInterface: boolean open()
com.ztspeech.recognizer.interf.RecognizerInterface: void close()
com.ztspeech.recognizer.interf.RecognizerInterface: boolean write(short[])
com.ztspeech.recognizer.interf.RecognizerInterface: void cancel()
com.ztspeech.recognizer.interf.RecognizerInterface: boolean isProcessing()
com.ztspeech.recognizer.interf.RecognizerInterface: void setToChineseEngine()
com.ztspeech.recognizer.interf.RecognizerInterface: void setToEnglishEngine()
com.ztspeech.recognizer.interf.RecognizerInterface: void setToCH2ENEngine()
com.ztspeech.recognizer.interf.RecognizerInterface: void setToEN2CHEngine()
com.ztspeech.recognizer.interf.RecognizerInterface: void setToContinuous(int)
com.ztspeech.recognizer.interf.RecognizerInterface: void setUserInfo(java.lang.String)
com.ztspeech.recognizer.net.HttpGetQtEv
com.ztspeech.recognizer.net.HttpGetQtEv: java.util.ArrayList hostList
com.ztspeech.recognizer.net.HttpGetQtEv: java.lang.String host
com.ztspeech.recognizer.net.HttpGetQtEv: java.net.URL url
com.ztspeech.recognizer.net.HttpGetQtEv: java.lang.String mEv
com.ztspeech.recognizer.net.HttpGetQtEv: java.lang.String mQt
com.ztspeech.recognizer.net.HttpGetQtEv: void <clinit>()
com.ztspeech.recognizer.net.HttpGetQtEv: HttpGetQtEv()
com.ztspeech.recognizer.net.HttpGetQtEv: void setHost(java.lang.String)
com.ztspeech.recognizer.net.HttpGetQtEv: void setHostList(java.util.ArrayList)
com.ztspeech.recognizer.net.HttpGetQtEv: java.lang.String getUrlStr()
com.ztspeech.recognizer.net.HttpGetQtEv: void setEv(int)
com.ztspeech.recognizer.net.HttpGetQtEv: void setQt(java.lang.String)
com.ztspeech.recognizer.net.HttpGetQtEv: java.lang.String setEvToServer(java.lang.String,int)
com.ztspeech.recognizer.net.HttpGetQtEv: java.lang.String setEVRequest(java.lang.String)
com.ztspeech.recognizer.net.HttpGetQtEv: java.util.ArrayList setQtRequest(java.lang.String)
com.ztspeech.recognizer.net.NetCheck
com.ztspeech.recognizer.net.NetCheck: android.net.ConnectivityManager connectivity
com.ztspeech.recognizer.net.NetCheck: void <clinit>()
com.ztspeech.recognizer.net.NetCheck: NetCheck()
com.ztspeech.recognizer.net.NetCheck: boolean isWifiActive()
com.ztspeech.recognizer.net.NetCheck: boolean isNetActive()
com.ztspeech.recognizer.net.a
com.ztspeech.recognizer.net.a: com.ztspeech.recognizer.OnEngineListener a
com.ztspeech.recognizer.net.a: java.util.ArrayList b
com.ztspeech.recognizer.net.a: boolean c
com.ztspeech.recognizer.net.a: boolean d
com.ztspeech.recognizer.net.a: boolean e
com.ztspeech.recognizer.net.a: java.io.ByteArrayOutputStream f
com.ztspeech.recognizer.net.a: java.net.HttpURLConnection g
com.ztspeech.recognizer.net.a: java.lang.String h
com.ztspeech.recognizer.net.a: int i
com.ztspeech.recognizer.net.a: java.lang.String j
com.ztspeech.recognizer.net.a: java.lang.String k
com.ztspeech.recognizer.net.a: java.lang.String l
com.ztspeech.recognizer.net.a: java.lang.String m
com.ztspeech.recognizer.net.a: java.lang.String n
com.ztspeech.recognizer.net.a: boolean o
com.ztspeech.recognizer.net.a: com.ztspeech.recognizer.PhoneInfo p
com.ztspeech.recognizer.net.a: com.ztspeech.recognizer.net.d q
com.ztspeech.recognizer.net.a: int r
com.ztspeech.recognizer.net.a: int s
com.ztspeech.recognizer.net.a: int t
com.ztspeech.recognizer.net.a: java.lang.Runnable u
com.ztspeech.recognizer.net.a: java.lang.Runnable v
com.ztspeech.recognizer.net.a: void <clinit>()
com.ztspeech.recognizer.net.a: void a(java.lang.Integer)
com.ztspeech.recognizer.net.a: void b(java.lang.Integer)
com.ztspeech.recognizer.net.a: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.recognizer.net.a: a(android.content.Context)
com.ztspeech.recognizer.net.a: void g()
com.ztspeech.recognizer.net.a: void a(com.ztspeech.recognizer.OnEngineListener)
com.ztspeech.recognizer.net.a: void a(java.lang.String)
com.ztspeech.recognizer.net.a: void a(int)
com.ztspeech.recognizer.net.a: void b(java.lang.String)
com.ztspeech.recognizer.net.a: void a()
com.ztspeech.recognizer.net.a: void b()
com.ztspeech.recognizer.net.a: int b(java.io.ByteArrayOutputStream,boolean)
com.ztspeech.recognizer.net.a: void a(java.util.ArrayList,int,java.lang.String)
com.ztspeech.recognizer.net.a: void h()
com.ztspeech.recognizer.net.a: void i()
com.ztspeech.recognizer.net.a: boolean a(java.io.ByteArrayOutputStream)
com.ztspeech.recognizer.net.a: boolean b(java.io.ByteArrayOutputStream)
com.ztspeech.recognizer.net.a: boolean a(java.io.ByteArrayOutputStream,boolean)
com.ztspeech.recognizer.net.a: void c()
com.ztspeech.recognizer.net.a: void d()
com.ztspeech.recognizer.net.a: boolean e()
com.ztspeech.recognizer.net.a: void a(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: void f()
com.ztspeech.recognizer.net.a: int a(com.ztspeech.recognizer.net.a,java.io.ByteArrayOutputStream,boolean)
com.ztspeech.recognizer.net.a: boolean b(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: java.io.ByteArrayOutputStream c(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: void a(com.ztspeech.recognizer.net.a,java.lang.String)
com.ztspeech.recognizer.net.a: void d(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: java.lang.String e(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: void a(com.ztspeech.recognizer.net.a,java.util.ArrayList,int,java.lang.String)
com.ztspeech.recognizer.net.a: void f(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: void g(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: void h(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: java.util.ArrayList i(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.a: com.ztspeech.recognizer.OnEngineListener j(com.ztspeech.recognizer.net.a)
com.ztspeech.recognizer.net.e
com.ztspeech.recognizer.net.e: java.lang.String a
com.ztspeech.recognizer.net.e: java.net.URL b
com.ztspeech.recognizer.net.e: java.lang.String c
com.ztspeech.recognizer.net.e: java.lang.String d
com.ztspeech.recognizer.net.e: java.lang.String e
com.ztspeech.recognizer.net.e: java.lang.String f
com.ztspeech.recognizer.net.e: float g
com.ztspeech.recognizer.net.e: com.ztspeech.recognizer.net.f h
com.ztspeech.recognizer.net.e: void <clinit>()
com.ztspeech.recognizer.net.e: e()
com.ztspeech.recognizer.net.e: void a(java.lang.String)
com.ztspeech.recognizer.net.e: void b(java.lang.String)
com.ztspeech.recognizer.net.e: void a(float)
com.ztspeech.recognizer.net.e: void c(java.lang.String)
com.ztspeech.recognizer.net.e: void d(java.lang.String)
com.ztspeech.recognizer.net.e: java.io.InputStream e(java.lang.String)
com.ztspeech.recognizer.net.e: java.io.InputStream f(java.lang.String)
com.ztspeech.recognizer.net.f
com.ztspeech.recognizer.net.f: java.util.ArrayList a
com.ztspeech.recognizer.net.f: com.ztspeech.recognizer.net.f b
com.ztspeech.recognizer.net.f: void <clinit>()
com.ztspeech.recognizer.net.f: f()
com.ztspeech.recognizer.net.f: com.ztspeech.recognizer.net.f a()
com.ztspeech.recognizer.net.f: void a(java.lang.String,java.io.InputStream)
com.ztspeech.recognizer.net.f: java.io.InputStream a(java.lang.String)
com.ztspeech.recognizer.speak.LocaleTTS
com.ztspeech.recognizer.speak.LocaleTTS: com.ztspeech.recognizer.speak.LocaleTTS a
com.ztspeech.recognizer.speak.LocaleTTS: boolean b
com.ztspeech.recognizer.speak.LocaleTTS: android.speech.tts.TextToSpeech c
com.ztspeech.recognizer.speak.LocaleTTS: android.content.Context d
com.ztspeech.recognizer.speak.LocaleTTS: java.util.Locale e
com.ztspeech.recognizer.speak.LocaleTTS: java.util.Locale f
com.ztspeech.recognizer.speak.LocaleTTS: java.util.Locale g
com.ztspeech.recognizer.speak.LocaleTTS: void <clinit>()
com.ztspeech.recognizer.speak.LocaleTTS: LocaleTTS()
com.ztspeech.recognizer.speak.LocaleTTS: void setSpeechRate(float)
com.ztspeech.recognizer.speak.LocaleTTS: boolean isSpeechCN()
com.ztspeech.recognizer.speak.LocaleTTS: boolean isSpeechEN()
com.ztspeech.recognizer.speak.LocaleTTS: com.ztspeech.recognizer.speak.LocaleTTS getInstance()
com.ztspeech.recognizer.speak.LocaleTTS: boolean isPlaying()
com.ztspeech.recognizer.speak.LocaleTTS: void initData(android.content.Context)
com.ztspeech.recognizer.speak.LocaleTTS: void unInitData()
com.ztspeech.recognizer.speak.LocaleTTS: boolean playChinese(java.lang.String)
com.ztspeech.recognizer.speak.LocaleTTS: boolean playEnglish(java.lang.String)
com.ztspeech.recognizer.speak.LocaleTTS: boolean a(java.lang.String)
com.ztspeech.recognizer.speak.LocaleTTS: void stop()
com.ztspeech.recognizer.speak.LocaleTTS: boolean a(java.util.Locale)
com.ztspeech.recognizer.speak.LocaleTTS: void a()
com.ztspeech.recognizer.speak.LocaleTTS: void onInit(int)
com.ztspeech.recognizer.speak.OnTTSPlayerListener
com.ztspeech.recognizer.speak.OnTTSPlayerListener: void onTtsPlayError(int)
com.ztspeech.recognizer.speak.OnTTSPlayerListener: void onTtsPlayLoadDataStart()
com.ztspeech.recognizer.speak.OnTTSPlayerListener: void onTtsPlayLoadDataEnd()
com.ztspeech.recognizer.speak.OnTTSPlayerListener: void onTtsPlayStart()
com.ztspeech.recognizer.speak.OnTTSPlayerListener: void onTtsPlayEnd()
com.ztspeech.recognizer.speak.TTSDefine
com.ztspeech.recognizer.speak.TTSDefine: int GENDER_FEMALE
com.ztspeech.recognizer.speak.TTSDefine: int GENDER_MALE
com.ztspeech.recognizer.speak.TTSDefine: int GENDER_MIX
com.ztspeech.recognizer.speak.TTSDefine: TTSDefine()
com.ztspeech.recognizer.speak.TTSPlayer
com.ztspeech.recognizer.speak.TTSPlayer: float speedLevel
com.ztspeech.recognizer.speak.TTSPlayer: java.lang.String MSG_FLAG
com.ztspeech.recognizer.speak.TTSPlayer: java.lang.String MSG_TYPE
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.speak.OnTTSPlayerListener mOnTTSPlayerListener
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.net.e mTtsDownloader
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.speak.VoicePlayer mPlayer
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.speak.c mThreadMsgHandler
com.ztspeech.recognizer.speak.TTSPlayer: int mTaskId
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.speak.interf.OnPlayerListener mPlayerListener
com.ztspeech.recognizer.speak.TTSPlayer: void <clinit>()
com.ztspeech.recognizer.speak.TTSPlayer: TTSPlayer(android.content.Context,com.ztspeech.recognizer.speak.OnTTSPlayerListener)
com.ztspeech.recognizer.speak.TTSPlayer: void setTTSVoiceSpeedLevel(float)
com.ztspeech.recognizer.speak.TTSPlayer: void setTTSHost(java.lang.String)
com.ztspeech.recognizer.speak.TTSPlayer: java.io.InputStream getTTSChineseStream(java.lang.String,int)
com.ztspeech.recognizer.speak.TTSPlayer: java.io.InputStream getTTSEnglishStream(java.lang.String,int)
com.ztspeech.recognizer.speak.TTSPlayer: java.io.InputStream getTTSInputStream(java.lang.String)
com.ztspeech.recognizer.speak.TTSPlayer: void setGender(int)
com.ztspeech.recognizer.speak.TTSPlayer: void setLanguageToChinese()
com.ztspeech.recognizer.speak.TTSPlayer: void setLanguageToEnglish()
com.ztspeech.recognizer.speak.TTSPlayer: void play(java.io.InputStream)
com.ztspeech.recognizer.speak.TTSPlayer: void play(java.lang.String)
com.ztspeech.recognizer.speak.TTSPlayer: boolean isPlayying()
com.ztspeech.recognizer.speak.TTSPlayer: void stop()
com.ztspeech.recognizer.speak.TTSPlayer: void setHost(java.lang.String)
com.ztspeech.recognizer.speak.TTSPlayer: int access$0(com.ztspeech.recognizer.speak.TTSPlayer)
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.speak.c access$1(com.ztspeech.recognizer.speak.TTSPlayer)
com.ztspeech.recognizer.speak.TTSPlayer: com.ztspeech.recognizer.speak.OnTTSPlayerListener access$2(com.ztspeech.recognizer.speak.TTSPlayer)
com.ztspeech.recognizer.speak.VoicePlayer
com.ztspeech.recognizer.speak.VoicePlayer: int PLAY_RATE
com.ztspeech.recognizer.speak.VoicePlayer: android.media.AudioTrack mPlayer
com.ztspeech.recognizer.speak.VoicePlayer: boolean mIsPlaying
com.ztspeech.recognizer.speak.VoicePlayer: java.lang.String mPlaytext
com.ztspeech.recognizer.speak.VoicePlayer: com.ztspeech.recognizer.Codecs mDecoder
com.ztspeech.recognizer.speak.VoicePlayer: java.io.InputStream mSpx
com.ztspeech.recognizer.speak.VoicePlayer: com.ztspeech.recognizer.speak.interf.OnPlayerListener mListener
com.ztspeech.recognizer.speak.VoicePlayer: java.lang.Runnable mRunnablePlay
com.ztspeech.recognizer.speak.VoicePlayer: boolean isPlaying()
com.ztspeech.recognizer.speak.VoicePlayer: void setListener(com.ztspeech.recognizer.speak.interf.OnPlayerListener)
com.ztspeech.recognizer.speak.VoicePlayer: VoicePlayer(android.content.Context)
com.ztspeech.recognizer.speak.VoicePlayer: void unInitialize()
com.ztspeech.recognizer.speak.VoicePlayer: boolean initialize()
com.ztspeech.recognizer.speak.VoicePlayer: void writeLog(java.lang.String)
com.ztspeech.recognizer.speak.VoicePlayer: void play(java.lang.String)
com.ztspeech.recognizer.speak.VoicePlayer: void play(java.io.InputStream)
com.ztspeech.recognizer.speak.VoicePlayer: void stop()
com.ztspeech.recognizer.speak.VoicePlayer: void access$0(com.ztspeech.recognizer.speak.VoicePlayer,boolean)
com.ztspeech.recognizer.speak.VoicePlayer: void access$1(com.ztspeech.recognizer.speak.VoicePlayer,java.lang.String)
com.ztspeech.recognizer.speak.VoicePlayer: java.io.InputStream access$2(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: com.ztspeech.recognizer.speak.interf.OnPlayerListener access$3(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: java.lang.String access$4(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: com.ztspeech.recognizer.Codecs access$5(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: boolean access$6(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: android.media.AudioTrack access$7(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: boolean access$8(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.VoicePlayer: void access$9(com.ztspeech.recognizer.speak.VoicePlayer)
com.ztspeech.recognizer.speak.interf.OnPlayerListener
com.ztspeech.recognizer.speak.interf.OnPlayerListener: java.io.InputStream getPlayWaveData(java.lang.String)
com.ztspeech.recognizer.speak.interf.OnPlayerListener: void onPlayLoadDataStart()
com.ztspeech.recognizer.speak.interf.OnPlayerListener: void onPlayLoadDataEnd()
com.ztspeech.recognizer.speak.interf.OnPlayerListener: void onPlayStart()
com.ztspeech.recognizer.speak.interf.OnPlayerListener: void onPlayStop()
com.ztspeech.recognizer.speak.interf.OnRecognizerViewListener
com.ztspeech.recognizer.speak.interf.OnRecognizerViewListener: void onRecognizerViewCancel()
com.ztspeech.recognizer.speak.interf.OnRecognizerViewListener: void onRecognizerViewRecord()
com.ztspeech.recognizer.speak.interf.OnRecognizerViewListener: void onRecognizerViewListClick(java.lang.String)
com.ztspeech.recognizer.speak.interf.OnVoicePlayerListener
com.ztspeech.recognizer.speak.interf.OnVoicePlayerListener: void setListener(com.ztspeech.recognizer.speak.interf.OnPlayerListener)
com.ztspeech.recognizer.speak.interf.OnVoicePlayerListener: void play(java.io.InputStream)
com.ztspeech.recognizer.speak.interf.OnVoicePlayerListener: void play(java.lang.String)
com.ztspeech.recognizer.speak.interf.OnVoicePlayerListener: void stop()
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: void setGender(int)
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: void setLanguageToChinese()
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: void setLanguageToEnglish()
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: void play(java.io.InputStream)
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: void play(java.lang.String)
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: boolean isPlayying()
com.ztspeech.recognizer.speak.interf.TTSPlayerBaseInterface: void stop()
com.ztspeech.recognizer.speak.interf.TTSPlayerInterface
com.ztspeech.recognizer.speak.interf.TTSPlayerInterface: java.io.InputStream getTTSChineseStream(java.lang.String,int)
com.ztspeech.recognizer.speak.interf.TTSPlayerInterface: java.io.InputStream getTTSEnglishStream(java.lang.String,int)
com.ztspeech.recognizer.speak.interf.TTSPlayerInterface: java.io.InputStream getTTSInputStream(java.lang.String)
com.ztspeech.recognizer.speak.interf.TTSPlayerInterface: void setHost(java.lang.String)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.a.b a
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface b
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.OnEngineListener c
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizerDialog.d d
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.Recognizer e
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: boolean f
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: boolean g
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: java.lang.String h
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.OnEngineListener i
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.a.d j
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.speak.interf.OnRecognizerViewListener k
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: UnisayRecognizerDialog(android.content.Context,java.lang.String,com.ztspeech.recognizer.OnEngineListenerPlus,com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: UnisayRecognizerDialog(android.content.Context,java.lang.String,com.ztspeech.recognizer.OnEngineListener,com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: java.lang.Object getObject()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setRecordAutoStop(boolean)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setVADParam(int,int)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void isCutHeadMute(boolean)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setMinPostSize(java.lang.Integer)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setReadTimeout(java.lang.Integer)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setToChineseEngine()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setToEnglishEngine()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setToCH2ENEngine()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setToEN2CHEngine()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setToContinuous(int)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setObject(java.lang.Object)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setHttpPort(java.lang.Integer)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setMtype(java.lang.String)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setUserInfo(java.lang.String,int,int)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void show()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void close()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void stop()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void onRecognizerViewRecord()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void onRecognizerViewCancel()
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void setListViewShow(boolean)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.OnEngineListener a(com.ztspeech.recognizerDialog.UnisayRecognizerDialog)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface b(com.ztspeech.recognizerDialog.UnisayRecognizerDialog)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.Recognizer c(com.ztspeech.recognizerDialog.UnisayRecognizerDialog)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void a(com.ztspeech.recognizerDialog.UnisayRecognizerDialog,int)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: com.ztspeech.recognizer.a.b d(com.ztspeech.recognizerDialog.UnisayRecognizerDialog)
com.ztspeech.recognizerDialog.UnisayRecognizerDialog: void e(com.ztspeech.recognizerDialog.UnisayRecognizerDialog)
com.ztspeech.simutalk2.BuildConfig
com.ztspeech.simutalk2.BuildConfig: boolean DEBUG
com.ztspeech.simutalk2.BuildConfig: BuildConfig()
com.ztspeech.simutalk2.R
com.ztspeech.simutalk2.R: R()
com.ztspeech.simutalk2.R$anim
com.ztspeech.simutalk2.R$anim: int bird_alpha
com.ztspeech.simutalk2.R$anim: int bird_rock_left
com.ztspeech.simutalk2.R$anim: int bird_rock_left_b
com.ztspeech.simutalk2.R$anim: int enter_alpha
com.ztspeech.simutalk2.R$anim: int in_lefttoright
com.ztspeech.simutalk2.R$anim: int in_righttoleft
com.ztspeech.simutalk2.R$anim: int lefttoright
com.ztspeech.simutalk2.R$anim: int out_alpha
com.ztspeech.simutalk2.R$anim: int out_lefttoright
com.ztspeech.simutalk2.R$anim: int out_righttoleft
com.ztspeech.simutalk2.R$anim: int popmenu_enter
com.ztspeech.simutalk2.R$anim: int popmenu_exit
com.ztspeech.simutalk2.R$anim: int popmore_exit
com.ztspeech.simutalk2.R$anim: int popmore_show
com.ztspeech.simutalk2.R$anim: int push_up_in
com.ztspeech.simutalk2.R$anim: int push_up_out
com.ztspeech.simutalk2.R$anim: int righttoleft
com.ztspeech.simutalk2.R$anim: int slideinleft
com.ztspeech.simutalk2.R$anim: int slideinright
com.ztspeech.simutalk2.R$anim: int slideoutleft
com.ztspeech.simutalk2.R$anim: int slideoutright
com.ztspeech.simutalk2.R$anim: int wave_scale
com.ztspeech.simutalk2.R$anim: int zoom_enter
com.ztspeech.simutalk2.R$anim: R$anim()
com.ztspeech.simutalk2.R$array
com.ztspeech.simutalk2.R$array: int fontsize_list_preference
com.ztspeech.simutalk2.R$array: int fontsizevalues_list_preference
com.ztspeech.simutalk2.R$array: int language_list_preference
com.ztspeech.simutalk2.R$array: int languagevalues_list_preference
com.ztspeech.simutalk2.R$array: int ttssex_list_preference
com.ztspeech.simutalk2.R$array: int ttssexvalues_list_preference
com.ztspeech.simutalk2.R$array: int ttsspeed_list_preference
com.ztspeech.simutalk2.R$array: int ttsspeedvalues_list_preference
com.ztspeech.simutalk2.R$array: R$array()
com.ztspeech.simutalk2.R$attr
com.ztspeech.simutalk2.R$attr: R$attr()
com.ztspeech.simutalk2.R$color
com.ztspeech.simutalk2.R$color: int background_light_black
com.ztspeech.simutalk2.R$color: int eeeeee
com.ztspeech.simutalk2.R$color: int item_focused_false
com.ztspeech.simutalk2.R$color: int item_focused_true
com.ztspeech.simutalk2.R$color: int qa_pop_message_text_count
com.ztspeech.simutalk2.R$color: int renren_sdk_edittext_bg
com.ztspeech.simutalk2.R$color: int renren_sdk_edittext_border
com.ztspeech.simutalk2.R$color: int renren_sdk_pay_repair_bg
com.ztspeech.simutalk2.R$color: int renren_sdk_pay_repair_btn_text
com.ztspeech.simutalk2.R$color: int renren_sdk_pay_repair_item_bg
com.ztspeech.simutalk2.R$color: int renren_sdk_pay_repair_list_bg
com.ztspeech.simutalk2.R$color: int renren_sdk_status_username_text
com.ztspeech.simutalk2.R$color: int renren_sdk_title_bg
com.ztspeech.simutalk2.R$color: int renren_sdk_title_border
com.ztspeech.simutalk2.R$color: int renren_sdk_title_text
com.ztspeech.simutalk2.R$color: int tab_btn_text
com.ztspeech.simutalk2.R$color: int tab_btn_text_focused_false
com.ztspeech.simutalk2.R$color: int tab_btn_text_focused_true
com.ztspeech.simutalk2.R$color: int white
com.ztspeech.simutalk2.R$color: R$color()
com.ztspeech.simutalk2.R$dimen
com.ztspeech.simutalk2.R$dimen: int actionmenu_hight_1
com.ztspeech.simutalk2.R$dimen: int actionmenu_hight_2
com.ztspeech.simutalk2.R$dimen: int actionmenu_hight_3
com.ztspeech.simutalk2.R$dimen: int footerview_hight
com.ztspeech.simutalk2.R$dimen: int padding_large
com.ztspeech.simutalk2.R$dimen: int padding_medium
com.ztspeech.simutalk2.R$dimen: int padding_small
com.ztspeech.simutalk2.R$dimen: int popchange_height
com.ztspeech.simutalk2.R$dimen: int popchange_width
com.ztspeech.simutalk2.R$dimen: int popchange_x
com.ztspeech.simutalk2.R$dimen: int popchange_y
com.ztspeech.simutalk2.R$dimen: int popspeak_width
com.ztspeech.simutalk2.R$dimen: int tab_btn_text_size
com.ztspeech.simutalk2.R$dimen: int weibosdk_dialog_bottom_margin
com.ztspeech.simutalk2.R$dimen: int weibosdk_dialog_left_margin
com.ztspeech.simutalk2.R$dimen: int weibosdk_dialog_right_margin
com.ztspeech.simutalk2.R$dimen: int weibosdk_dialog_top_margin
com.ztspeech.simutalk2.R$dimen: R$dimen()
com.ztspeech.simutalk2.R$drawable
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording1
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording2
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording3
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording4
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording5
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording6
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording7
com.ztspeech.simutalk2.R$drawable: int bottorm_button_recording8
com.ztspeech.simutalk2.R$drawable: int check_button
com.ztspeech.simutalk2.R$drawable: int ck_ci_search_but01
com.ztspeech.simutalk2.R$drawable: int ck_ci_search_but02
com.ztspeech.simutalk2.R$drawable: int ck_ci_search_but03
com.ztspeech.simutalk2.R$drawable: int ck_ci_search_but04
com.ztspeech.simutalk2.R$drawable: int ck_ci_search_but05
com.ztspeech.simutalk2.R$drawable: int ck_you_qa_min_pop_but03
com.ztspeech.simutalk2.R$drawable: int ck_you_qa_min_pop_but04
com.ztspeech.simutalk2.R$drawable: int com_but_hui
com.ztspeech.simutalk2.R$drawable: int com_but_normal
com.ztspeech.simutalk2.R$drawable: int com_but_press
com.ztspeech.simutalk2.R$drawable: int com_button
com.ztspeech.simutalk2.R$drawable: int com_pop01_bg
com.ztspeech.simutalk2.R$drawable: int com_pop01_line
com.ztspeech.simutalk2.R$drawable: int com_pop_wait
com.ztspeech.simutalk2.R$drawable: int content_r11_c1
com.ztspeech.simutalk2.R$drawable: int content_r13_c1
com.ztspeech.simutalk2.R$drawable: int content_r15_c1
com.ztspeech.simutalk2.R$drawable: int content_r17_c1
com.ztspeech.simutalk2.R$drawable: int content_r19_c1
com.ztspeech.simutalk2.R$drawable: int content_r1_c1
com.ztspeech.simutalk2.R$drawable: int content_r21_c1
com.ztspeech.simutalk2.R$drawable: int content_r23_c1
com.ztspeech.simutalk2.R$drawable: int content_r3_c1
com.ztspeech.simutalk2.R$drawable: int content_r5_c1
com.ztspeech.simutalk2.R$drawable: int content_r7_c1
com.ztspeech.simutalk2.R$drawable: int content_r9_c1
com.ztspeech.simutalk2.R$drawable: int d_checked
com.ztspeech.simutalk2.R$drawable: int d_checkedsel
com.ztspeech.simutalk2.R$drawable: int dialog_yjtm_bg
com.ztspeech.simutalk2.R$drawable: int divider_horizontal_timeline
com.ztspeech.simutalk2.R$drawable: int fenxiang_1
com.ztspeech.simutalk2.R$drawable: int fenxiang_2
com.ztspeech.simutalk2.R$drawable: int hd_qa
com.ztspeech.simutalk2.R$drawable: int ic_action_search
com.ztspeech.simutalk2.R$drawable: int ic_launcher
com.ztspeech.simutalk2.R$drawable: int list_button_nor
com.ztspeech.simutalk2.R$drawable: int list_button_press
com.ztspeech.simutalk2.R$drawable: int listitem1
com.ztspeech.simutalk2.R$drawable: int long_put_speak
com.ztspeech.simutalk2.R$drawable: int main_btn_help
com.ztspeech.simutalk2.R$drawable: int main_btn_lib
com.ztspeech.simutalk2.R$drawable: int main_btn_qa
com.ztspeech.simutalk2.R$drawable: int main_btn_settings
com.ztspeech.simutalk2.R$drawable: int main_btn_share
com.ztspeech.simutalk2.R$drawable: int main_btn_trans
com.ztspeech.simutalk2.R$drawable: int main_help_1
com.ztspeech.simutalk2.R$drawable: int main_help_2
com.ztspeech.simutalk2.R$drawable: int main_library_1
com.ztspeech.simutalk2.R$drawable: int main_library_2
com.ztspeech.simutalk2.R$drawable: int main_library_left
com.ztspeech.simutalk2.R$drawable: int main_library_right
com.ztspeech.simutalk2.R$drawable: int main_qa_1
com.ztspeech.simutalk2.R$drawable: int main_qa_2
com.ztspeech.simutalk2.R$drawable: int main_qa_left
com.ztspeech.simutalk2.R$drawable: int main_qa_right
com.ztspeech.simutalk2.R$drawable: int main_set_1
com.ztspeech.simutalk2.R$drawable: int main_set_2
com.ztspeech.simutalk2.R$drawable: int main_share_1
com.ztspeech.simutalk2.R$drawable: int main_share_2
com.ztspeech.simutalk2.R$drawable: int main_speech_1
com.ztspeech.simutalk2.R$drawable: int main_speech_2
com.ztspeech.simutalk2.R$drawable: int main_speech_left
com.ztspeech.simutalk2.R$drawable: int main_speech_right
com.ztspeech.simutalk2.R$drawable: int main_top
com.ztspeech.simutalk2.R$drawable: int main_top_close
com.ztspeech.simutalk2.R$drawable: int my_seek_thumb
com.ztspeech.simutalk2.R$drawable: int no2_action
com.ztspeech.simutalk2.R$drawable: int no2_addfriend
com.ztspeech.simutalk2.R$drawable: int no2_addfriend_nor
com.ztspeech.simutalk2.R$drawable: int no2_addfriend_press
com.ztspeech.simutalk2.R$drawable: int no2_background
com.ztspeech.simutalk2.R$drawable: int no2_bird_left1
com.ztspeech.simutalk2.R$drawable: int no2_bird_left2
com.ztspeech.simutalk2.R$drawable: int no2_bird_left3
com.ztspeech.simutalk2.R$drawable: int no2_bird_left_b_2
com.ztspeech.simutalk2.R$drawable: int no2_bird_left_b_3
com.ztspeech.simutalk2.R$drawable: int no2_btnluyin
com.ztspeech.simutalk2.R$drawable: int no2_buttonsearch
com.ztspeech.simutalk2.R$drawable: int no2_cancle
com.ztspeech.simutalk2.R$drawable: int no2_listview_divider
com.ztspeech.simutalk2.R$drawable: int no2_popbg
com.ztspeech.simutalk2.R$drawable: int no2_searchresult_middle1
com.ztspeech.simutalk2.R$drawable: int no2_speak
com.ztspeech.simutalk2.R$drawable: int no2_speakeditem
com.ztspeech.simutalk2.R$drawable: int no2_whiteboad_close_nor
com.ztspeech.simutalk2.R$drawable: int no2_whiteboad_close_press
com.ztspeech.simutalk2.R$drawable: int no2_whiteboard_close
com.ztspeech.simutalk2.R$drawable: int qa_btn_com
com.ztspeech.simutalk2.R$drawable: int qa_btn_com2
com.ztspeech.simutalk2.R$drawable: int qa_btn_com2_1
com.ztspeech.simutalk2.R$drawable: int qa_btn_com2_2
com.ztspeech.simutalk2.R$drawable: int qa_btn_e_f
com.ztspeech.simutalk2.R$drawable: int qa_btn_input_voice
com.ztspeech.simutalk2.R$drawable: int qa_btn_record
com.ztspeech.simutalk2.R$drawable: int qa_btn_send
com.ztspeech.simutalk2.R$drawable: int qa_btn_z_f
com.ztspeech.simutalk2.R$drawable: int qa_button_add_friend
com.ztspeech.simutalk2.R$drawable: int qa_ci_search_bg2
com.ztspeech.simutalk2.R$drawable: int qa_ci_search_bg3
com.ztspeech.simutalk2.R$drawable: int qa_icon_langdu
com.ztspeech.simutalk2.R$drawable: int qa_list_item_bg
com.ztspeech.simutalk2.R$drawable: int qa_msg_btn_send
com.ztspeech.simutalk2.R$drawable: int qa_my_msg_btn_1
com.ztspeech.simutalk2.R$drawable: int qa_my_msg_btn_1_top
com.ztspeech.simutalk2.R$drawable: int qa_my_msg_btn_2
com.ztspeech.simutalk2.R$drawable: int qa_my_msg_btn_2_top
com.ztspeech.simutalk2.R$drawable: int qa_pop01_button_del
com.ztspeech.simutalk2.R$drawable: int qa_pop01_button_friend
com.ztspeech.simutalk2.R$drawable: int qa_pop01_button_open
com.ztspeech.simutalk2.R$drawable: int qa_shezhi_bg
com.ztspeech.simutalk2.R$drawable: int qa_state_1
com.ztspeech.simutalk2.R$drawable: int qa_state_2
com.ztspeech.simutalk2.R$drawable: int qa_state_3
com.ztspeech.simutalk2.R$drawable: int qa_tab_btn_1
com.ztspeech.simutalk2.R$drawable: int qa_tab_btn_1_top
com.ztspeech.simutalk2.R$drawable: int qa_tab_btn_2
com.ztspeech.simutalk2.R$drawable: int qa_tab_btn_2_top
com.ztspeech.simutalk2.R$drawable: int qa_tab_btn_3
com.ztspeech.simutalk2.R$drawable: int qa_tab_btn_3_top
com.ztspeech.simutalk2.R$drawable: int qa_top_bg
com.ztspeech.simutalk2.R$drawable: int qa_top_bg2
com.ztspeech.simutalk2.R$drawable: int qa_top_bg_wchat
com.ztspeech.simutalk2.R$drawable: int qa_top_button_02
com.ztspeech.simutalk2.R$drawable: int qa_top_button_03
com.ztspeech.simutalk2.R$drawable: int qa_top_button_04
com.ztspeech.simutalk2.R$drawable: int qa_top_button_friend
com.ztspeech.simutalk2.R$drawable: int qa_top_button_friend2
com.ztspeech.simutalk2.R$drawable: int qa_top_button_tui
com.ztspeech.simutalk2.R$drawable: int qa_view_back
com.ztspeech.simutalk2.R$drawable: int qa_view_bottom_bar
com.ztspeech.simutalk2.R$drawable: int qa_view_bottom_bar_2
com.ztspeech.simutalk2.R$drawable: int qa_view_title_bar
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_bg_normal1
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_bg_normal2
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_bg_normal3
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_bg_press1
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_bg_press2
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_bg_press3
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_ch
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_en
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_mic
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_normal1
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_normal2
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_normal3
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_pen
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_press1
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_press2
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_press3
com.ztspeech.simutalk2.R$drawable: int qa_you_bottorm_button_send02
com.ztspeech.simutalk2.R$drawable: int qa_you_pop_99
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_button01
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_button02
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_button_bird
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_button_letter
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_button_steal
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_dont_bg
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_friend_bg
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_friend_head
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_pop_bg
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_pop_but01
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_pop_but02
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_pop_but03
com.ztspeech.simutalk2.R$drawable: int qa_you_qa_min_pop_but04
com.ztspeech.simutalk2.R$drawable: int qa_you_record_bg_01
com.ztspeech.simutalk2.R$drawable: int qa_you_record_bg_press01
com.ztspeech.simutalk2.R$drawable: int qa_you_record_bg_press02
com.ztspeech.simutalk2.R$drawable: int qa_you_record_button_normal01
com.ztspeech.simutalk2.R$drawable: int qa_you_record_button_normal02
com.ztspeech.simutalk2.R$drawable: int qa_you_record_button_press01
com.ztspeech.simutalk2.R$drawable: int qa_you_record_button_press02
com.ztspeech.simutalk2.R$drawable: int recognizer_wait_anim
com.ztspeech.simutalk2.R$drawable: int recognizer_wait_anim_new
com.ztspeech.simutalk2.R$drawable: int record_r11_c1
com.ztspeech.simutalk2.R$drawable: int record_r15_c1
com.ztspeech.simutalk2.R$drawable: int record_r19_c1
com.ztspeech.simutalk2.R$drawable: int record_r1_c1
com.ztspeech.simutalk2.R$drawable: int record_r23_c1
com.ztspeech.simutalk2.R$drawable: int record_r27_c1
com.ztspeech.simutalk2.R$drawable: int record_r4_c1
com.ztspeech.simutalk2.R$drawable: int record_r7_c1
com.ztspeech.simutalk2.R$drawable: int renren_android_title_bg
com.ztspeech.simutalk2.R$drawable: int renren_android_title_logo
com.ztspeech.simutalk2.R$drawable: int renren_connect
com.ztspeech.simutalk2.R$drawable: int renren_connect_icon
com.ztspeech.simutalk2.R$drawable: int renren_login_button
com.ztspeech.simutalk2.R$drawable: int renren_login_button_down
com.ztspeech.simutalk2.R$drawable: int renren_login_button_up
com.ztspeech.simutalk2.R$drawable: int renren_logout_button
com.ztspeech.simutalk2.R$drawable: int renren_logout_button_down
com.ztspeech.simutalk2.R$drawable: int renren_logout_button_up
com.ztspeech.simutalk2.R$drawable: int renren_sdk_activity_title_bg
com.ztspeech.simutalk2.R$drawable: int renren_sdk_android_title_bg
com.ztspeech.simutalk2.R$drawable: int renren_sdk_android_title_logo
com.ztspeech.simutalk2.R$drawable: int renren_sdk_connect
com.ztspeech.simutalk2.R$drawable: int renren_sdk_connect_icon
com.ztspeech.simutalk2.R$drawable: int renren_sdk_default_button_unselected
com.ztspeech.simutalk2.R$drawable: int renren_sdk_edittext_bg
com.ztspeech.simutalk2.R$drawable: int renren_sdk_line
com.ztspeech.simutalk2.R$drawable: int renren_sdk_login_button
com.ztspeech.simutalk2.R$drawable: int renren_sdk_login_button_down
com.ztspeech.simutalk2.R$drawable: int renren_sdk_login_button_up
com.ztspeech.simutalk2.R$drawable: int renren_sdk_logo
com.ztspeech.simutalk2.R$drawable: int renren_sdk_logout_button
com.ztspeech.simutalk2.R$drawable: int renren_sdk_logout_button_down
com.ztspeech.simutalk2.R$drawable: int renren_sdk_logout_button_up
com.ztspeech.simutalk2.R$drawable: int renren_sdk_pay_repair_btn
com.ztspeech.simutalk2.R$drawable: int renren_sdk_pay_repair_btn_down
com.ztspeech.simutalk2.R$drawable: int renren_sdk_pay_repair_logo
com.ztspeech.simutalk2.R$drawable: int renren_sdk_repair_btn_style
com.ztspeech.simutalk2.R$drawable: int renren_sdk_select_emotion_button_bg
com.ztspeech.simutalk2.R$drawable: int renren_sdk_status_add_postion_bg
com.ztspeech.simutalk2.R$drawable: int renren_sdk_title
com.ztspeech.simutalk2.R$drawable: int renren_sdk_vertical_line
com.ztspeech.simutalk2.R$drawable: int setting_bg
com.ztspeech.simutalk2.R$drawable: int settingbottombar
com.ztspeech.simutalk2.R$drawable: int shape_bg_listview
com.ztspeech.simutalk2.R$drawable: int talk_shuliang
com.ztspeech.simutalk2.R$drawable: int tanchu_bg
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_bg
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_01
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_ce
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_ec
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_mic
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_pen
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_recording1
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_speak
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_translation01
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_translation02
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait1
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait10
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait11
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait12
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait2
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait3
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait4
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait5
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait6
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait7
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait8
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_wait9
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_xiala01
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_xiala02
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_xiala03
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_xiala_chtoen
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_xiala_entoch
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_xiala_letter
com.ztspeech.simutalk2.R$drawable: int trans_bottorm_button_zimu
com.ztspeech.simutalk2.R$drawable: int trans_btn_binder
com.ztspeech.simutalk2.R$drawable: int trans_btn_input_text
com.ztspeech.simutalk2.R$drawable: int trans_btn_input_voice
com.ztspeech.simutalk2.R$drawable: int trans_btn_send
com.ztspeech.simutalk2.R$drawable: int trans_btn_share
com.ztspeech.simutalk2.R$drawable: int trans_cen_bg
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_01
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_02
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_03
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_04
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_05
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_06
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_07
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_08
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_09
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_10
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_11
com.ztspeech.simutalk2.R$drawable: int trans_ci_pop_button_12
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ce_1_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ce_1_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ce_2more_down_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ce_2more_down_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ce_2more_up_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ce_2more_up_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ec_1_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ec_1_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ec_2more_down_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ec_2more_down_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ec_2more_up_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_ec_2more_up_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_zimu_1_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_zimu_1_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_zimu_2more_down_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_zimu_2more_down_normal
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_zimu_2more_up_click
com.ztspeech.simutalk2.R$drawable: int trans_font_bg_zimu_2more_up_normal
com.ztspeech.simutalk2.R$drawable: int trans_icon_speak
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button01
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button02
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button03
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button04
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button_bad
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button_copy
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button_good
com.ztspeech.simutalk2.R$drawable: int trans_pop01_button_more
com.ztspeech.simutalk2.R$drawable: int trans_pop_bad
com.ztspeech.simutalk2.R$drawable: int trans_pop_duoxuanyi_bg_line
com.ztspeech.simutalk2.R$drawable: int trans_pop_duoxuanyi_up
com.ztspeech.simutalk2.R$drawable: int trans_pop_duoxuanyi_up_font
com.ztspeech.simutalk2.R$drawable: int trans_pop_good
com.ztspeech.simutalk2.R$drawable: int trans_pop_more_bg
com.ztspeech.simutalk2.R$drawable: int trans_pop_shire_bg_up
com.ztspeech.simutalk2.R$drawable: int trans_top_01_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_01_button
com.ztspeech.simutalk2.R$drawable: int trans_top_01_normal_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_01_normal_button
com.ztspeech.simutalk2.R$drawable: int trans_top_01_press_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_01_press_button
com.ztspeech.simutalk2.R$drawable: int trans_top_02_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_02_button
com.ztspeech.simutalk2.R$drawable: int trans_top_02_normal_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_02_normal_button
com.ztspeech.simutalk2.R$drawable: int trans_top_02_press_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_02_press_button
com.ztspeech.simutalk2.R$drawable: int trans_top_03_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_03_button
com.ztspeech.simutalk2.R$drawable: int trans_top_03_normal_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_03_normal_button
com.ztspeech.simutalk2.R$drawable: int trans_top_03_press_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_03_press_button
com.ztspeech.simutalk2.R$drawable: int trans_top_04_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_04_button
com.ztspeech.simutalk2.R$drawable: int trans_top_04_normal_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_04_normal_button
com.ztspeech.simutalk2.R$drawable: int trans_top_04_press_bg
com.ztspeech.simutalk2.R$drawable: int trans_top_04_press_button
com.ztspeech.simutalk2.R$drawable: int view_background
com.ztspeech.simutalk2.R$drawable: int weibo_editcontent
com.ztspeech.simutalk2.R$drawable: int weibosdk_dialog_bg
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_bg
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_bottom
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_btnr
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_cancel
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_cancel_nor
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_cancel_pre
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_edt
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_edtbg
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_sub
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_submit_nor
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_submit_pre
com.ztspeech.simutalk2.R$drawable: int weixin_dlg_top
com.ztspeech.simutalk2.R$drawable: int zseek_thumb_normal
com.ztspeech.simutalk2.R$drawable: int zseek_thumb_pressed
com.ztspeech.simutalk2.R$drawable: int zseek_thumb_selected
com.ztspeech.simutalk2.R$drawable: R$drawable()
com.ztspeech.simutalk2.R$id
com.ztspeech.simutalk2.R$id: int BtnCancel
com.ztspeech.simutalk2.R$id: int BtnCancelk
com.ztspeech.simutalk2.R$id: int BtnOK
com.ztspeech.simutalk2.R$id: int LinearLayout01
com.ztspeech.simutalk2.R$id: int TTSSeekBarLayout
com.ztspeech.simutalk2.R$id: int btnAdd
com.ztspeech.simutalk2.R$id: int btnAddFriend
com.ztspeech.simutalk2.R$id: int btnAsk
com.ztspeech.simutalk2.R$id: int btnAsk1
com.ztspeech.simutalk2.R$id: int btnBad
com.ztspeech.simutalk2.R$id: int btnCancel
com.ztspeech.simutalk2.R$id: int btnCancle
com.ztspeech.simutalk2.R$id: int btnChOrEn
com.ztspeech.simutalk2.R$id: int btnChineseToEnglish
com.ztspeech.simutalk2.R$id: int btnClose
com.ztspeech.simutalk2.R$id: int btnCopy
com.ztspeech.simutalk2.R$id: int btnDel
com.ztspeech.simutalk2.R$id: int btnEnglishToChinese
com.ztspeech.simutalk2.R$id: int btnFind
com.ztspeech.simutalk2.R$id: int btnFindNearby
com.ztspeech.simutalk2.R$id: int btnFish
com.ztspeech.simutalk2.R$id: int btnFull
com.ztspeech.simutalk2.R$id: int btnGiveUp
com.ztspeech.simutalk2.R$id: int btnGood
com.ztspeech.simutalk2.R$id: int btnHelp
com.ztspeech.simutalk2.R$id: int btnLeft
com.ztspeech.simutalk2.R$id: int btnLetter
com.ztspeech.simutalk2.R$id: int btnLib
com.ztspeech.simutalk2.R$id: int btnLibrary
com.ztspeech.simutalk2.R$id: int btnLinkman
com.ztspeech.simutalk2.R$id: int btnLuyin
com.ztspeech.simutalk2.R$id: int btnMore
com.ztspeech.simutalk2.R$id: int btnMore1
com.ztspeech.simutalk2.R$id: int btnMore2
com.ztspeech.simutalk2.R$id: int btnPlay
com.ztspeech.simutalk2.R$id: int btnPlaySpeak
com.ztspeech.simutalk2.R$id: int btnPlayTrans
com.ztspeech.simutalk2.R$id: int btnQA
com.ztspeech.simutalk2.R$id: int btnQATmp
com.ztspeech.simutalk2.R$id: int btnResponse
com.ztspeech.simutalk2.R$id: int btnReturn
com.ztspeech.simutalk2.R$id: int btnRight
com.ztspeech.simutalk2.R$id: int btnSearch
com.ztspeech.simutalk2.R$id: int btnSend
com.ztspeech.simutalk2.R$id: int btnSend1
com.ztspeech.simutalk2.R$id: int btnSeppechTrans
com.ztspeech.simutalk2.R$id: int btnSettings
com.ztspeech.simutalk2.R$id: int btnShare
com.ztspeech.simutalk2.R$id: int btnSolve
com.ztspeech.simutalk2.R$id: int btnSolve2
com.ztspeech.simutalk2.R$id: int btnSpeak
com.ztspeech.simutalk2.R$id: int btnSpeak1
com.ztspeech.simutalk2.R$id: int btnSpeak2
com.ztspeech.simutalk2.R$id: int btnSure
com.ztspeech.simutalk2.R$id: int btnTrans
com.ztspeech.simutalk2.R$id: int btnUser
com.ztspeech.simutalk2.R$id: int btnUserTmp
com.ztspeech.simutalk2.R$id: int btn_bg
com.ztspeech.simutalk2.R$id: int btn_cancel
com.ztspeech.simutalk2.R$id: int btn_change_input
com.ztspeech.simutalk2.R$id: int btn_change_language
com.ztspeech.simutalk2.R$id: int btn_layout
com.ztspeech.simutalk2.R$id: int btn_msg_info_detail
com.ztspeech.simutalk2.R$id: int btn_ok
com.ztspeech.simutalk2.R$id: int btn_record
com.ztspeech.simutalk2.R$id: int btn_send_input
com.ztspeech.simutalk2.R$id: int btn_set_name
com.ztspeech.simutalk2.R$id: int button1
com.ztspeech.simutalk2.R$id: int button2
com.ztspeech.simutalk2.R$id: int button3
com.ztspeech.simutalk2.R$id: int button4
com.ztspeech.simutalk2.R$id: int button5
com.ztspeech.simutalk2.R$id: int button6
com.ztspeech.simutalk2.R$id: int button_layout
com.ztspeech.simutalk2.R$id: int control_layout
com.ztspeech.simutalk2.R$id: int divider_txt
com.ztspeech.simutalk2.R$id: int editMsg
com.ztspeech.simutalk2.R$id: int edit_input_text
com.ztspeech.simutalk2.R$id: int edit_user_name
com.ztspeech.simutalk2.R$id: int edtContent
com.ztspeech.simutalk2.R$id: int edtInputWords
com.ztspeech.simutalk2.R$id: int edtName
com.ztspeech.simutalk2.R$id: int edtbg
com.ztspeech.simutalk2.R$id: int fast
com.ztspeech.simutalk2.R$id: int fishQuestion
com.ztspeech.simutalk2.R$id: int flSolve
com.ztspeech.simutalk2.R$id: int flTitle
com.ztspeech.simutalk2.R$id: int frame_layout
com.ztspeech.simutalk2.R$id: int gdv
com.ztspeech.simutalk2.R$id: int headImgLayout
com.ztspeech.simutalk2.R$id: int ibClose
com.ztspeech.simutalk2.R$id: int ibSpeak
com.ztspeech.simutalk2.R$id: int imageFunction
com.ztspeech.simutalk2.R$id: int imageUser1
com.ztspeech.simutalk2.R$id: int imageUser2
com.ztspeech.simutalk2.R$id: int imageView1
com.ztspeech.simutalk2.R$id: int imageView_left
com.ztspeech.simutalk2.R$id: int imagenovoiceanim
com.ztspeech.simutalk2.R$id: int imageviewanim
com.ztspeech.simutalk2.R$id: int imgFlag
com.ztspeech.simutalk2.R$id: int imgFlagOnlyR
com.ztspeech.simutalk2.R$id: int interpret_parent
com.ztspeech.simutalk2.R$id: int iv
com.ztspeech.simutalk2.R$id: int ivBackground
com.ztspeech.simutalk2.R$id: int ivBirdLeft
com.ztspeech.simutalk2.R$id: int ivBirdRight
com.ztspeech.simutalk2.R$id: int ivIcon
com.ztspeech.simutalk2.R$id: int kaixin_count
com.ztspeech.simutalk2.R$id: int kaixin_count_msg
com.ztspeech.simutalk2.R$id: int kaixin_sdk_login_confirm_button
com.ztspeech.simutalk2.R$id: int kaixin_sdk_login_entry_password
com.ztspeech.simutalk2.R$id: int kaixin_sdk_login_entry_username
com.ztspeech.simutalk2.R$id: int lFlag
com.ztspeech.simutalk2.R$id: int lFlagOnlyR
com.ztspeech.simutalk2.R$id: int layoutBottom01
com.ztspeech.simutalk2.R$id: int layoutBottom02
com.ztspeech.simutalk2.R$id: int layoutLeft
com.ztspeech.simutalk2.R$id: int layoutMsgMiddle
com.ztspeech.simutalk2.R$id: int layoutMsgSound
com.ztspeech.simutalk2.R$id: int layoutQuestion
com.ztspeech.simutalk2.R$id: int layoutRight
com.ztspeech.simutalk2.R$id: int layoutSender
com.ztspeech.simutalk2.R$id: int layoutUser1
com.ztspeech.simutalk2.R$id: int layoutUser2
com.ztspeech.simutalk2.R$id: int lblUserName
com.ztspeech.simutalk2.R$id: int linearLayout1
com.ztspeech.simutalk2.R$id: int linearLayout11
com.ztspeech.simutalk2.R$id: int linearLayout2
com.ztspeech.simutalk2.R$id: int linearLayoutBottom
com.ztspeech.simutalk2.R$id: int linearLayoutTab
com.ztspeech.simutalk2.R$id: int linearLayout_focus
com.ztspeech.simutalk2.R$id: int listViewLayout
com.ztspeech.simutalk2.R$id: int llBack
com.ztspeech.simutalk2.R$id: int llBottom
com.ztspeech.simutalk2.R$id: int llMiddle1
com.ztspeech.simutalk2.R$id: int llMiddle2
com.ztspeech.simutalk2.R$id: int llMiddle3
com.ztspeech.simutalk2.R$id: int llSpeak
com.ztspeech.simutalk2.R$id: int llTop
com.ztspeech.simutalk2.R$id: int llTrans
com.ztspeech.simutalk2.R$id: int llUser1
com.ztspeech.simutalk2.R$id: int llUser2
com.ztspeech.simutalk2.R$id: int llUserInfo
com.ztspeech.simutalk2.R$id: int ll_msg_info_data_middle
com.ztspeech.simutalk2.R$id: int lll
com.ztspeech.simutalk2.R$id: int loadinganim
com.ztspeech.simutalk2.R$id: int lvCategroy
com.ztspeech.simutalk2.R$id: int lvInputRecord
com.ztspeech.simutalk2.R$id: int lvMsgGroupList
com.ztspeech.simutalk2.R$id: int lvQuestion
com.ztspeech.simutalk2.R$id: int lvQuestions
com.ztspeech.simutalk2.R$id: int lvSimple
com.ztspeech.simutalk2.R$id: int lvSkin
com.ztspeech.simutalk2.R$id: int lvWords
com.ztspeech.simutalk2.R$id: int m_btn_record
com.ztspeech.simutalk2.R$id: int menu_settings
com.ztspeech.simutalk2.R$id: int nickName
com.ztspeech.simutalk2.R$id: int nickNameEdite
com.ztspeech.simutalk2.R$id: int nickNameLayout
com.ztspeech.simutalk2.R$id: int pbFooter
com.ztspeech.simutalk2.R$id: int personalTxt
com.ztspeech.simutalk2.R$id: int rFlag1
com.ztspeech.simutalk2.R$id: int rFlag2
com.ztspeech.simutalk2.R$id: int radio0
com.ztspeech.simutalk2.R$id: int radio1
com.ztspeech.simutalk2.R$id: int radioC2E
com.ztspeech.simutalk2.R$id: int radioE2C
com.ztspeech.simutalk2.R$id: int radioGroup
com.ztspeech.simutalk2.R$id: int radioGroup1
com.ztspeech.simutalk2.R$id: int radioL
com.ztspeech.simutalk2.R$id: int radioM
com.ztspeech.simutalk2.R$id: int radioMan
com.ztspeech.simutalk2.R$id: int radioS
com.ztspeech.simutalk2.R$id: int radioWoman
com.ztspeech.simutalk2.R$id: int rbNetState
com.ztspeech.simutalk2.R$id: int record_layout
com.ztspeech.simutalk2.R$id: int relativeLayout1
com.ztspeech.simutalk2.R$id: int relativeLayout2
com.ztspeech.simutalk2.R$id: int renren_album_name_value
com.ztspeech.simutalk2.R$id: int renren_count
com.ztspeech.simutalk2.R$id: int renren_count_msg
com.ztspeech.simutalk2.R$id: int renren_sdk_album_description_label
com.ztspeech.simutalk2.R$id: int renren_sdk_album_description_value
com.ztspeech.simutalk2.R$id: int renren_sdk_album_location_label
com.ztspeech.simutalk2.R$id: int renren_sdk_album_location_value
com.ztspeech.simutalk2.R$id: int renren_sdk_album_name_label
com.ztspeech.simutalk2.R$id: int renren_sdk_album_name_value
com.ztspeech.simutalk2.R$id: int renren_sdk_album_visible_label
com.ztspeech.simutalk2.R$id: int renren_sdk_album_visible_value
com.ztspeech.simutalk2.R$id: int renren_sdk_create_album_cancel
com.ztspeech.simutalk2.R$id: int renren_sdk_create_album_submit
com.ztspeech.simutalk2.R$id: int renren_sdk_login_confirm_button
com.ztspeech.simutalk2.R$id: int renren_sdk_login_entry_password
com.ztspeech.simutalk2.R$id: int renren_sdk_login_entry_username
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_amount
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_bid
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_des
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_order_num
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_repair_button
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_status
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_item_time
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_logo_image_view
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_order_list
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_overview_text_view
com.ztspeech.simutalk2.R$id: int renren_sdk_pay_repair_remove_all_button
com.ztspeech.simutalk2.R$id: int renren_sdk_photo_caption_counter
com.ztspeech.simutalk2.R$id: int renren_sdk_photo_caption_value
com.ztspeech.simutalk2.R$id: int renren_sdk_photo_view_image
com.ztspeech.simutalk2.R$id: int renren_sdk_profile_name
com.ztspeech.simutalk2.R$id: int renren_sdk_profile_photo
com.ztspeech.simutalk2.R$id: int renren_sdk_status_cancel
com.ztspeech.simutalk2.R$id: int renren_sdk_status_ch_counter
com.ztspeech.simutalk2.R$id: int renren_sdk_status_edit_text
com.ztspeech.simutalk2.R$id: int renren_sdk_status_pub_buttons
com.ztspeech.simutalk2.R$id: int renren_sdk_status_publish
com.ztspeech.simutalk2.R$id: int renren_sdk_status_user_info
com.ztspeech.simutalk2.R$id: int renren_sdk_title_logo
com.ztspeech.simutalk2.R$id: int renren_sdk_title_text
com.ztspeech.simutalk2.R$id: int renren_sdk_upload_photo_cancel
com.ztspeech.simutalk2.R$id: int renren_sdk_upload_photo_submit
com.ztspeech.simutalk2.R$id: int rlLeft
com.ztspeech.simutalk2.R$id: int rlMiddle
com.ztspeech.simutalk2.R$id: int rlRight
com.ztspeech.simutalk2.R$id: int saveBtn
com.ztspeech.simutalk2.R$id: int sbTTSspeed
com.ztspeech.simutalk2.R$id: int scrollView1
com.ztspeech.simutalk2.R$id: int select_bold
com.ztspeech.simutalk2.R$id: int select_language
com.ztspeech.simutalk2.R$id: int select_sound
com.ztspeech.simutalk2.R$id: int sina_count
com.ztspeech.simutalk2.R$id: int sina_count_msg
com.ztspeech.simutalk2.R$id: int slow
com.ztspeech.simutalk2.R$id: int smsList
com.ztspeech.simutalk2.R$id: int smsname
com.ztspeech.simutalk2.R$id: int smsnumber
com.ztspeech.simutalk2.R$id: int softTime
com.ztspeech.simutalk2.R$id: int spCategroy
com.ztspeech.simutalk2.R$id: int spChild
com.ztspeech.simutalk2.R$id: int tab1
com.ztspeech.simutalk2.R$id: int tab2
com.ztspeech.simutalk2.R$id: int tencent_count
com.ztspeech.simutalk2.R$id: int tencent_count_msg
com.ztspeech.simutalk2.R$id: int textAboutUrl
com.ztspeech.simutalk2.R$id: int textSpeak
com.ztspeech.simutalk2.R$id: int textTrans
com.ztspeech.simutalk2.R$id: int textView1
com.ztspeech.simutalk2.R$id: int textView2
com.ztspeech.simutalk2.R$id: int text_status
com.ztspeech.simutalk2.R$id: int title
com.ztspeech.simutalk2.R$id: int titleLayout
com.ztspeech.simutalk2.R$id: int tvAbout
com.ztspeech.simutalk2.R$id: int tvAskCount
com.ztspeech.simutalk2.R$id: int tvAskTime
com.ztspeech.simutalk2.R$id: int tvCategroy
com.ztspeech.simutalk2.R$id: int tvChild
com.ztspeech.simutalk2.R$id: int tvChinese
com.ztspeech.simutalk2.R$id: int tvCount
com.ztspeech.simutalk2.R$id: int tvDistance
com.ztspeech.simutalk2.R$id: int tvEnglish
com.ztspeech.simutalk2.R$id: int tvFishCount
com.ztspeech.simutalk2.R$id: int tvFooter
com.ztspeech.simutalk2.R$id: int tvFriendNewsCount
com.ztspeech.simutalk2.R$id: int tvFunction
com.ztspeech.simutalk2.R$id: int tvItemText
com.ztspeech.simutalk2.R$id: int tvItemText2
com.ztspeech.simutalk2.R$id: int tvLen
com.ztspeech.simutalk2.R$id: int tvLine
com.ztspeech.simutalk2.R$id: int tvLine2
com.ztspeech.simutalk2.R$id: int tvMessageTitle
com.ztspeech.simutalk2.R$id: int tvMsgCount
com.ztspeech.simutalk2.R$id: int tvMsgState
com.ztspeech.simutalk2.R$id: int tvMsgText
com.ztspeech.simutalk2.R$id: int tvMsgTime
com.ztspeech.simutalk2.R$id: int tvName
com.ztspeech.simutalk2.R$id: int tvName1
com.ztspeech.simutalk2.R$id: int tvName2
com.ztspeech.simutalk2.R$id: int tvNoResult
com.ztspeech.simutalk2.R$id: int tvQANewsCount
com.ztspeech.simutalk2.R$id: int tvQuestionTitle
com.ztspeech.simutalk2.R$id: int tvShow
com.ztspeech.simutalk2.R$id: int tvSimple
com.ztspeech.simutalk2.R$id: int tvSkinName
com.ztspeech.simutalk2.R$id: int tvSolveCount
com.ztspeech.simutalk2.R$id: int tvTaskCount
com.ztspeech.simutalk2.R$id: int tvTaskCountTmp
com.ztspeech.simutalk2.R$id: int tvText
com.ztspeech.simutalk2.R$id: int tvTitle
com.ztspeech.simutalk2.R$id: int tvUserName
com.ztspeech.simutalk2.R$id: int tvWords
com.ztspeech.simutalk2.R$id: int tv_word
com.ztspeech.simutalk2.R$id: int viewFlipper1
com.ztspeech.simutalk2.R$id: int webview
com.ztspeech.simutalk2.R$id: int wloadinganim
com.ztspeech.simutalk2.R$id: R$id()
com.ztspeech.simutalk2.R$layout
com.ztspeech.simutalk2.R$layout: int activity_about
com.ztspeech.simutalk2.R$layout: int activity_ask_question
com.ztspeech.simutalk2.R$layout: int activity_chat
com.ztspeech.simutalk2.R$layout: int activity_find_user
com.ztspeech.simutalk2.R$layout: int activity_friend
com.ztspeech.simutalk2.R$layout: int activity_getquestion
com.ztspeech.simutalk2.R$layout: int activity_help
com.ztspeech.simutalk2.R$layout: int activity_interaction
com.ztspeech.simutalk2.R$layout: int activity_interpret
com.ztspeech.simutalk2.R$layout: int activity_kouyirecord
com.ztspeech.simutalk2.R$layout: int activity_main
com.ztspeech.simutalk2.R$layout: int activity_main_tab
com.ztspeech.simutalk2.R$layout: int activity_message
com.ztspeech.simutalk2.R$layout: int activity_msg_group_list
com.ztspeech.simutalk2.R$layout: int activity_result
com.ztspeech.simutalk2.R$layout: int activity_search
com.ztspeech.simutalk2.R$layout: int activity_setskin
com.ztspeech.simutalk2.R$layout: int activity_solve_q
com.ztspeech.simutalk2.R$layout: int activity_solve_question
com.ztspeech.simutalk2.R$layout: int activity_user_state
com.ztspeech.simutalk2.R$layout: int activity_userpropose
com.ztspeech.simutalk2.R$layout: int activity_waiting
com.ztspeech.simutalk2.R$layout: int activity_whitebord
com.ztspeech.simutalk2.R$layout: int activity_words
com.ztspeech.simutalk2.R$layout: int activity_words_item
com.ztspeech.simutalk2.R$layout: int activity_words_simple
com.ztspeech.simutalk2.R$layout: int dialog_layout_view
com.ztspeech.simutalk2.R$layout: int gdv_interpret_item
com.ztspeech.simutalk2.R$layout: int head_protrait
com.ztspeech.simutalk2.R$layout: int interpret_view
com.ztspeech.simutalk2.R$layout: int item_finduser
com.ztspeech.simutalk2.R$layout: int item_friend
com.ztspeech.simutalk2.R$layout: int item_message
com.ztspeech.simutalk2.R$layout: int item_questions
com.ztspeech.simutalk2.R$layout: int item_solvequestion
com.ztspeech.simutalk2.R$layout: int kaixinloginwithoutwebview
com.ztspeech.simutalk2.R$layout: int list_layout
com.ztspeech.simutalk2.R$layout: int list_layout_item
com.ztspeech.simutalk2.R$layout: int listener
com.ztspeech.simutalk2.R$layout: int listview_categroy_item
com.ztspeech.simutalk2.R$layout: int listview_child_item
com.ztspeech.simutalk2.R$layout: int listview_footer
com.ztspeech.simutalk2.R$layout: int listview_item_interpret
com.ztspeech.simutalk2.R$layout: int listview_item_simple
com.ztspeech.simutalk2.R$layout: int listview_simple
com.ztspeech.simutalk2.R$layout: int listview_skin_item
com.ztspeech.simutalk2.R$layout: int listview_words_detailitem
com.ztspeech.simutalk2.R$layout: int listview_words_simpleitem
com.ztspeech.simutalk2.R$layout: int login
com.ztspeech.simutalk2.R$layout: int pop_actionmenu
com.ztspeech.simutalk2.R$layout: int pop_editweibocontent
com.ztspeech.simutalk2.R$layout: int pop_interpret_action
com.ztspeech.simutalk2.R$layout: int pop_interpret_changelanguage
com.ztspeech.simutalk2.R$layout: int pop_interpret_more
com.ztspeech.simutalk2.R$layout: int pop_qa_msg
com.ztspeech.simutalk2.R$layout: int pop_recognizer_view
com.ztspeech.simutalk2.R$layout: int recognizer_view
com.ztspeech.simutalk2.R$layout: int renren_sdk_create_album
com.ztspeech.simutalk2.R$layout: int renren_sdk_login_entry
com.ztspeech.simutalk2.R$layout: int renren_sdk_pay_repair
com.ztspeech.simutalk2.R$layout: int renren_sdk_pay_repair_item
com.ztspeech.simutalk2.R$layout: int renren_sdk_status_pub
com.ztspeech.simutalk2.R$layout: int renren_sdk_upload_photo
com.ztspeech.simutalk2.R$layout: int setting_assist
com.ztspeech.simutalk2.R$layout: int setting_display
com.ztspeech.simutalk2.R$layout: int setting_front_size
com.ztspeech.simutalk2.R$layout: int setting_help
com.ztspeech.simutalk2.R$layout: int setting_layout
com.ztspeech.simutalk2.R$layout: int setting_personal_infos
com.ztspeech.simutalk2.R$layout: int setting_trans_language
com.ztspeech.simutalk2.R$layout: int setting_translate
com.ztspeech.simutalk2.R$layout: int setting_tts
com.ztspeech.simutalk2.R$layout: int setting_tts_sound
com.ztspeech.simutalk2.R$layout: int setting_ttsspeed
com.ztspeech.simutalk2.R$layout: int setting_user_nickname
com.ztspeech.simutalk2.R$layout: int setting_weibo_count
com.ztspeech.simutalk2.R$layout: int titlebar
com.ztspeech.simutalk2.R$layout: int weibo_binder_count
com.ztspeech.simutalk2.R$layout: R$layout()
com.ztspeech.simutalk2.R$menu
com.ztspeech.simutalk2.R$menu: int activity_main
com.ztspeech.simutalk2.R$menu: R$menu()
com.ztspeech.simutalk2.R$raw
com.ztspeech.simutalk2.R$raw: int dictionary0
com.ztspeech.simutalk2.R$raw: int dictionary1
com.ztspeech.simutalk2.R$raw: int dictionary2
com.ztspeech.simutalk2.R$raw: int dictionary3
com.ztspeech.simutalk2.R$raw: int dictionary4
com.ztspeech.simutalk2.R$raw: int directtrans
com.ztspeech.simutalk2.R$raw: int photo1
com.ztspeech.simutalk2.R$raw: int show_results
com.ztspeech.simutalk2.R$raw: int stop
com.ztspeech.simutalk2.R$raw: R$raw()
com.ztspeech.simutalk2.R$string
com.ztspeech.simutalk2.R$string: int CANCEL_Txt
com.ztspeech.simutalk2.R$string: int OK_Txt
com.ztspeech.simutalk2.R$string: int activity_sample_code
com.ztspeech.simutalk2.R$string: int app_name
com.ztspeech.simutalk2.R$string: int app_run_tip
com.ztspeech.simutalk2.R$string: int bindercount
com.ztspeech.simutalk2.R$string: int binderfailed
com.ztspeech.simutalk2.R$string: int bindersuccess
com.ztspeech.simutalk2.R$string: int btnToHost
com.ztspeech.simutalk2.R$string: int btn_close
com.ztspeech.simutalk2.R$string: int btn_set_name
com.ztspeech.simutalk2.R$string: int btn_trans
com.ztspeech.simutalk2.R$string: int cancel
com.ztspeech.simutalk2.R$string: int cancelnet
com.ztspeech.simutalk2.R$string: int cancle_oauth
com.ztspeech.simutalk2.R$string: int categroy_collector
com.ztspeech.simutalk2.R$string: int categroy_record
com.ztspeech.simutalk2.R$string: int confirm
com.ztspeech.simutalk2.R$string: int database_currentversions
com.ztspeech.simutalk2.R$string: int database_maxversions
com.ztspeech.simutalk2.R$string: int database_minversions
com.ztspeech.simutalk2.R$string: int dbInit_Successfull
com.ztspeech.simutalk2.R$string: int dbInit_fail
com.ztspeech.simutalk2.R$string: int de_kaixin_binder
com.ztspeech.simutalk2.R$string: int de_renren_binder
com.ztspeech.simutalk2.R$string: int de_sina_binder
com.ztspeech.simutalk2.R$string: int de_sohu_binder
com.ztspeech.simutalk2.R$string: int de_tencent_binder
com.ztspeech.simutalk2.R$string: int dictionary_noresult
com.ztspeech.simutalk2.R$string: int dictionary_result_title
com.ztspeech.simutalk2.R$string: int downloading
com.ztspeech.simutalk2.R$string: int entryvalues_list_preference_default
com.ztspeech.simutalk2.R$string: int errcode_cancel
com.ztspeech.simutalk2.R$string: int errcode_deny
com.ztspeech.simutalk2.R$string: int errcode_success
com.ztspeech.simutalk2.R$string: int errcode_unknown
com.ztspeech.simutalk2.R$string: int female
com.ztspeech.simutalk2.R$string: int fenxiang
com.ztspeech.simutalk2.R$string: int file_host_ip
com.ztspeech.simutalk2.R$string: int fontsizevalues_list_preference_default
com.ztspeech.simutalk2.R$string: int friend_delete_tip
com.ztspeech.simutalk2.R$string: int getting_logged_in_user
com.ztspeech.simutalk2.R$string: int help_title
com.ztspeech.simutalk2.R$string: int help_url
com.ztspeech.simutalk2.R$string: int hint
com.ztspeech.simutalk2.R$string: int host_ch_update
com.ztspeech.simutalk2.R$string: int host_ip
com.ztspeech.simutalk2.R$string: int host_wan_net
com.ztspeech.simutalk2.R$string: int image_select_title
com.ztspeech.simutalk2.R$string: int is_exit
com.ztspeech.simutalk2.R$string: int json_upload_photo_result
com.ztspeech.simutalk2.R$string: int kaixin_binder
com.ztspeech.simutalk2.R$string: int lbl_help_title_text
com.ztspeech.simutalk2.R$string: int lbl_set_name
com.ztspeech.simutalk2.R$string: int lisview_footer_textview
com.ztspeech.simutalk2.R$string: int loading
com.ztspeech.simutalk2.R$string: int loading_photo
com.ztspeech.simutalk2.R$string: int main_menu_exit
com.ztspeech.simutalk2.R$string: int main_msg_tip
com.ztspeech.simutalk2.R$string: int main_tab_ck
com.ztspeech.simutalk2.R$string: int main_tab_fy
com.ztspeech.simutalk2.R$string: int main_tab_qa
com.ztspeech.simutalk2.R$string: int main_tab_set
com.ztspeech.simutalk2.R$string: int main_tts_cancel
com.ztspeech.simutalk2.R$string: int main_tts_error
com.ztspeech.simutalk2.R$string: int male
com.ztspeech.simutalk2.R$string: int menu_settings
com.ztspeech.simutalk2.R$string: int offline
com.ztspeech.simutalk2.R$string: int online
com.ztspeech.simutalk2.R$string: int playererror
com.ztspeech.simutalk2.R$string: int pop_intrpt_bad
com.ztspeech.simutalk2.R$string: int pop_intrpt_copy
com.ztspeech.simutalk2.R$string: int pop_intrpt_full
com.ztspeech.simutalk2.R$string: int pop_intrpt_good
com.ztspeech.simutalk2.R$string: int pop_intrpt_more
com.ztspeech.simutalk2.R$string: int post_record_empty_content
com.ztspeech.simutalk2.R$string: int post_record_fail
com.ztspeech.simutalk2.R$string: int post_record_success
com.ztspeech.simutalk2.R$string: int qa_add_friend_fail
com.ztspeech.simutalk2.R$string: int qa_add_friend_ok
com.ztspeech.simutalk2.R$string: int qa_ask_btn_cancel
com.ztspeech.simutalk2.R$string: int qa_ask_btn_post
com.ztspeech.simutalk2.R$string: int qa_ask_count
com.ztspeech.simutalk2.R$string: int qa_ask_input_tip
com.ztspeech.simutalk2.R$string: int qa_ask_title
com.ztspeech.simutalk2.R$string: int qa_btn_ask
com.ztspeech.simutalk2.R$string: int qa_btn_fish
com.ztspeech.simutalk2.R$string: int qa_btn_solve
com.ztspeech.simutalk2.R$string: int qa_lable_ask
com.ztspeech.simutalk2.R$string: int qa_lable_solve
com.ztspeech.simutalk2.R$string: int qa_msg_ask_off_title
com.ztspeech.simutalk2.R$string: int qa_msg_ask_title
com.ztspeech.simutalk2.R$string: int qa_msg_btn_add_friend
com.ztspeech.simutalk2.R$string: int qa_msg_download_error
com.ztspeech.simutalk2.R$string: int qa_msg_firend_title
com.ztspeech.simutalk2.R$string: int qa_msg_menu_clear
com.ztspeech.simutalk2.R$string: int qa_msg_solve_off_title
com.ztspeech.simutalk2.R$string: int qa_msg_solve_title
com.ztspeech.simutalk2.R$string: int qa_solve_count
com.ztspeech.simutalk2.R$string: int qa_solve_giveup
com.ztspeech.simutalk2.R$string: int qa_solve_solve
com.ztspeech.simutalk2.R$string: int qa_solve_title
com.ztspeech.simutalk2.R$string: int qa_tab_hylb
com.ztspeech.simutalk2.R$string: int qa_tab_wdjl
com.ztspeech.simutalk2.R$string: int qa_tab_wdxx
com.ztspeech.simutalk2.R$string: int qa_user_name
com.ztspeech.simutalk2.R$string: int renren_binder
com.ztspeech.simutalk2.R$string: int renren_sdk_album_description_hint
com.ztspeech.simutalk2.R$string: int renren_sdk_album_description_label
com.ztspeech.simutalk2.R$string: int renren_sdk_album_location_hint
com.ztspeech.simutalk2.R$string: int renren_sdk_album_location_label
com.ztspeech.simutalk2.R$string: int renren_sdk_album_name_hint
com.ztspeech.simutalk2.R$string: int renren_sdk_album_name_label
com.ztspeech.simutalk2.R$string: int renren_sdk_album_visible_label
com.ztspeech.simutalk2.R$string: int renren_sdk_cancel
com.ztspeech.simutalk2.R$string: int renren_sdk_login
com.ztspeech.simutalk2.R$string: int renren_sdk_long_status
com.ztspeech.simutalk2.R$string: int renren_sdk_mobile_album
com.ztspeech.simutalk2.R$string: int renren_sdk_object_init_error
com.ztspeech.simutalk2.R$string: int renren_sdk_password
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_btn_text
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_order_amount
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_order_bid
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_order_des
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_order_number
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_order_status
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_order_time
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_overview
com.ztspeech.simutalk2.R$string: int renren_sdk_pay_repair_remove_all
com.ztspeech.simutalk2.R$string: int renren_sdk_photo_caption_hint
com.ztspeech.simutalk2.R$string: int renren_sdk_publish_null_status_alert
com.ztspeech.simutalk2.R$string: int renren_sdk_publish_status_hint
com.ztspeech.simutalk2.R$string: int renren_sdk_status_cancel
com.ztspeech.simutalk2.R$string: int renren_sdk_status_hint
com.ztspeech.simutalk2.R$string: int renren_sdk_status_publish
com.ztspeech.simutalk2.R$string: int renren_sdk_status_publish_failed
com.ztspeech.simutalk2.R$string: int renren_sdk_status_publish_success
com.ztspeech.simutalk2.R$string: int renren_sdk_submit
com.ztspeech.simutalk2.R$string: int renren_sdk_title_label
com.ztspeech.simutalk2.R$string: int renren_sdk_title_upload_label
com.ztspeech.simutalk2.R$string: int renren_sdk_upload
com.ztspeech.simutalk2.R$string: int renren_sdk_upload_photo_change_user
com.ztspeech.simutalk2.R$string: int renren_sdk_username
com.ztspeech.simutalk2.R$string: int search_chAndEn
com.ztspeech.simutalk2.R$string: int setHeadImg
com.ztspeech.simutalk2.R$string: int setNickName
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_autojump
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_autoplay
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_longclickrecord
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_run
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_translate
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_translatetalk
com.ztspeech.simutalk2.R$string: int setting_checkboxpreference_tts
com.ztspeech.simutalk2.R$string: int setting_edittextpreference_nikename
com.ztspeech.simutalk2.R$string: int setting_listpreference_choselanguage
com.ztspeech.simutalk2.R$string: int setting_listpreference_fontsize
com.ztspeech.simutalk2.R$string: int setting_listpreference_ttssex
com.ztspeech.simutalk2.R$string: int setting_listpreference_ttsspeed
com.ztspeech.simutalk2.R$string: int share_text
com.ztspeech.simutalk2.R$string: int sharedfailed
com.ztspeech.simutalk2.R$string: int sina_binder
com.ztspeech.simutalk2.R$string: int sohu_binder
com.ztspeech.simutalk2.R$string: int storage_image
com.ztspeech.simutalk2.R$string: int takePhotos
com.ztspeech.simutalk2.R$string: int task_cancel_auth_success
com.ztspeech.simutalk2.R$string: int task_failed
com.ztspeech.simutalk2.R$string: int task_failed_arg_err
com.ztspeech.simutalk2.R$string: int task_failed_class_cast_err
com.ztspeech.simutalk2.R$string: int task_failed_encoder_err
com.ztspeech.simutalk2.R$string: int task_failed_json_parse_err
com.ztspeech.simutalk2.R$string: int task_failed_malformed_url_err
com.ztspeech.simutalk2.R$string: int task_failed_network_err
com.ztspeech.simutalk2.R$string: int tencent_binder
com.ztspeech.simutalk2.R$string: int tencentsharedfailed
com.ztspeech.simutalk2.R$string: int tip
com.ztspeech.simutalk2.R$string: int title_getfriendlist
com.ztspeech.simutalk2.R$string: int title_getuserinfo
com.ztspeech.simutalk2.R$string: int title_postrecord
com.ztspeech.simutalk2.R$string: int trans_btn_cancel
com.ztspeech.simutalk2.R$string: int trans_btn_record
com.ztspeech.simutalk2.R$string: int trans_share_clear
com.ztspeech.simutalk2.R$string: int trans_share_collect
com.ztspeech.simutalk2.R$string: int trans_share_copy
com.ztspeech.simutalk2.R$string: int trans_share_delete
com.ztspeech.simutalk2.R$string: int trans_share_fullscreen
com.ztspeech.simutalk2.R$string: int trans_share_send
com.ztspeech.simutalk2.R$string: int trans_share_title
com.ztspeech.simutalk2.R$string: int trans_userpropose_str
com.ztspeech.simutalk2.R$string: int trans_userpropose_title
com.ztspeech.simutalk2.R$string: int tv_nofriend
com.ztspeech.simutalk2.R$string: int tv_nouserinfo
com.ztspeech.simutalk2.R$string: int unableToGetResource
com.ztspeech.simutalk2.R$string: int unbinderkaixin
com.ztspeech.simutalk2.R$string: int unbinderrenren
com.ztspeech.simutalk2.R$string: int unbindersina
com.ztspeech.simutalk2.R$string: int unbindertencent
com.ztspeech.simutalk2.R$string: int uploading
com.ztspeech.simutalk2.R$string: int userGiveUpQuestion
com.ztspeech.simutalk2.R$string: int userpropose_success
com.ztspeech.simutalk2.R$string: int voice_input_hint
com.ztspeech.simutalk2.R$string: int waiting_title
com.ztspeech.simutalk2.R$string: int waitting_btn_cancel
com.ztspeech.simutalk2.R$string: int weibo_contentlength
com.ztspeech.simutalk2.R$string: R$string()
com.ztspeech.simutalk2.R$style
com.ztspeech.simutalk2.R$style: int AppTheme
com.ztspeech.simutalk2.R$style: int CustomWindowTitleBackground
com.ztspeech.simutalk2.R$style: int PopupAnimation
com.ztspeech.simutalk2.R$style: int activityNoTitlebar
com.ztspeech.simutalk2.R$style: int activityNoTitlebarFullScreen
com.ztspeech.simutalk2.R$style: int activityTitlebar
com.ztspeech.simutalk2.R$style: int dialog
com.ztspeech.simutalk2.R$style: int dialog_button
com.ztspeech.simutalk2.R$style: int dialogw
com.ztspeech.simutalk2.R$style: int headActivityTitlebar
com.ztspeech.simutalk2.R$style: int listview
com.ztspeech.simutalk2.R$style: int mydialog
com.ztspeech.simutalk2.R$style: int perference_set_activity
com.ztspeech.simutalk2.R$style: int popMoreAnimation
com.ztspeech.simutalk2.R$style: R$style()
com.ztspeech.simutalk2.R$xml
com.ztspeech.simutalk2.R$xml: int setting_preference
com.ztspeech.simutalk2.R$xml: R$xml()
com.ztspeech.simutalk2.data.AskQuestionTable
com.ztspeech.simutalk2.data.AskQuestionTable: AskQuestionTable()
com.ztspeech.simutalk2.data.AskQuestionTable: com.ztspeech.simutalk2.data.AskQuestionTable getInstanse()
com.ztspeech.simutalk2.data.AskQuestionTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.AskQuestionTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.AskTaskList
com.ztspeech.simutalk2.data.AskTaskList: AskTaskList()
com.ztspeech.simutalk2.data.AskTaskList: int getTaskCount()
com.ztspeech.simutalk2.data.AskTaskList: void AddTask(cn.ac.ia.directtrans.json.AskTask)
com.ztspeech.simutalk2.data.AskTaskList: void setTaskList(com.ztspeech.simutalk2.data.AskTaskList)
com.ztspeech.simutalk2.data.AskTaskList: void clear()
com.ztspeech.simutalk2.data.AskTaskList: void delTask(cn.ac.ia.directtrans.json.AskTask)
com.ztspeech.simutalk2.data.AskTaskList: void delTask(long)
com.ztspeech.simutalk2.data.AskTaskList: void deleteTopTask()
com.ztspeech.simutalk2.data.AskTaskList: boolean isChanged()
com.ztspeech.simutalk2.data.AskTaskList: void setChanged(boolean)
com.ztspeech.simutalk2.data.AskTaskList: cn.ac.ia.directtrans.json.AskTask putTaskId()
com.ztspeech.simutalk2.data.DBTable
com.ztspeech.simutalk2.data.DBTable: java.lang.String tableName
com.ztspeech.simutalk2.data.DBTable: android.database.sqlite.SQLiteOpenHelper database
com.ztspeech.simutalk2.data.DBTable: DBTable()
com.ztspeech.simutalk2.data.DBTable: void setDataBase(android.database.sqlite.SQLiteOpenHelper)
com.ztspeech.simutalk2.data.DBTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.DBTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.DBTable: android.database.sqlite.SQLiteDatabase getReadableDatabase()
com.ztspeech.simutalk2.data.DBTable: void clearTable()
com.ztspeech.simutalk2.data.DBTable: android.database.sqlite.SQLiteDatabase getWritableDatabase()
com.ztspeech.simutalk2.data.DataListObejct
com.ztspeech.simutalk2.data.DataListObejct: java.util.ArrayList items
com.ztspeech.simutalk2.data.DataListObejct: DataListObejct()
com.ztspeech.simutalk2.data.DataListObejct: com.ztspeech.simutalk2.data.DataObject get(int)
com.ztspeech.simutalk2.data.DataListObejct: boolean set(int,com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.data.DataListObejct: int size()
com.ztspeech.simutalk2.data.DataListObejct: void clear()
com.ztspeech.simutalk2.data.DataListObejct: void add(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.data.DataListObejct: boolean delete(long)
com.ztspeech.simutalk2.data.DataListObejct: com.ztspeech.simutalk2.data.DataObject findById(long)
com.ztspeech.simutalk2.data.DataObject
com.ztspeech.simutalk2.data.DataObject: long id
com.ztspeech.simutalk2.data.DataObject: int type
com.ztspeech.simutalk2.data.DataObject: java.lang.String name
com.ztspeech.simutalk2.data.DataObject: DataObject()
com.ztspeech.simutalk2.data.DataObject: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.data.DoStream
com.ztspeech.simutalk2.data.DoStream: DoStream()
com.ztspeech.simutalk2.data.DoStream: java.io.ByteArrayInputStream getCopy(java.io.InputStream)
com.ztspeech.simutalk2.data.FileUtils
com.ztspeech.simutalk2.data.FileUtils: java.lang.String SDPATH
com.ztspeech.simutalk2.data.FileUtils: com.ztspeech.simutalk2.data.FileUtils getInstanse()
com.ztspeech.simutalk2.data.FileUtils: FileUtils()
com.ztspeech.simutalk2.data.FileUtils: java.io.File createSDFile(java.lang.String)
com.ztspeech.simutalk2.data.FileUtils: java.io.File createSDDir(java.lang.String)
com.ztspeech.simutalk2.data.FileUtils: java.io.File openSDFile(java.lang.String)
com.ztspeech.simutalk2.data.FileUtils: boolean isFileExist(java.lang.String)
com.ztspeech.simutalk2.data.FileUtils: java.io.File writeSD(java.lang.String,java.lang.String,java.io.InputStream)
com.ztspeech.simutalk2.data.FriendData
com.ztspeech.simutalk2.data.FriendData: cn.ac.ia.directtrans.json.UserState user
com.ztspeech.simutalk2.data.FriendData: long linkId
com.ztspeech.simutalk2.data.FriendData: java.lang.String photoId
com.ztspeech.simutalk2.data.FriendData: boolean selected
com.ztspeech.simutalk2.data.FriendData: boolean showSelected
com.ztspeech.simutalk2.data.FriendData: FriendData(cn.ac.ia.directtrans.json.UserState)
com.ztspeech.simutalk2.data.FriendDataList
com.ztspeech.simutalk2.data.FriendDataList: FriendDataList()
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.FriendDataList getInstance()
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.FriendData findByUserId(long)
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.FriendData deleteByUserId(int)
com.ztspeech.simutalk2.data.FriendDataList: void add(com.ztspeech.simutalk2.data.FriendData)
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.FriendData get(int)
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.FriendData findById(long)
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.FriendData findByLinkId(long)
com.ztspeech.simutalk2.data.FriendDataList: boolean isChanged()
com.ztspeech.simutalk2.data.FriendDataList: void setChanged(boolean)
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.DataObject findById(long)
com.ztspeech.simutalk2.data.FriendDataList: com.ztspeech.simutalk2.data.DataObject get(int)
com.ztspeech.simutalk2.data.FriendFindData
com.ztspeech.simutalk2.data.FriendFindData: java.lang.String DATA
com.ztspeech.simutalk2.data.FriendFindData: com.ztspeech.simutalk2.data.UserInfo user
com.ztspeech.simutalk2.data.FriendFindData: FriendFindData(com.ztspeech.simutalk2.data.UserInfo)
com.ztspeech.simutalk2.data.FriendFindDataList
com.ztspeech.simutalk2.data.FriendFindDataList: FriendFindDataList()
com.ztspeech.simutalk2.data.FriendFindDataList: com.ztspeech.simutalk2.data.FriendFindDataList getInstance()
com.ztspeech.simutalk2.data.FriendFindDataList: void add(com.ztspeech.simutalk2.data.FriendFindData)
com.ztspeech.simutalk2.data.FriendFindDataList: com.ztspeech.simutalk2.data.FriendFindData get(int)
com.ztspeech.simutalk2.data.FriendFindDataList: com.ztspeech.simutalk2.data.FriendFindData findById(long)
com.ztspeech.simutalk2.data.FriendFindDataList: com.ztspeech.simutalk2.data.DataObject findById(long)
com.ztspeech.simutalk2.data.FriendFindDataList: com.ztspeech.simutalk2.data.DataObject get(int)
com.ztspeech.simutalk2.data.GlobalData
com.ztspeech.simutalk2.data.GlobalData: GlobalData()
com.ztspeech.simutalk2.data.GlobalData: com.ztspeech.simutalk2.data.AskTaskList getAskInstance()
com.ztspeech.simutalk2.data.GlobalData: com.ztspeech.simutalk2.data.AskTaskList getFishInstance()
com.ztspeech.simutalk2.data.HistoryTable
com.ztspeech.simutalk2.data.HistoryTable: HistoryTable()
com.ztspeech.simutalk2.data.HistoryTable: com.ztspeech.simutalk2.data.HistoryTable getInstanse()
com.ztspeech.simutalk2.data.HistoryTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.HistoryTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.MeetingData
com.ztspeech.simutalk2.data.MeetingData: com.ztspeech.simutalk2.data.FriendDataList friendList
com.ztspeech.simutalk2.data.MeetingData: long owner
com.ztspeech.simutalk2.data.MeetingData: boolean isEdit
com.ztspeech.simutalk2.data.MeetingData: MeetingData(long,int,long,java.lang.String)
com.ztspeech.simutalk2.data.MeetingData: void setSelect(com.ztspeech.simutalk2.data.MeetingData)
com.ztspeech.simutalk2.data.MeetingData: void showSelect(boolean)
com.ztspeech.simutalk2.data.MeetingData: void clear()
com.ztspeech.simutalk2.data.MeetingData: void add(com.ztspeech.simutalk2.data.FriendData)
com.ztspeech.simutalk2.data.MeetingData: void updateFriendList()
com.ztspeech.simutalk2.data.MeetingData: void addSelectedData(com.ztspeech.simutalk2.data.MeetingData)
com.ztspeech.simutalk2.data.MeetingData: void edit(boolean)
com.ztspeech.simutalk2.data.MeetingDataList
com.ztspeech.simutalk2.data.MeetingDataList: MeetingDataList()
com.ztspeech.simutalk2.data.MeetingDataList: com.ztspeech.simutalk2.data.MeetingDataList getInstance()
com.ztspeech.simutalk2.data.MeetingDataList: com.ztspeech.simutalk2.data.MeetingData get(int)
com.ztspeech.simutalk2.data.MeetingDataList: com.ztspeech.simutalk2.data.MeetingData findById(long)
com.ztspeech.simutalk2.data.MeetingDataList: boolean isMeetingChanged()
com.ztspeech.simutalk2.data.MeetingDataList: boolean isFriendChanged()
com.ztspeech.simutalk2.data.MeetingDataList: void add(com.ztspeech.simutalk2.data.MeetingData)
com.ztspeech.simutalk2.data.MeetingDataList: void setFriendChanged(boolean)
com.ztspeech.simutalk2.data.MeetingDataList: void setMeetingChanged(boolean)
com.ztspeech.simutalk2.data.MeetingDataList: void setChanged(boolean)
com.ztspeech.simutalk2.data.MeetingDataList: com.ztspeech.simutalk2.data.DataObject findById(long)
com.ztspeech.simutalk2.data.MeetingDataList: com.ztspeech.simutalk2.data.DataObject get(int)
com.ztspeech.simutalk2.data.MessageTable
com.ztspeech.simutalk2.data.MessageTable: MessageTable()
com.ztspeech.simutalk2.data.MessageTable: com.ztspeech.simutalk2.data.MessageTable getInstanse()
com.ztspeech.simutalk2.data.MessageTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.MessageTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.MsgDataList
com.ztspeech.simutalk2.data.MsgDataList: java.lang.String text
com.ztspeech.simutalk2.data.MsgDataList: int senderId
com.ztspeech.simutalk2.data.MsgDataList: java.util.Date time
com.ztspeech.simutalk2.data.MsgDataList: boolean mIsChanged
com.ztspeech.simutalk2.data.MsgDataList: MsgDataList()
com.ztspeech.simutalk2.data.MsgDataList: int getOwnerId()
com.ztspeech.simutalk2.data.MsgDataList: com.ztspeech.simutalk2.data.MsgInfoData getFirstItem()
com.ztspeech.simutalk2.data.MsgDataList: com.ztspeech.simutalk2.data.MsgInfoData getNewData()
com.ztspeech.simutalk2.data.MsgDataList: void add(com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.data.MsgDataList: void udpateUserName(com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.data.MsgDataList: boolean isChanged()
com.ztspeech.simutalk2.data.MsgDataList: void setChanged(boolean)
com.ztspeech.simutalk2.data.MsgDataList: int getNewsCount()
com.ztspeech.simutalk2.data.MsgDataList: boolean setItemLookOver(long)
com.ztspeech.simutalk2.data.MsgDataList: void setAllLookOver()
com.ztspeech.simutalk2.data.MsgDataList: void getList(com.ztspeech.simutalk2.data.MsgDataList)
com.ztspeech.simutalk2.data.MsgDataList: com.ztspeech.simutalk2.data.MsgInfoData getLastMsg()
com.ztspeech.simutalk2.data.MsgDataList: com.ztspeech.simutalk2.data.MsgInfoData getLinkman(int)
com.ztspeech.simutalk2.data.MsgDataList: boolean setState(long,int)
com.ztspeech.simutalk2.data.MsgDataList: boolean closed()
com.ztspeech.simutalk2.data.MsgDataList: boolean enabled()
com.ztspeech.simutalk2.data.MsgDataList: void clearDB()
com.ztspeech.simutalk2.data.MsgDataList: boolean IsSolved()
com.ztspeech.simutalk2.data.MsgDataList: void updateState(cn.ac.ia.directtrans.json.QuestionInfo)
com.ztspeech.simutalk2.data.MsgDataList: com.ztspeech.simutalk2.data.MsgInfoData findMessage(int,long,java.util.Date,int)
com.ztspeech.simutalk2.data.MsgGroupList
com.ztspeech.simutalk2.data.MsgGroupList: java.lang.String PARAM_TYPE
com.ztspeech.simutalk2.data.MsgGroupList: java.lang.String PARAM_ID
com.ztspeech.simutalk2.data.MsgGroupList: MsgGroupList()
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgGroupList getInstance()
com.ztspeech.simutalk2.data.MsgGroupList: void addMsgToDB(com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgDataList addMsg(com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.data.MsgGroupList: boolean setDBLookover(long)
com.ztspeech.simutalk2.data.MsgGroupList: boolean delete(long)
com.ztspeech.simutalk2.data.MsgGroupList: void load()
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgDataList findAndNewItem(long,int)
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgDataList findItem(long,int)
com.ztspeech.simutalk2.data.MsgGroupList: void setMsgChanged(boolean)
com.ztspeech.simutalk2.data.MsgGroupList: boolean isMsgChanged()
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgDataList newItem(long,int)
com.ztspeech.simutalk2.data.MsgGroupList: void clearMsg()
com.ztspeech.simutalk2.data.MsgGroupList: boolean setItemLookOver(int)
com.ztspeech.simutalk2.data.MsgGroupList: boolean setState(long,int)
com.ztspeech.simutalk2.data.MsgGroupList: void clearMsgBySenderId(long)
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgDataList findItemBySenderId(int)
com.ztspeech.simutalk2.data.MsgGroupList: boolean setDBState(long,int)
com.ztspeech.simutalk2.data.MsgGroupList: int getNewsQACount()
com.ztspeech.simutalk2.data.MsgGroupList: int getFriendNewsCount()
com.ztspeech.simutalk2.data.MsgGroupList: int getNewsCount()
com.ztspeech.simutalk2.data.MsgGroupList: com.ztspeech.simutalk2.data.MsgInfoData findMessage(int,long,java.util.Date,int)
com.ztspeech.simutalk2.data.MsgGroupTable
com.ztspeech.simutalk2.data.MsgGroupTable: MsgGroupTable()
com.ztspeech.simutalk2.data.MsgGroupTable: com.ztspeech.simutalk2.data.MsgGroupTable getInstance()
com.ztspeech.simutalk2.data.MsgGroupTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.MsgGroupTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.MsgGroupTable: boolean addToDB(com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.data.MsgGroupTable: boolean setDBLookover(long)
com.ztspeech.simutalk2.data.MsgGroupTable: void deleteMsg(long)
com.ztspeech.simutalk2.data.MsgGroupTable: boolean setState(long,int)
com.ztspeech.simutalk2.data.MsgGroupTable: void clearDialog(java.lang.String)
com.ztspeech.simutalk2.data.MsgGroupTable: void clearMsgByUser(java.lang.String)
com.ztspeech.simutalk2.data.MsgGroupTable: void clearMsgBySenderId(long)
com.ztspeech.simutalk2.data.MsgGroupTable: void clearMsg()
com.ztspeech.simutalk2.data.MsgGroupTable: void deleteLookOverMsg(long)
com.ztspeech.simutalk2.data.MsgGroupTable: boolean setUserName(int,java.lang.String)
com.ztspeech.simutalk2.data.MsgInfoData
com.ztspeech.simutalk2.data.MsgInfoData: java.lang.String text
com.ztspeech.simutalk2.data.MsgInfoData: long linkId
com.ztspeech.simutalk2.data.MsgInfoData: int senderId
com.ztspeech.simutalk2.data.MsgInfoData: int sendToId
com.ztspeech.simutalk2.data.MsgInfoData: java.util.Date time
com.ztspeech.simutalk2.data.MsgInfoData: java.lang.String vId
com.ztspeech.simutalk2.data.MsgInfoData: int vLen
com.ztspeech.simutalk2.data.MsgInfoData: java.io.InputStream spx
com.ztspeech.simutalk2.data.MsgInfoData: int look_over
com.ztspeech.simutalk2.data.MsgInfoData: java.lang.String playText
com.ztspeech.simutalk2.data.MsgInfoData: int state
com.ztspeech.simutalk2.data.MsgInfoData: boolean hasVoice()
com.ztspeech.simutalk2.data.MsgInfoData: MsgInfoData()
com.ztspeech.simutalk2.data.MsgInfoData: java.io.InputStream getSpxStream(java.lang.String)
com.ztspeech.simutalk2.data.MsgInfoData: boolean isLookover()
com.ztspeech.simutalk2.data.MsgInfoData: void setLookover()
com.ztspeech.simutalk2.data.MsgInfoData: void initId(int)
com.ztspeech.simutalk2.data.MsgInfoData: long getNewId()
com.ztspeech.simutalk2.data.MsgInfoData: MsgInfoData(cn.ac.ia.directtrans.json.JsonMessage)
com.ztspeech.simutalk2.data.MsgInfoData: void setCmd(java.lang.String)
com.ztspeech.simutalk2.data.MsgInfoData: java.lang.String getCmd()
com.ztspeech.simutalk2.data.MsgInfoData: void setData(cn.ac.ia.directtrans.json.JsonMessage)
com.ztspeech.simutalk2.data.MsgInfoData$Define
com.ztspeech.simutalk2.data.MsgInfoData$Define: int TYPE_QA
com.ztspeech.simutalk2.data.MsgInfoData$Define: int TYPE_MSG
com.ztspeech.simutalk2.data.MsgInfoData$Define: java.lang.String MSG_ID
com.ztspeech.simutalk2.data.MsgInfoData$Define: int NEWS
com.ztspeech.simutalk2.data.MsgInfoData$Define: int LOOK_OVER
com.ztspeech.simutalk2.data.MsgInfoData$Define: MsgInfoData$Define(com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.data.QuestionTable
com.ztspeech.simutalk2.data.QuestionTable: QuestionTable()
com.ztspeech.simutalk2.data.QuestionTable: com.ztspeech.simutalk2.data.QuestionTable getInstanse()
com.ztspeech.simutalk2.data.QuestionTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.QuestionTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.SolveQuestionTable
com.ztspeech.simutalk2.data.SolveQuestionTable: boolean autoTTS
com.ztspeech.simutalk2.data.SolveQuestionTable: java.lang.String param0
com.ztspeech.simutalk2.data.SolveQuestionTable: java.util.Date loginTime
com.ztspeech.simutalk2.data.SolveQuestionTable: cn.ac.ia.directtrans.json.UserState state
com.ztspeech.simutalk2.data.SolveQuestionTable: SolveQuestionTable()
com.ztspeech.simutalk2.data.SolveQuestionTable: java.lang.String getUserName()
com.ztspeech.simutalk2.data.SolveQuestionTable: void setUserName(java.lang.String)
com.ztspeech.simutalk2.data.SolveQuestionTable: com.ztspeech.simutalk2.data.SolveQuestionTable getInstanse()
com.ztspeech.simutalk2.data.SolveQuestionTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.SolveQuestionTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.TextPlayer
com.ztspeech.simutalk2.data.TextPlayer: java.lang.String error
com.ztspeech.simutalk2.data.TextPlayer: java.lang.String cancel
com.ztspeech.simutalk2.data.TextPlayer: android.app.ProgressDialog loadingDialog
com.ztspeech.simutalk2.data.TextPlayer: boolean isLoadingData
com.ztspeech.simutalk2.data.TextPlayer: TextPlayer()
com.ztspeech.simutalk2.data.TextPlayer: com.ztspeech.simutalk2.data.TextPlayer getInstance()
com.ztspeech.simutalk2.data.TextPlayer: void setPopContext(android.content.Context)
com.ztspeech.simutalk2.data.TextPlayer: void stop()
com.ztspeech.simutalk2.data.TextPlayer: void cancel()
com.ztspeech.simutalk2.data.TextPlayer: boolean isPlaying()
com.ztspeech.simutalk2.data.TextPlayer: void init(android.content.Context)
com.ztspeech.simutalk2.data.TextPlayer: void play(java.io.InputStream)
com.ztspeech.simutalk2.data.TextPlayer: void playChinese(java.lang.String)
com.ztspeech.simutalk2.data.TextPlayer: void playEnglish(java.lang.String)
com.ztspeech.simutalk2.data.TextPlayer: void onTtsPlayEnd()
com.ztspeech.simutalk2.data.TextPlayer: void onTtsPlayError(int)
com.ztspeech.simutalk2.data.TextPlayer: void onTtsPlayLoadDataEnd()
com.ztspeech.simutalk2.data.TextPlayer: void onTtsPlayLoadDataStart()
com.ztspeech.simutalk2.data.TextPlayer: void toastMsg(java.lang.String,int)
com.ztspeech.simutalk2.data.TextPlayer: void onTtsPlayStart()
com.ztspeech.simutalk2.data.TextPlayer: void onCancel()
com.ztspeech.simutalk2.data.TransData
com.ztspeech.simutalk2.data.TransData: java.lang.String from
com.ztspeech.simutalk2.data.TransData: java.lang.String to
com.ztspeech.simutalk2.data.TransData: java.lang.String type
com.ztspeech.simutalk2.data.TransData: int id
com.ztspeech.simutalk2.data.TransData: TransData(int,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.data.TransData$Define
com.ztspeech.simutalk2.data.TransData$Define: java.lang.String TRANS_CH2EN
com.ztspeech.simutalk2.data.TransData$Define: java.lang.String TRANS_EN2CH
com.ztspeech.simutalk2.data.TransData$Define: java.lang.String FROM
com.ztspeech.simutalk2.data.TransData$Define: java.lang.String TO
com.ztspeech.simutalk2.data.TransData$Define: java.lang.String TYPE
com.ztspeech.simutalk2.data.TransData$Define: TransData$Define(com.ztspeech.simutalk2.data.TransData)
com.ztspeech.simutalk2.data.TransDataBase
com.ztspeech.simutalk2.data.TransDataBase: TransDataBase(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
com.ztspeech.simutalk2.data.TransDataBase: com.ztspeech.simutalk2.data.TransDataBase getInstance(android.content.Context,java.lang.String,int)
com.ztspeech.simutalk2.data.TransDataBase: TransDataBase(android.content.Context,java.lang.String,int)
com.ztspeech.simutalk2.data.TransDataBase: java.lang.String getUserDatabaseInittedResult()
com.ztspeech.simutalk2.data.TransDataBase: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.TransDataBase: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.TransDataBase: void addTable(com.ztspeech.simutalk2.data.DBTable)
com.ztspeech.simutalk2.data.TransDataList
com.ztspeech.simutalk2.data.TransDataList: TransDataList()
com.ztspeech.simutalk2.data.TransDataList: com.ztspeech.simutalk2.data.TransDataList getInstance()
com.ztspeech.simutalk2.data.TransDataList: com.ztspeech.simutalk2.data.TransData get(int)
com.ztspeech.simutalk2.data.TransDataList: int size()
com.ztspeech.simutalk2.data.TransDataList: void remove(int)
com.ztspeech.simutalk2.data.TransDataList: void clear(com.ztspeech.simutalk2.data.DBTable)
com.ztspeech.simutalk2.data.TransDataList: void add(com.ztspeech.simutalk2.data.TransData,com.ztspeech.simutalk2.data.DBTable)
com.ztspeech.simutalk2.data.TransDataList: void delete(com.ztspeech.simutalk2.data.DBTable,java.lang.Integer[])
com.ztspeech.simutalk2.data.TransDataList: void getScrollData(com.ztspeech.simutalk2.data.DBTable)
com.ztspeech.simutalk2.data.TransHistory
com.ztspeech.simutalk2.data.TransHistory: TransHistory()
com.ztspeech.simutalk2.data.TransHistory: com.ztspeech.simutalk2.data.TransHistory getInstance()
com.ztspeech.simutalk2.data.TransHistory: com.ztspeech.simutalk2.data.TransData get(int)
com.ztspeech.simutalk2.data.TransHistory: int size()
com.ztspeech.simutalk2.data.TransHistory: void remove(int)
com.ztspeech.simutalk2.data.TransHistory: void clear(com.ztspeech.simutalk2.data.HistoryTable)
com.ztspeech.simutalk2.data.TransHistory: void add(com.ztspeech.simutalk2.data.TransData,com.ztspeech.simutalk2.data.HistoryTable)
com.ztspeech.simutalk2.data.TransHistory: void delete(com.ztspeech.simutalk2.data.HistoryTable,java.lang.Integer[])
com.ztspeech.simutalk2.data.TransHistory: void getScrollData(com.ztspeech.simutalk2.data.HistoryTable)
com.ztspeech.simutalk2.data.TransTextTable
com.ztspeech.simutalk2.data.TransTextTable: java.lang.String LANGUAGE_CH
com.ztspeech.simutalk2.data.TransTextTable: java.lang.String LANGUAGE_EN
com.ztspeech.simutalk2.data.TransTextTable: java.lang.String LANGUAGE_LE
com.ztspeech.simutalk2.data.TransTextTable: java.lang.Integer record_id
com.ztspeech.simutalk2.data.TransTextTable: java.util.List mItems
com.ztspeech.simutalk2.data.TransTextTable: TransTextTable(java.lang.String)
com.ztspeech.simutalk2.data.TransTextTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.TransTextTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.TransTextTable: void initRecord_Id()
com.ztspeech.simutalk2.data.TransTextTable: void insert(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.data.TransTextTable: com.ztspeech.simutalk2.trans.speak.SpeakItemData get(int)
com.ztspeech.simutalk2.data.TransTextTable: void clear()
com.ztspeech.simutalk2.data.TransTextTable: int remove(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.data.TransTextTable: com.ztspeech.simutalk2.dictionary.entity.KouyiRecord getRecords(int)
com.ztspeech.simutalk2.data.TransTextTable: int size()
com.ztspeech.simutalk2.data.TransTextTable: void add(int,com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.data.TransTextTable: void update(int,com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.data.TransTextTable: void commont(int,com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.data.TransTextTable: void update(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.data.TransTextTable: void load()
com.ztspeech.simutalk2.data.TransTextTable: void delete(java.lang.Integer)
com.ztspeech.simutalk2.data.UserInfo
com.ztspeech.simutalk2.data.UserInfo: java.lang.String S2T_CH2EN
com.ztspeech.simutalk2.data.UserInfo: java.lang.String S2T_EN2CH
com.ztspeech.simutalk2.data.UserInfo: java.lang.String S2T_LETTER
com.ztspeech.simutalk2.data.UserInfo: java.lang.String appId
com.ztspeech.simutalk2.data.UserInfo: java.lang.String version
com.ztspeech.simutalk2.data.UserInfo: boolean autoTTS
com.ztspeech.simutalk2.data.UserInfo: java.lang.String s2sType
com.ztspeech.simutalk2.data.UserInfo: android.graphics.drawable.BitmapDrawable photo
com.ztspeech.simutalk2.data.UserInfo: java.lang.String param0
com.ztspeech.simutalk2.data.UserInfo: cn.ac.ia.directtrans.json.UserState state
com.ztspeech.simutalk2.data.UserInfo: boolean isChange
com.ztspeech.simutalk2.data.UserInfo: long loginTime
com.ztspeech.simutalk2.data.UserInfo: UserInfo()
com.ztspeech.simutalk2.data.UserInfo: java.lang.String getUserName()
com.ztspeech.simutalk2.data.UserInfo: void setUserName(java.lang.String)
com.ztspeech.simutalk2.data.UserInfo: com.ztspeech.simutalk2.data.UserInfo getInstanse()
com.ztspeech.simutalk2.data.UserInfo: boolean isLogin()
com.ztspeech.simutalk2.data.UserInfo: void setBackRun(boolean)
com.ztspeech.simutalk2.data.UserInfo: void setLClickRecord(boolean)
com.ztspeech.simutalk2.data.UserInfo: boolean isLClickRecord()
com.ztspeech.simutalk2.data.UserInfo: boolean isBackRun()
com.ztspeech.simutalk2.data.UserInfo: boolean isOpenTransView()
com.ztspeech.simutalk2.data.UserInfo: void setOpenTransView(boolean)
com.ztspeech.simutalk2.data.UserInfo: void setLogin(boolean)
com.ztspeech.simutalk2.data.UserInfo: void setChange(boolean)
com.ztspeech.simutalk2.data.UserInfo: long getMaxMsgId()
com.ztspeech.simutalk2.data.UserInfo: void setMaxMsgId(long)
com.ztspeech.simutalk2.data.UserInfo: float getTtsSpeed()
com.ztspeech.simutalk2.data.UserInfo: void setTtsSpeed(float)
com.ztspeech.simutalk2.data.UserInfo: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.data.UserInfo: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.data.UserInfo: void load()
com.ztspeech.simutalk2.data.UserInfo: boolean isLocaleTTS()
com.ztspeech.simutalk2.data.UserInfo: float getFontSize()
com.ztspeech.simutalk2.data.UserInfo: boolean getTtsGender()
com.ztspeech.simutalk2.data.UserInfo: void setTtsGender(boolean)
com.ztspeech.simutalk2.data.UserInfo: int getFontIndex()
com.ztspeech.simutalk2.data.UserInfo: void setFontIndex(int)
com.ztspeech.simutalk2.data.UserInfo: void setPhoto(java.lang.String)
com.ztspeech.simutalk2.data.UserInfo: void setLocaleTTS(boolean)
com.ztspeech.simutalk2.data.UserInfo: boolean isOnlyRecoginze()
com.ztspeech.simutalk2.data.UserInfo: void setOnlyRecoginze(boolean)
com.ztspeech.simutalk2.data.UserInfo: boolean isTranslatetalk()
com.ztspeech.simutalk2.data.UserInfo: void setTranslatetalk(boolean)
com.ztspeech.simutalk2.data.UserInfo: void save()
com.ztspeech.simutalk2.data.UserInfo: java.lang.String getTimeString1(java.util.Date)
com.ztspeech.simutalk2.data.UserInfo: java.lang.String getTimeString(long)
com.ztspeech.simutalk2.data.UserInfo: java.lang.String getTimeString(java.util.Date)
com.ztspeech.simutalk2.data.UserInfo: void setInfo(cn.ac.ia.directtrans.json.UserState)
com.ztspeech.simutalk2.data.UserInfo: java.lang.String getSbxLen(int)
com.ztspeech.simutalk2.data.UserInfo: void setMaxIdToMsg()
com.ztspeech.simutalk2.data.UserInfoList
com.ztspeech.simutalk2.data.UserInfoList: java.util.ArrayList items
com.ztspeech.simutalk2.data.UserInfoList: UserInfoList()
com.ztspeech.simutalk2.data.UserInfoList: com.ztspeech.simutalk2.data.UserInfoList getInstanse()
com.ztspeech.simutalk2.data.UserInfoList: cn.ac.ia.directtrans.json.UserInfo findById(int)
com.ztspeech.simutalk2.data.UserInfoList: cn.ac.ia.directtrans.json.UserInfo findAndNewById(int)
com.ztspeech.simutalk2.data.UserInfoList: void updateUserName(int,java.lang.String)
com.ztspeech.simutalk2.data.UserInfoList: void updateUseInfo(int,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.data.UserInfoList: void update(cn.ac.ia.directtrans.json.UserState)
com.ztspeech.simutalk2.data.UserInfoList: void update(com.ztspeech.simutalk2.data.FriendData)
com.ztspeech.simutalk2.data.UserInfoList: void update(cn.ac.ia.directtrans.json.QuestionInfo)
com.ztspeech.simutalk2.data.UserInfoList: void updatePhoto(int,java.lang.String)
com.ztspeech.simutalk2.data.VoiceData
com.ztspeech.simutalk2.data.VoiceData: VoiceData()
com.ztspeech.simutalk2.data.VoiceData: boolean isVoice(int)
com.ztspeech.simutalk2.data.view.ListViewAdapter
com.ztspeech.simutalk2.data.view.ListViewAdapter: com.ztspeech.simutalk2.data.DataListObejct mDataList
com.ztspeech.simutalk2.data.view.ListViewAdapter: android.content.Context mContext
com.ztspeech.simutalk2.data.view.ListViewAdapter: ListViewAdapter(android.content.Context,com.ztspeech.simutalk2.data.DataListObejct)
com.ztspeech.simutalk2.data.view.ListViewAdapter: int getCount()
com.ztspeech.simutalk2.data.view.ListViewAdapter: java.lang.Object getItem(int)
com.ztspeech.simutalk2.data.view.ListViewAdapter: long getItemId(int)
com.ztspeech.simutalk2.data.view.ListViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.data.view.ListViewAdapter: com.ztspeech.simutalk2.data.view.ListViewItem newItemView(android.content.Context)
com.ztspeech.simutalk2.data.view.ListViewAdapter: void OnListViewItemClick(int,long)
com.ztspeech.simutalk2.data.view.ListViewAdapter: void setOnListViewItemClickListener(com.ztspeech.simutalk2.data.view.ViewItemEvent$OnListViewItemClickListener)
com.ztspeech.simutalk2.data.view.ListViewItem
com.ztspeech.simutalk2.data.view.ListViewItem: void setOnListViewItemClickListener(com.ztspeech.simutalk2.data.view.ViewItemEvent$OnListViewItemClickListener)
com.ztspeech.simutalk2.data.view.ListViewItem: void doClickListener(int,long)
com.ztspeech.simutalk2.data.view.ListViewItem: ListViewItem(android.content.Context)
com.ztspeech.simutalk2.data.view.ListViewItem: void onClick(android.view.View)
com.ztspeech.simutalk2.data.view.ListViewItem: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.data.view.ViewItemEvent
com.ztspeech.simutalk2.data.view.ViewItemEvent: int OPEN
com.ztspeech.simutalk2.data.view.ViewItemEvent: int EDIT
com.ztspeech.simutalk2.data.view.ViewItemEvent: int DELETE
com.ztspeech.simutalk2.data.view.ViewItemEvent: int DETAIL
com.ztspeech.simutalk2.data.view.ViewItemEvent: int ADD
com.ztspeech.simutalk2.data.view.ViewItemEvent: int SELECT_TRUE
com.ztspeech.simutalk2.data.view.ViewItemEvent: int SELECT_FALSE
com.ztspeech.simutalk2.data.view.ViewItemEvent: ViewItemEvent()
com.ztspeech.simutalk2.data.view.ViewItemEvent$OnListViewItemClickListener
com.ztspeech.simutalk2.data.view.ViewItemEvent$OnListViewItemClickListener: void OnListViewItemClick(int,long)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: android.widget.ImageButton btnCancle
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: android.widget.TextView tvTitle
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: BaseActivity()
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void setTitleAndContentView(int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void finish()
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void setTitle(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void sendSMS(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void shareText(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.BaseActivity: void setBackGround(int)
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity: ChildCategroyActivity()
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.dictionary.activity.ChildCategroyActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: android.content.BroadcastReceiver receivePopMenuEvent
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: CollectedWordsActivity()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void setTitleAndContentView(int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void getCollectedWordsList()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void getCollectedWordsListAfterDelete()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void registerBoradcastReceiver()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void setChOrEN(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void initPopMenu(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void showDialogMenu(android.os.Parcelable,int)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void showActionPop(android.os.Parcelable,int)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onEngineEnd()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onEngineResult(java.util.List,int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onEngineStart()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void afterTextChanged(android.text.Editable)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void initPopMore(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void showPopMore(android.os.Parcelable)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onStop()
com.ztspeech.simutalk2.dictionary.activity.CollectedWordsActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: android.content.BroadcastReceiver receivePopMenuEvent
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: KouyiRecordActivity()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void setTitleAndContentView(int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void setChOrEN(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void getRecordList()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void getRecordListAfterDelete()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void registerBoradcastReceiver()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void initPopMenu(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void showDialogMenu(com.ztspeech.simutalk2.dictionary.entity.KouyiRecord,int)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void showActionPop(com.ztspeech.simutalk2.dictionary.entity.KouyiRecord,int)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onEngineEnd()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onEngineResult(java.util.List,int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onEngineStart()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void afterTextChanged(android.text.Editable)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void initPopMore(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void showPopMore(com.ztspeech.simutalk2.dictionary.entity.KouyiRecord)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onStop()
com.ztspeech.simutalk2.dictionary.activity.KouyiRecordActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: android.content.BroadcastReceiver receivePopMenuEvent
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: ResultActivity()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void init(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void setTitleAndContentView(int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onEngineEnd()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onEngineResult(java.util.List,int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onEngineStart()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void afterTextChanged(android.text.Editable)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void getList(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void getUserInput()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: java.util.List searchWordsBystrWords(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: java.util.List searchByChinese(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: java.util.List searchByEnglish(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void addLvItemFenYe()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void registerBoradcastReceiver()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void showDialogMenu(android.os.Parcelable,int)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void initPopMore(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void showPopMore(android.os.Parcelable)
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onStop()
com.ztspeech.simutalk2.dictionary.activity.ResultActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.dictionary.activity.SearchActivity
com.ztspeech.simutalk2.dictionary.activity.SearchActivity: SearchActivity()
com.ztspeech.simutalk2.dictionary.activity.SearchActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.SearchActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.dictionary.activity.SearchActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.SearchActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.dictionary.activity.SearchActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.SettingActivity
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: SettingActivity()
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: void onResume()
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: void initConfig()
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: boolean onPreferenceClick(android.preference.Preference)
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: boolean checkUserName(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: void onPause()
com.ztspeech.simutalk2.dictionary.activity.SettingActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity: SettingTTSspeedActivity()
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity: void onProgressChanged(android.widget.SeekBar,int,boolean)
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity: void onStartTrackingTouch(android.widget.SeekBar)
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity: void onStopTrackingTouch(android.widget.SeekBar)
com.ztspeech.simutalk2.dictionary.activity.SettingTTSspeedActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.ShowWhiteBordActivity
com.ztspeech.simutalk2.dictionary.activity.ShowWhiteBordActivity: ShowWhiteBordActivity()
com.ztspeech.simutalk2.dictionary.activity.ShowWhiteBordActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.ShowWhiteBordActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.ShowWhiteBordActivity: void speakStr(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.ShowWhiteBordActivity: void onStop()
com.ztspeech.simutalk2.dictionary.activity.SkinActivity
com.ztspeech.simutalk2.dictionary.activity.SkinActivity: SkinActivity()
com.ztspeech.simutalk2.dictionary.activity.SkinActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: android.content.BroadcastReceiver receivePopMenuEvent
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: WordsActivity()
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void setChOrEN(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void onResume()
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void onConfigurationChanged(android.content.res.Configuration)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: java.util.List searchWordsBystrWords(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void addLvItemFenYe()
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: java.util.List searchByChinese(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: java.util.List searchByEnglish(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void registerBoradcastReceiver()
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void initPopMenu(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void showDialogMenu(android.os.Parcelable,int)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void showPopMenu(android.os.Parcelable,int)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void initPopMore(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void showPopMore(int)
com.ztspeech.simutalk2.dictionary.activity.WordsActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: WordsAutoCompletedActivity()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onResume()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void afterTextChanged(android.text.Editable)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void getList()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void searchByChinese(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void searchByEnglish(java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void getUserInput()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onDestroy()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onEngineEnd()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onEngineResult(java.util.List,int,java.lang.String)
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: void onEngineStart()
com.ztspeech.simutalk2.dictionary.activity.WordsAutoCompletedActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: android.content.Context context
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: java.util.List list
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: android.view.View view
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: java.lang.Integer chOrEn
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: BaseLvAdapter(android.content.Context,java.util.List)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: android.view.View getFooter()
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: void setCHorEN(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: void addFooter(android.widget.ListView)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: void removeFooter(android.widget.ListView)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: int getCount()
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: java.lang.Object getItem(int)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: long getItemId(int)
com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.CategroyLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.CategroyLvAdapter: CategroyLvAdapter(android.content.Context,java.util.List)
com.ztspeech.simutalk2.dictionary.adapter.CategroyLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.CategroyLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.CategroyLvAdapter$ViewHolder: android.widget.TextView tvCategroy
com.ztspeech.simutalk2.dictionary.adapter.CategroyLvAdapter$ViewHolder: CategroyLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.adapter.ChildLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.ChildLvAdapter: ChildLvAdapter(android.content.Context,java.util.List)
com.ztspeech.simutalk2.dictionary.adapter.ChildLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.ChildLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.ChildLvAdapter$ViewHolder: android.widget.TextView tvCategroy
com.ztspeech.simutalk2.dictionary.adapter.ChildLvAdapter$ViewHolder: ChildLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.TextView tvEnglish
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.TextView tvChinese
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.TextView tvCategroy
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.TextView tvChild
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.ImageButton btnMore1
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.ImageButton btnMore2
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.ImageButton btnSpeak1
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.ImageButton btnSpeak2
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.LinearLayout llMiddle1
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: android.widget.LinearLayout llMiddle3
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: void setData(com.ztspeech.simutalk2.dictionary.entity.Collecter,com.ztspeech.simutalk2.dictionary.entity.Categroy,com.ztspeech.simutalk2.dictionary.entity.Child,android.content.Context,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: CollectedLvItem1(android.content.Context,com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter)
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: void speakStr(java.lang.String)
com.ztspeech.simutalk2.dictionary.adapter.CollectedLvItem1: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.adapter.CollectedSimpleLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.CollectedSimpleLvAdapter: CollectedSimpleLvAdapter(android.content.Context,java.util.List,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.CollectedSimpleLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.CollectedSimpleLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.CollectedSimpleLvAdapter$ViewHolder: android.widget.TextView tvWords
com.ztspeech.simutalk2.dictionary.adapter.CollectedSimpleLvAdapter$ViewHolder: CollectedSimpleLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.adapter.CollectedWordsLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.CollectedWordsLvAdapter: CollectedWordsLvAdapter(android.content.Context,java.util.List,java.lang.Integer,android.view.View)
com.ztspeech.simutalk2.dictionary.adapter.CollectedWordsLvAdapter: void setCHorEN(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.CollectedWordsLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvAdapter: KouyiRecordLvAdapter(android.content.Context,java.util.List,java.lang.Integer,android.view.View)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.TextView tvEnglish
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.TextView tvChinese
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.TextView tvCategroy
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.TextView tvChild
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.ImageButton btnMore1
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.ImageButton btnMore2
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.ImageButton btnSpeak1
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.ImageButton btnSpeak2
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.LinearLayout llMiddle1
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: android.widget.LinearLayout llMiddle3
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: void setData(com.ztspeech.simutalk2.dictionary.entity.KouyiRecord,com.ztspeech.simutalk2.dictionary.entity.Categroy,com.ztspeech.simutalk2.dictionary.entity.Child,android.content.Context,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: KouyiRecordLvItem1(android.content.Context,com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: void speakStr(java.lang.String)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: boolean isExistTrans()
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: void setBg(boolean)
com.ztspeech.simutalk2.dictionary.adapter.KouyiRecordLvItem1: int[] getBgResourceByType(java.lang.String)
com.ztspeech.simutalk2.dictionary.adapter.KouyiSimpleLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.KouyiSimpleLvAdapter: KouyiSimpleLvAdapter(android.content.Context,java.util.List,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.KouyiSimpleLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.KouyiSimpleLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.KouyiSimpleLvAdapter$ViewHolder: android.widget.TextView tvWords
com.ztspeech.simutalk2.dictionary.adapter.KouyiSimpleLvAdapter$ViewHolder: KouyiSimpleLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.adapter.SimpleLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.SimpleLvAdapter: SimpleLvAdapter(android.content.Context,java.util.List)
com.ztspeech.simutalk2.dictionary.adapter.SimpleLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.SimpleLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.SimpleLvAdapter$ViewHolder: android.widget.TextView tv
com.ztspeech.simutalk2.dictionary.adapter.SimpleLvAdapter$ViewHolder: SimpleLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter: UserInputLvAdapter(android.content.Context,java.util.List)
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter: void addFooter(android.widget.ListView)
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter: void changeFontSize(com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter$ViewHolder)
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter$ViewHolder: android.widget.TextView tv
com.ztspeech.simutalk2.dictionary.adapter.UserInputLvAdapter$ViewHolder: UserInputLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.adapter.WordsLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.WordsLvAdapter: WordsLvAdapter(android.content.Context,java.util.List,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.WordsLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.TextView tvEnglish
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.TextView tvChinese
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.TextView tvCategroy
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.TextView tvChild
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.ImageButton btnMore1
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.ImageButton btnMore2
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.ImageButton btnSpeak1
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.ImageButton btnSpeak2
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.LinearLayout llMiddle1
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: android.widget.LinearLayout llMiddle3
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: void setData(com.ztspeech.simutalk2.dictionary.entity.Words,com.ztspeech.simutalk2.dictionary.entity.Categroy,com.ztspeech.simutalk2.dictionary.entity.Child,android.content.Context,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: WordsLvItem1(android.content.Context,com.ztspeech.simutalk2.dictionary.adapter.BaseLvAdapter)
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: void speakStr(java.lang.String)
com.ztspeech.simutalk2.dictionary.adapter.WordsLvItem1: void onClick(android.view.View)
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter: WordsSimpleLvAdapter(android.content.Context,java.util.List,java.lang.Integer)
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter: void changeFontSize(com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter$ViewHolder)
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter$ViewHolder
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter$ViewHolder: android.widget.TextView tvWords
com.ztspeech.simutalk2.dictionary.adapter.WordsSimpleLvAdapter$ViewHolder: WordsSimpleLvAdapter$ViewHolder()
com.ztspeech.simutalk2.dictionary.dom.InitDataBase
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: InitDataBase(android.content.Context)
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: InitDataBase()
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: java.lang.String writeDatabase()
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: java.lang.String writeDatabaseToPhone()
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: java.lang.String updateDataBase(java.io.InputStream)
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: java.lang.String updateDataBase2(java.io.InputStream)
com.ztspeech.simutalk2.dictionary.dom.InitDataBase: void writeDictionaryDatabaseFromRaw(int[])
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: boolean getIsOpen()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: SQLiteDom()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void openDB1()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void openDB2()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void closeDataBase()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void insertNewWords(java.util.List)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void insertNewWord(com.ztspeech.simutalk2.dictionary.entity.Words)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getAllCategroy()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getChildByCategroyId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getSimilarResult(java.lang.String,java.lang.String,java.lang.Integer,int)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: com.ztspeech.simutalk2.dictionary.entity.Categroy getCategroyById(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: com.ztspeech.simutalk2.dictionary.entity.Child getChildById(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getSimilarResult(java.lang.Integer,java.lang.String,java.lang.String,int)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getUserInput()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void saveUserInput(java.lang.String)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void deleteAllUserInput()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getSimilarResultInKouyi(java.lang.String,int)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getKouyiBySaidandTranslate(java.lang.String)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: int getIndexOfRecord(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void insertRecord(com.ztspeech.simutalk2.dictionary.entity.KouyiRecord)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.lang.Integer getLastRecordId()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: int deleteRecordByIdReturnIndex(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void deleteRecordById(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void deleteAllRecord()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void updateRecord(com.ztspeech.simutalk2.dictionary.entity.KouyiRecord)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void commentRecord(java.lang.Integer,int)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void deleteAllCollecter()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: int insertCollecterFromSearch(com.ztspeech.simutalk2.dictionary.entity.Words)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: int insertCollecterFromKouyi(com.ztspeech.simutalk2.dictionary.entity.Collecter)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: com.ztspeech.simutalk2.dictionary.entity.Collecter getCollectedWordsByWordsId(com.ztspeech.simutalk2.dictionary.entity.Collecter)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.util.List getCollectedWords(java.lang.String,int)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void deleteCollectedWordsByWordsId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.lang.String strFilter(java.lang.String)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: java.lang.String getCurrentdbVersion()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void insertCurrentVersion(java.lang.String,char)
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void updateUserDatabaseVersion()
com.ztspeech.simutalk2.dictionary.dom.SQLiteDom: void changeOldDatabaseTypeValue()
com.ztspeech.simutalk2.dictionary.entity.Categroy
com.ztspeech.simutalk2.dictionary.entity.Categroy: Categroy()
com.ztspeech.simutalk2.dictionary.entity.Categroy: java.lang.Integer getCategroyId()
com.ztspeech.simutalk2.dictionary.entity.Categroy: void setCategroyId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Categroy: java.lang.String getCategroyName()
com.ztspeech.simutalk2.dictionary.entity.Categroy: void setCategroyName(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Categroy: java.lang.Integer getCategroyHeat()
com.ztspeech.simutalk2.dictionary.entity.Categroy: void setCategroyHeat(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Child
com.ztspeech.simutalk2.dictionary.entity.Child: Child()
com.ztspeech.simutalk2.dictionary.entity.Child: java.lang.Integer getChildId()
com.ztspeech.simutalk2.dictionary.entity.Child: void setChildId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Child: java.lang.Integer getCategroyId()
com.ztspeech.simutalk2.dictionary.entity.Child: void setCategroyId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Child: java.lang.String getChildName()
com.ztspeech.simutalk2.dictionary.entity.Child: void setChildName(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Child: java.lang.Integer getChildHeat()
com.ztspeech.simutalk2.dictionary.entity.Child: void setChildHeat(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Collecter
com.ztspeech.simutalk2.dictionary.entity.Collecter: android.os.Parcelable$Creator CREATOR
com.ztspeech.simutalk2.dictionary.entity.Collecter: Collecter()
com.ztspeech.simutalk2.dictionary.entity.Collecter: java.lang.Integer getId()
com.ztspeech.simutalk2.dictionary.entity.Collecter: void setId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Collecter: java.lang.Integer getChildId()
com.ztspeech.simutalk2.dictionary.entity.Collecter: void setChildId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Collecter: java.lang.String getText1()
com.ztspeech.simutalk2.dictionary.entity.Collecter: void setText1(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Collecter: java.lang.String getText2()
com.ztspeech.simutalk2.dictionary.entity.Collecter: void setText2(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Collecter: java.lang.String getDateTime()
com.ztspeech.simutalk2.dictionary.entity.Collecter: void setDateTime(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Collecter: int describeContents()
com.ztspeech.simutalk2.dictionary.entity.Collecter: void writeToParcel(android.os.Parcel,int)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: android.os.Parcelable$Creator CREATOR
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: KouyiRecord()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.String getId()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setId(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.String getType()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setType(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.String getComment()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setComment(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.Integer getRecordId()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setRecordId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.String getSaid()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setSaid(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.String getTranslated()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setTranslated(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: java.lang.String getDateTime()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void setDateTime(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: int describeContents()
com.ztspeech.simutalk2.dictionary.entity.KouyiRecord: void writeToParcel(android.os.Parcel,int)
com.ztspeech.simutalk2.dictionary.entity.Words
com.ztspeech.simutalk2.dictionary.entity.Words: android.os.Parcelable$Creator CREATOR
com.ztspeech.simutalk2.dictionary.entity.Words: Words()
com.ztspeech.simutalk2.dictionary.entity.Words: java.lang.Integer getWordsId()
com.ztspeech.simutalk2.dictionary.entity.Words: void setWordsId(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Words: java.lang.Integer getChildID()
com.ztspeech.simutalk2.dictionary.entity.Words: void setChildID(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Words: java.lang.String getChinese()
com.ztspeech.simutalk2.dictionary.entity.Words: void setChinese(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Words: java.lang.String getEnglish()
com.ztspeech.simutalk2.dictionary.entity.Words: void setEnglish(java.lang.String)
com.ztspeech.simutalk2.dictionary.entity.Words: java.lang.Integer getWordsHeat()
com.ztspeech.simutalk2.dictionary.entity.Words: void setWordsHeat(java.lang.Integer)
com.ztspeech.simutalk2.dictionary.entity.Words: int describeContents()
com.ztspeech.simutalk2.dictionary.entity.Words: void writeToParcel(android.os.Parcel,int)
com.ztspeech.simutalk2.dictionary.net.HttpConnection
com.ztspeech.simutalk2.dictionary.net.HttpConnection: HttpConnection()
com.ztspeech.simutalk2.dictionary.net.HttpConnection: java.lang.String request(java.lang.String)
com.ztspeech.simutalk2.dictionary.service.HttpConnection
com.ztspeech.simutalk2.dictionary.service.HttpConnection: HttpConnection()
com.ztspeech.simutalk2.dictionary.service.HttpConnection: java.lang.String request(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.LogInfo
com.ztspeech.simutalk2.dictionary.util.LogInfo: LogInfo()
com.ztspeech.simutalk2.dictionary.util.LogInfo: void LogOut(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.LogInfo: void LogOutD(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.LogInfo: void LogOutE(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.LogInfo: void LogOut(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.dictionary.util.LogInfo: void LogOutD(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.dictionary.util.LogInfo: void LogOutE(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.dictionary.util.MD5
com.ztspeech.simutalk2.dictionary.util.MD5: MD5()
com.ztspeech.simutalk2.dictionary.util.MD5: java.lang.String md5Upper(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.MD5: java.lang.String md5Lower(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs: android.content.Context context
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs: boolean isCancel
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs: PopWindowTTs(android.content.Context)
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs: void showLoading()
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs: void stopProgressDialog()
com.ztspeech.simutalk2.dictionary.util.PopWindowTTs: void setCancel(com.ztspeech.simutalk2.qa.WaitingActivity$OnWaitingListener)
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: PublicArithmetic()
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: java.lang.Integer isWhat(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: boolean isEngString(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: boolean chTandEnF(java.lang.String)
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: java.lang.String getCurrentDateTime()
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: java.lang.String getCurrentDate()
com.ztspeech.simutalk2.dictionary.util.PublicArithmetic: void buttonClickOnlyOneTime(android.view.View)
com.ztspeech.simutalk2.dictionary.util.Util
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String ZTSPEECH_PATH
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String DATABASE_PATH
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String DATABASE_PATH2
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String VOICE_CACHE_PATH
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String IMG_CACHE_PATH
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String DATABASE_FILENAME
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String DATABASE_FILENAME2
com.ztspeech.simutalk2.dictionary.util.Util: int REQUESTCODE_AUTOCOMPLETEDWORDS
com.ztspeech.simutalk2.dictionary.util.Util: int COUNTINONEPAGE
com.ztspeech.simutalk2.dictionary.util.Util: int COUNTOFUSERINPUTHUANCUN
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String ACTION_POMENU
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String ACTION_SENDMSG
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String WORDS_ID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String WORDS_CHILDID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String WORDS_CHINESE
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String WORDS_ENGLISH
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String WORDS_HEAT
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CATEGROY_ID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CATEGROY_NAME
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CATEGROY_HEAT
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CHILD_ID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CHILD_CATEGROYID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CHILD_NAME
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CHILD_HEAT
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String COLLECTER_ID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String COLLECTER_CHILDID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String COLLECTER_TEXT1
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String COLLECTER_TEXT2
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String COLLECTER_DATETIME
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_ID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_SAID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_TRANSLATED
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_DATETIME
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_IDS
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_TYPE
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD_COMMENT
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String USERINPUT_ID
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String USERINPUT_STR
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String WORDS
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CATEGROY
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String CHILD
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String COLLECTER
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String KOUYIRECORD
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String USERINPUT
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String HOST_IP
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String FILE_HOST_IP
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String BTNTOHOST
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String HOST_CH_UPDATE
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String HELP_URL
com.ztspeech.simutalk2.dictionary.util.Util: int handkey
com.ztspeech.simutalk2.dictionary.util.Util: int ON_RECORD_END
com.ztspeech.simutalk2.dictionary.util.Util: int ON_RECORD_BEGIN
com.ztspeech.simutalk2.dictionary.util.Util: int ON_RECORDER_ERROR
com.ztspeech.simutalk2.dictionary.util.Util: int ON_WAIT_BEGIN
com.ztspeech.simutalk2.dictionary.util.Util: int ON_WAIT_END
com.ztspeech.simutalk2.dictionary.util.Util: int ON_RECOGNIZER_ERROR
com.ztspeech.simutalk2.dictionary.util.Util: int ON_VOICE_VALUE
com.ztspeech.simutalk2.dictionary.util.Util: int SET_LIST_VIEW
com.ztspeech.simutalk2.dictionary.util.Util: int SELECT_RESULT
com.ztspeech.simutalk2.dictionary.util.Util: boolean isTmpFile
com.ztspeech.simutalk2.dictionary.util.Util: java.lang.String tmpFilePath
com.ztspeech.simutalk2.dictionary.util.Util: Util()
com.ztspeech.simutalk2.dictionary.util.Util: void showToast(android.content.Context,java.lang.String)
com.ztspeech.simutalk2.dictionary.util.Util: void showToast(android.content.Context,int)
com.ztspeech.simutalk2.dictionary.util.Util$R_String
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String btn_record_cancel
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String btn_record_stop
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String btn_record_ing
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String btn_record_say
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String lbl_record_say
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String lbl_record_wait
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String lbl_net_error
com.ztspeech.simutalk2.dictionary.util.Util$R_String: java.lang.String lbl_speak_nothing
com.ztspeech.simutalk2.dictionary.util.Util$R_String: Util$R_String(com.ztspeech.simutalk2.dictionary.util.Util)
com.ztspeech.simutalk2.exception.CrashHanlderExcetpion
com.ztspeech.simutalk2.exception.CrashHanlderExcetpion: java.lang.String TAG
com.ztspeech.simutalk2.exception.CrashHanlderExcetpion: com.ztspeech.simutalk2.exception.CrashHanlderExcetpion getInstance()
com.ztspeech.simutalk2.exception.CrashHanlderExcetpion: void init(android.content.Context)
com.ztspeech.simutalk2.exception.CrashHanlderExcetpion: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.ztspeech.simutalk2.exception.CrashHanlderExcetpion: void collectDeviceInfo(android.content.Context)
com.ztspeech.simutalk2.net.AsyncHttpDownloader
com.ztspeech.simutalk2.net.AsyncHttpDownloader: AsyncHttpDownloader(com.ztspeech.simutalk2.net.AsyncHttpDownloader$OnAsyncHttpDownloaderLisenter)
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void setParam(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void download(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void onCancelled()
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void onPostExecute(byte[])
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void onPreExecute()
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void onProgressUpdate(java.lang.String[])
com.ztspeech.simutalk2.net.AsyncHttpDownloader: byte[] doInBackground(java.lang.String[])
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void onPostExecute(java.lang.Object)
com.ztspeech.simutalk2.net.AsyncHttpDownloader: java.lang.Object doInBackground(java.lang.Object[])
com.ztspeech.simutalk2.net.AsyncHttpDownloader: void onProgressUpdate(java.lang.Object[])
com.ztspeech.simutalk2.net.AsyncHttpDownloader$OnAsyncHttpDownloaderLisenter
com.ztspeech.simutalk2.net.AsyncHttpDownloader$OnAsyncHttpDownloaderLisenter: void onData(byte[])
com.ztspeech.simutalk2.net.AsyncHttpDownloader$OnAsyncHttpDownloaderLisenter: void onBegin()
com.ztspeech.simutalk2.net.AsyncHttpDownloader$OnAsyncHttpDownloaderLisenter: void onEnd()
com.ztspeech.simutalk2.net.AsyncHttpPost
com.ztspeech.simutalk2.net.AsyncHttpPost: void onPostExecute(java.lang.String)
com.ztspeech.simutalk2.net.AsyncHttpPost: AsyncHttpPost(com.ztspeech.simutalk2.net.AsyncHttpPost$AsyncHttpPostLisenter)
com.ztspeech.simutalk2.net.AsyncHttpPost: void setHost(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.AsyncHttpPost: void postVoice(byte[],java.lang.String)
com.ztspeech.simutalk2.net.AsyncHttpPost: java.lang.String doInBackground(java.lang.String[])
com.ztspeech.simutalk2.net.AsyncHttpPost: void onPostExecute(java.lang.Object)
com.ztspeech.simutalk2.net.AsyncHttpPost: java.lang.Object doInBackground(java.lang.Object[])
com.ztspeech.simutalk2.net.AsyncHttpPost$AsyncHttpPostLisenter
com.ztspeech.simutalk2.net.AsyncHttpPost$AsyncHttpPostLisenter: void onData(java.lang.String)
com.ztspeech.simutalk2.net.AsyncHttpPost$AsyncHttpPostLisenter: void onBegin()
com.ztspeech.simutalk2.net.AsyncHttpPost$AsyncHttpPostLisenter: void onEnd()
com.ztspeech.simutalk2.net.HttpBaseEngine
com.ztspeech.simutalk2.net.HttpBaseEngine: android.content.Context context
com.ztspeech.simutalk2.net.HttpBaseEngine: com.ztspeech.simutalk2.net.HttpBaseEngine$HttpRequest httpRequest
com.ztspeech.simutalk2.net.HttpBaseEngine: com.ztspeech.simutalk2.net.HttpBaseEngine$HttpPost httpPost
com.ztspeech.simutalk2.net.HttpBaseEngine: android.app.ProgressDialog loadingDialog
com.ztspeech.simutalk2.net.HttpBaseEngine: boolean isCancel
com.ztspeech.simutalk2.net.HttpBaseEngine: HttpBaseEngine(android.content.Context)
com.ztspeech.simutalk2.net.HttpBaseEngine: void httpRequestNewThread(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.HttpBaseEngine: void httpRequestPostNewThread(byte[],java.lang.String)
com.ztspeech.simutalk2.net.HttpBaseEngine: void httpRequestPostNewThread(byte[],java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.HttpBaseEngine: byte[] httpRequestThisThread(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.HttpBaseEngine: java.lang.String httpRequestPostThread(byte[],java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.HttpBaseEngine: void onPreHttp()
com.ztspeech.simutalk2.net.HttpBaseEngine: void onParseHttp(byte[])
com.ztspeech.simutalk2.net.HttpBaseEngine: void onParseHttp(java.lang.String)
com.ztspeech.simutalk2.net.HttpBaseEngine: void onPostHttp(java.lang.Object)
com.ztspeech.simutalk2.net.HttpBaseEngine: void cancelRequest()
com.ztspeech.simutalk2.net.HttpBaseEngine: void dismissLoading()
com.ztspeech.simutalk2.net.HttpBaseEngine: void onLoadingCacel()
com.ztspeech.simutalk2.net.HttpBaseEngine: void showLoading()
com.ztspeech.simutalk2.net.HttpDownloader
com.ztspeech.simutalk2.net.HttpDownloader: HttpDownloader()
com.ztspeech.simutalk2.net.HttpDownloader: void download(java.lang.String,com.ztspeech.simutalk2.net.HttpDownloader$IHttpDownloadLisenter)
com.ztspeech.simutalk2.net.HttpDownloader: java.lang.String download(java.lang.String)
com.ztspeech.simutalk2.net.HttpDownloader: java.io.InputStream getOnLineInputStream(java.lang.String)
com.ztspeech.simutalk2.net.HttpDownloader: int downFile(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.HttpDownloader$IHttpDownloadLisenter
com.ztspeech.simutalk2.net.HttpDownloader$IHttpDownloadLisenter: void onHttpDownloadString(java.lang.String)
com.ztspeech.simutalk2.net.HttpPostData
com.ztspeech.simutalk2.net.HttpPostData: int connectTimeout
com.ztspeech.simutalk2.net.HttpPostData: int readTimeout
com.ztspeech.simutalk2.net.HttpPostData: HttpPostData()
com.ztspeech.simutalk2.net.HttpPostData: void setParam(java.lang.String)
com.ztspeech.simutalk2.net.HttpPostData: void setHost(java.lang.String)
com.ztspeech.simutalk2.net.HttpPostData: int postData()
com.ztspeech.simutalk2.net.HttpPostData: boolean post(com.ztspeech.simutalk2.net.PostPackage)
com.ztspeech.simutalk2.net.HttpPostData: boolean threadPost(com.ztspeech.simutalk2.net.PostPackage)
com.ztspeech.simutalk2.net.HttpPostData: void run()
com.ztspeech.simutalk2.net.HttpUtils
com.ztspeech.simutalk2.net.HttpUtils: HttpUtils()
com.ztspeech.simutalk2.net.HttpUtils: byte[] getServerString(android.content.Context,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.net.HttpUtils: java.lang.String postServerString(android.content.Context,java.lang.String,java.lang.String,byte[])
com.ztspeech.simutalk2.net.HttpUtils: byte[] getServerString(android.content.Context,java.lang.String,boolean)
com.ztspeech.simutalk2.net.HttpUtils: java.lang.String postServerString(android.content.Context,java.lang.String,boolean,byte[])
com.ztspeech.simutalk2.net.HttpUtils: boolean isWifi(android.content.Context)
com.ztspeech.simutalk2.net.HttpUtils: java.net.URL weaveUrl(java.lang.String)
com.ztspeech.simutalk2.net.HttpUtils: java.io.InputStream getInputStreamFromUrl(java.lang.String)
com.ztspeech.simutalk2.net.HttpUtils: byte[] getData(java.io.InputStream)
com.ztspeech.simutalk2.net.ImageEngine
com.ztspeech.simutalk2.net.ImageEngine: ImageEngine()
com.ztspeech.simutalk2.net.ImageEngine: void setLoadLimit(int,int)
com.ztspeech.simutalk2.net.ImageEngine: void restore()
com.ztspeech.simutalk2.net.ImageEngine: void lock()
com.ztspeech.simutalk2.net.ImageEngine: void unlock()
com.ztspeech.simutalk2.net.ImageEngine: android.graphics.Bitmap loadLocal(java.lang.String)
com.ztspeech.simutalk2.net.ImageEngine: void setImageBitmap(java.lang.String,android.widget.ImageView,int,int)
com.ztspeech.simutalk2.net.ImageEngine: void setImageBitmapScale(java.lang.String,android.widget.ImageView,int,int)
com.ztspeech.simutalk2.net.ImageEngine: android.graphics.Bitmap loadImgLocal(java.lang.String)
com.ztspeech.simutalk2.net.ImageEngine: void loadImg(java.lang.String,android.widget.ImageView,int,int)
com.ztspeech.simutalk2.net.ImageEngine: void loadImgScale(java.lang.String,android.widget.ImageView,int,int)
com.ztspeech.simutalk2.net.ListViewImageEngine
com.ztspeech.simutalk2.net.ListViewImageEngine: ListViewImageEngine(android.widget.ListView)
com.ztspeech.simutalk2.net.ListViewImageEngine: void imageLoader(android.widget.ImageView,java.lang.String,int,int)
com.ztspeech.simutalk2.net.ListViewImageEngine: void imageLoaderScale(android.widget.ImageView,java.lang.String,int,int)
com.ztspeech.simutalk2.net.ListViewImageEngine: void onScrollStateChanged(android.widget.AbsListView,int)
com.ztspeech.simutalk2.net.ListViewImageEngine: void onScroll(android.widget.AbsListView,int,int,int)
com.ztspeech.simutalk2.net.NetDefine
com.ztspeech.simutalk2.net.NetDefine: int HTTP_CONNECT_TIMEOUT
com.ztspeech.simutalk2.net.NetDefine: int HTTP_READ_TIMEOUT
com.ztspeech.simutalk2.net.NetDefine: NetDefine()
com.ztspeech.simutalk2.net.NetResultFlag
com.ztspeech.simutalk2.net.NetResultFlag: int POST_CONNECT_ERROR
com.ztspeech.simutalk2.net.NetResultFlag: int POST_DATA_ERROR
com.ztspeech.simutalk2.net.NetResultFlag: int POST_DATA_SUCCEED
com.ztspeech.simutalk2.net.NetResultFlag: NetResultFlag()
com.ztspeech.simutalk2.net.NetResultFlag: java.lang.String getString(int)
com.ztspeech.simutalk2.net.PostPackage
com.ztspeech.simutalk2.net.PostPackage: java.lang.String cmd
com.ztspeech.simutalk2.net.PostPackage: java.lang.String type
com.ztspeech.simutalk2.net.PostPackage: void setDefaultHost(java.lang.String)
com.ztspeech.simutalk2.net.PostPackage: java.io.ByteArrayOutputStream getStream()
com.ztspeech.simutalk2.net.PostPackage: PostPackage(android.content.Context,com.ztspeech.simutalk2.net.PostPackage$IHttpPostListener)
com.ztspeech.simutalk2.net.PostPackage: void cancel()
com.ztspeech.simutalk2.net.PostPackage: void doNetError(int)
com.ztspeech.simutalk2.net.PostPackage: void doNetResult(java.io.ByteArrayOutputStream)
com.ztspeech.simutalk2.net.PostPackage: boolean post(com.ztspeech.simutalk2.net.RequestPackage,java.lang.String,boolean)
com.ztspeech.simutalk2.net.PostPackage: boolean post(cn.ac.ia.directtrans.json.JsonFunction,java.lang.String,boolean)
com.ztspeech.simutalk2.net.PostPackage: boolean post(cn.ac.ia.directtrans.json.JsonFunction,boolean)
com.ztspeech.simutalk2.net.PostPackage: boolean post(cn.ac.ia.directtrans.json.JsonFunction,java.lang.String,boolean,int,int)
com.ztspeech.simutalk2.net.PostPackage: boolean post2(java.io.ByteArrayOutputStream,java.lang.String,java.lang.String,boolean)
com.ztspeech.simutalk2.net.PostPackage: boolean post(java.lang.String,java.lang.String,boolean,int,int)
com.ztspeech.simutalk2.net.PostPackage: boolean post(java.lang.String,java.lang.String,boolean)
com.ztspeech.simutalk2.net.PostPackage: void setValueLong(long)
com.ztspeech.simutalk2.net.PostPackage$IHttpPostListener
com.ztspeech.simutalk2.net.PostPackage$IHttpPostListener: void onNetPostResult(com.ztspeech.simutalk2.net.PostPackage,com.ztspeech.simutalk2.net.ResultPackage)
com.ztspeech.simutalk2.net.PostPackage$IHttpPostListener: void isShowTipDialog(java.lang.String)
com.ztspeech.simutalk2.net.PostPackageEngine
com.ztspeech.simutalk2.net.PostPackageEngine: android.app.ProgressDialog loadingDialog
com.ztspeech.simutalk2.net.PostPackageEngine: boolean isCancel
com.ztspeech.simutalk2.net.PostPackageEngine: PostPackageEngine(android.content.Context,cn.ac.ia.directtrans.json.JsonFunction,android.os.Handler)
com.ztspeech.simutalk2.net.PostPackageEngine: void setJson(cn.ac.ia.directtrans.json.JsonFunction)
com.ztspeech.simutalk2.net.PostPackageEngine: void post()
com.ztspeech.simutalk2.net.PostPackageEngine: void post(boolean)
com.ztspeech.simutalk2.net.PostPackageEngine: void isShowTipDialog(java.lang.String)
com.ztspeech.simutalk2.net.PostPackageEngine: void onNetPostResult(com.ztspeech.simutalk2.net.PostPackage,com.ztspeech.simutalk2.net.ResultPackage)
com.ztspeech.simutalk2.net.PostPackageEngine: void dismissLoading()
com.ztspeech.simutalk2.net.PostPackageEngine: void cancelRequest()
com.ztspeech.simutalk2.net.PostPackageEngine: void onLoadingCacel()
com.ztspeech.simutalk2.net.PostPackageEngine: void showLoading()
com.ztspeech.simutalk2.net.RequestPackage
com.ztspeech.simutalk2.net.RequestPackage: cn.ac.ia.directtrans.json.JsonRequest request
com.ztspeech.simutalk2.net.RequestPackage: java.lang.String valueString
com.ztspeech.simutalk2.net.RequestPackage: long valueLong
com.ztspeech.simutalk2.net.RequestPackage: RequestPackage(cn.ac.ia.directtrans.json.JsonRequest)
com.ztspeech.simutalk2.net.ResultPackage
com.ztspeech.simutalk2.net.ResultPackage: int netFlag
com.ztspeech.simutalk2.net.ResultPackage: java.lang.String error
com.ztspeech.simutalk2.net.ResultPackage: java.lang.String cmd
com.ztspeech.simutalk2.net.ResultPackage: java.lang.String valueString
com.ztspeech.simutalk2.net.ResultPackage: long valueLong
com.ztspeech.simutalk2.net.ResultPackage: java.io.ByteArrayOutputStream result
com.ztspeech.simutalk2.net.ResultPackage: ResultPackage()
com.ztspeech.simutalk2.net.ResultPackage: boolean isNetSucceed()
com.ztspeech.simutalk2.net.ResultPackage: byte[] getBytes()
com.ztspeech.simutalk2.net.ResultPackage: java.lang.String getJson()
com.ztspeech.simutalk2.net.ServerConnect
com.ztspeech.simutalk2.net.ServerConnect: ServerConnect()
com.ztspeech.simutalk2.net.ServerConnect: com.ztspeech.simutalk2.net.ServerConnect getInstance()
com.ztspeech.simutalk2.net.ServerConnect: void init(android.content.Context,java.lang.String)
com.ztspeech.simutalk2.net.ServerConnect: boolean setUserPhotoId(java.lang.String)
com.ztspeech.simutalk2.net.ServerConnect: boolean setUserName(java.lang.String)
com.ztspeech.simutalk2.net.VoiceDataCache
com.ztspeech.simutalk2.net.VoiceDataCache: VoiceDataCache()
com.ztspeech.simutalk2.net.VoiceDataCache: com.ztspeech.simutalk2.net.VoiceDataCache getInstance()
com.ztspeech.simutalk2.net.VoiceDataCache: void add(java.lang.String,byte[],java.lang.String)
com.ztspeech.simutalk2.net.VoiceDataCache: byte[] getData(java.io.InputStream)
com.ztspeech.simutalk2.net.VoiceDataCache: byte[] findVoice(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.qa.AskQuestionActivity
com.ztspeech.simutalk2.qa.AskQuestionActivity: int TYPE_NEW
com.ztspeech.simutalk2.qa.AskQuestionActivity: int TYPE_OLD
com.ztspeech.simutalk2.qa.AskQuestionActivity: boolean mMessageChanged
com.ztspeech.simutalk2.qa.AskQuestionActivity: AskQuestionActivity()
com.ztspeech.simutalk2.qa.AskQuestionActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.AskQuestionActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.qa.AskQuestionActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.AskQuestionActivity: void onData(java.lang.String)
com.ztspeech.simutalk2.qa.AskQuestionActivity: void onBegin()
com.ztspeech.simutalk2.qa.AskQuestionActivity: void onEnd()
com.ztspeech.simutalk2.qa.FindUserActivity
com.ztspeech.simutalk2.qa.FindUserActivity: android.content.BroadcastReceiver receiveAddFriendEvent
com.ztspeech.simutalk2.qa.FindUserActivity: FindUserActivity()
com.ztspeech.simutalk2.qa.FindUserActivity: void initLocationSDK()
com.ztspeech.simutalk2.qa.FindUserActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.FindUserActivity: void finish()
com.ztspeech.simutalk2.qa.FindUserActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.FindUserActivity: void registerBoradcastReceiver()
com.ztspeech.simutalk2.qa.FindUserActivity: void onDestroy()
com.ztspeech.simutalk2.qa.FindUserActivity: void onEngineEnd()
com.ztspeech.simutalk2.qa.FindUserActivity: void onEngineResult(java.util.List,int,java.lang.String)
com.ztspeech.simutalk2.qa.FindUserActivity: void onEngineStart()
com.ztspeech.simutalk2.qa.FindUserActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.qa.FindUserActivity: void getLocation(android.os.Message)
com.ztspeech.simutalk2.qa.FriendActivity
com.ztspeech.simutalk2.qa.FriendActivity: FriendActivity()
com.ztspeech.simutalk2.qa.FriendActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.FriendActivity: void showPopMenu(android.view.View)
com.ztspeech.simutalk2.qa.FriendActivity: void closePM()
com.ztspeech.simutalk2.qa.FriendActivity: void onPause()
com.ztspeech.simutalk2.qa.FriendActivity: void onResume()
com.ztspeech.simutalk2.qa.FriendActivity: boolean isShowNotifitionTip(com.ztspeech.simutalk2.data.MsgDataList)
com.ztspeech.simutalk2.qa.FriendActivity: void showMesage()
com.ztspeech.simutalk2.qa.FriendActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.qa.FriendActivity: void updateMesage()
com.ztspeech.simutalk2.qa.FriendActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.FriendActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.qa.GetQuestionActivity
com.ztspeech.simutalk2.qa.GetQuestionActivity: java.lang.String PARAM_TYPE
com.ztspeech.simutalk2.qa.GetQuestionActivity: java.lang.String PARAM_ID
com.ztspeech.simutalk2.qa.GetQuestionActivity: int TYPE_ASK
com.ztspeech.simutalk2.qa.GetQuestionActivity: int TYPE_SOLVE
com.ztspeech.simutalk2.qa.GetQuestionActivity: GetQuestionActivity()
com.ztspeech.simutalk2.qa.GetQuestionActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.GetQuestionActivity: void onResume()
com.ztspeech.simutalk2.qa.GetQuestionActivity: void onPause()
com.ztspeech.simutalk2.qa.GetQuestionActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.ztspeech.simutalk2.qa.GetQuestionActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.GetQuestionActivity: void updateMesage()
com.ztspeech.simutalk2.qa.GetVoiceFromServerEngine
com.ztspeech.simutalk2.qa.GetVoiceFromServerEngine: GetVoiceFromServerEngine(android.content.Context,com.ztspeech.recognizer.speak.VoicePlayer,android.os.Handler)
com.ztspeech.simutalk2.qa.GetVoiceFromServerEngine: void onPreHttp()
com.ztspeech.simutalk2.qa.GetVoiceFromServerEngine: void onParseHttp(byte[])
com.ztspeech.simutalk2.qa.GetVoiceFromServerEngine: void onPostHttp(java.lang.Object)
com.ztspeech.simutalk2.qa.InteractionActivity
com.ztspeech.simutalk2.qa.InteractionActivity: boolean isQANewsUpdate
com.ztspeech.simutalk2.qa.InteractionActivity: boolean isFriendNewsUpdate
com.ztspeech.simutalk2.qa.InteractionActivity: boolean isTaskListUpdate
com.ztspeech.simutalk2.qa.InteractionActivity: InteractionActivity()
com.ztspeech.simutalk2.qa.InteractionActivity: com.ztspeech.simutalk2.qa.InteractionActivity getInstance()
com.ztspeech.simutalk2.qa.InteractionActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.InteractionActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.InteractionActivity: void showTaskCount(int)
com.ztspeech.simutalk2.qa.InteractionActivity: void onTabChanged(java.lang.String)
com.ztspeech.simutalk2.qa.InteractionActivity: void updateMesage()
com.ztspeech.simutalk2.qa.Location
com.ztspeech.simutalk2.qa.Location: com.baidu.location.LocationClient mLocationClient
com.ztspeech.simutalk2.qa.Location: com.ztspeech.simutalk2.qa.Location$MyLocationListenner myListener
com.ztspeech.simutalk2.qa.Location: android.widget.TextView mTv
com.ztspeech.simutalk2.qa.Location: com.ztspeech.simutalk2.qa.Location$NotifyLister mNotifyer
com.ztspeech.simutalk2.qa.Location: android.os.Vibrator mVibrator01
com.ztspeech.simutalk2.qa.Location: int GET_LOCATION
com.ztspeech.simutalk2.qa.Location: com.ztspeech.simutalk2.data.TransTextTable mTableTransText
com.ztspeech.simutalk2.qa.Location: java.lang.String isok2
com.ztspeech.simutalk2.qa.Location: java.lang.String isok
com.ztspeech.simutalk2.qa.Location: android.os.Handler myHandler
com.ztspeech.simutalk2.qa.Location: Location()
com.ztspeech.simutalk2.qa.Location: void setHandler(android.os.Handler)
com.ztspeech.simutalk2.qa.Location: void onCreate()
com.ztspeech.simutalk2.qa.Location: void initMyDictionary()
com.ztspeech.simutalk2.qa.Location: void initData()
com.ztspeech.simutalk2.qa.Location: void initCrash()
com.ztspeech.simutalk2.qa.Location: void logMsg(java.lang.String)
com.ztspeech.simutalk2.qa.Location$MyLocationListenner
com.ztspeech.simutalk2.qa.Location$MyLocationListenner: Location$MyLocationListenner(com.ztspeech.simutalk2.qa.Location)
com.ztspeech.simutalk2.qa.Location$MyLocationListenner: void onReceiveLocation(com.baidu.location.BDLocation)
com.ztspeech.simutalk2.qa.Location$MyLocationListenner: void onReceivePoi(com.baidu.location.BDLocation)
com.ztspeech.simutalk2.qa.Location$NotifyLister
com.ztspeech.simutalk2.qa.Location$NotifyLister: Location$NotifyLister(com.ztspeech.simutalk2.qa.Location)
com.ztspeech.simutalk2.qa.Location$NotifyLister: void onNotify(com.baidu.location.BDLocation,float)
com.ztspeech.simutalk2.qa.MainActivity
com.ztspeech.simutalk2.qa.MainActivity: int MAIN_TAB_SHOW_TRANS
com.ztspeech.simutalk2.qa.MainActivity: int MAIN_TAB_SHOW_LIB
com.ztspeech.simutalk2.qa.MainActivity: int MAIN_TAB_SHOW_QA
com.ztspeech.simutalk2.qa.MainActivity: int MAIN_TAB_SHOW_SETTINGS
com.ztspeech.simutalk2.qa.MainActivity: java.lang.String MAIN_TAB_DO
com.ztspeech.simutalk2.qa.MainActivity: com.ztspeech.simutalk2.data.TransTextTable mTableTransText
com.ztspeech.simutalk2.qa.MainActivity: com.ztspeech.simutalk2.weibo.ISina iSina
com.ztspeech.simutalk2.qa.MainActivity: com.ztspeech.simutalk2.weibo.IRenren iRenren
com.ztspeech.simutalk2.qa.MainActivity: com.ztspeech.simutalk2.weibo.ITencent iTencent
com.ztspeech.simutalk2.qa.MainActivity: com.ztspeech.simutalk2.weibo.Ikaixin ikaixin
com.ztspeech.simutalk2.qa.MainActivity: MainActivity()
com.ztspeech.simutalk2.qa.MainActivity: android.content.Intent getService()
com.ztspeech.simutalk2.qa.MainActivity: com.ztspeech.simutalk2.qa.MainActivity getInstance()
com.ztspeech.simutalk2.qa.MainActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.ztspeech.simutalk2.qa.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.ztspeech.simutalk2.qa.MainActivity: void finish()
com.ztspeech.simutalk2.qa.MainActivity: void onPause()
com.ztspeech.simutalk2.qa.MainActivity: void hideNotification()
com.ztspeech.simutalk2.qa.MainActivity: void onStart()
com.ztspeech.simutalk2.qa.MainActivity: void showNotification(com.ztspeech.simutalk2.data.MsgDataList,com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.qa.MainActivity: void showNotification()
com.ztspeech.simutalk2.qa.MainActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.MainActivity: void initHostAddress()
com.ztspeech.simutalk2.qa.MainActivity: void initMyDictionary()
com.ztspeech.simutalk2.qa.MainActivity: void initData()
com.ztspeech.simutalk2.qa.MainActivity: void onResume()
com.ztspeech.simutalk2.qa.MainActivity: void onRestart()
com.ztspeech.simutalk2.qa.MainActivity: java.lang.String getVersionName()
com.ztspeech.simutalk2.qa.MainActivity: void toastMsg(java.lang.String,int)
com.ztspeech.simutalk2.qa.MainActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.MainActivity: void onLowMemory()
com.ztspeech.simutalk2.qa.MainActivity: boolean isAppOnForeground()
com.ztspeech.simutalk2.qa.MainTabActivity
com.ztspeech.simutalk2.qa.MainTabActivity: MainTabActivity()
com.ztspeech.simutalk2.qa.MainTabActivity: com.ztspeech.simutalk2.qa.MainTabActivity getInstance()
com.ztspeech.simutalk2.qa.MainTabActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.qa.MainTabActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.MainTabActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.MainTabActivity: void updateTaskCount()
com.ztspeech.simutalk2.qa.MainTabActivity: void onTabChanged(java.lang.String)
com.ztspeech.simutalk2.qa.MainTabActivity: void updateMesage()
com.ztspeech.simutalk2.qa.MessageActivity
com.ztspeech.simutalk2.qa.MessageActivity: int NOTIFICATION_ID
com.ztspeech.simutalk2.qa.MessageActivity: boolean mMessageChanged
com.ztspeech.simutalk2.qa.MessageActivity: com.ztspeech.simutalk2.net.PostPackage$IHttpPostListener mSetQusetionListener
com.ztspeech.simutalk2.qa.MessageActivity: MessageActivity()
com.ztspeech.simutalk2.qa.MessageActivity: boolean isShowNotifitionTip(com.ztspeech.simutalk2.data.MsgDataList)
com.ztspeech.simutalk2.qa.MessageActivity: void onStart()
com.ztspeech.simutalk2.qa.MessageActivity: void onStop()
com.ztspeech.simutalk2.qa.MessageActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.MessageActivity: void setEditTextModel()
com.ztspeech.simutalk2.qa.MessageActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.ztspeech.simutalk2.qa.MessageActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.ztspeech.simutalk2.qa.MessageActivity: void finish()
com.ztspeech.simutalk2.qa.MessageActivity: void speakStr(java.lang.String)
com.ztspeech.simutalk2.qa.MessageActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.MessageActivity: void CloseQuestion()
com.ztspeech.simutalk2.qa.MessageActivity: void onNetPostResult(com.ztspeech.simutalk2.net.PostPackage,com.ztspeech.simutalk2.net.ResultPackage)
com.ztspeech.simutalk2.qa.MessageActivity: void updateMesage()
com.ztspeech.simutalk2.qa.MessageActivity: void isShowTipDialog(java.lang.String)
com.ztspeech.simutalk2.qa.MessageActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.qa.MessageActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.qa.MsgGroupListActivity
com.ztspeech.simutalk2.qa.MsgGroupListActivity: com.ztspeech.simutalk2.qa.MsgGroupListActivity instance
com.ztspeech.simutalk2.qa.MsgGroupListActivity: boolean isViewUpdate
com.ztspeech.simutalk2.qa.MsgGroupListActivity: MsgGroupListActivity()
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void onResume()
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void showPopMenu(android.view.View)
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void closePM()
com.ztspeech.simutalk2.qa.MsgGroupListActivity: boolean isShowNotifitionTip(com.ztspeech.simutalk2.data.MsgDataList)
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void onPause()
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.qa.MsgGroupListActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.ztspeech.simutalk2.qa.MsgGroupListActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void clearAllData()
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void updateMesage()
com.ztspeech.simutalk2.qa.MsgGroupListActivity: void onStop()
com.ztspeech.simutalk2.qa.MsgService
com.ztspeech.simutalk2.qa.MsgService: MsgService()
com.ztspeech.simutalk2.qa.MsgService: android.os.IBinder onBind(android.content.Intent)
com.ztspeech.simutalk2.qa.MsgService: void startThread()
com.ztspeech.simutalk2.qa.MsgService: void hideNotification()
com.ztspeech.simutalk2.qa.MsgService: void onStart(android.content.Intent,int)
com.ztspeech.simutalk2.qa.MsgService: void onCreate()
com.ztspeech.simutalk2.qa.MsgService: boolean isAppOnForeground()
com.ztspeech.simutalk2.qa.MsgService: void onDestroy()
com.ztspeech.simutalk2.qa.MsgService: void showNotification()
com.ztspeech.simutalk2.qa.PostVoiceDataToServerEngine
com.ztspeech.simutalk2.qa.PostVoiceDataToServerEngine: PostVoiceDataToServerEngine(android.content.Context,android.os.Handler)
com.ztspeech.simutalk2.qa.PostVoiceDataToServerEngine: void onPreHttp()
com.ztspeech.simutalk2.qa.PostVoiceDataToServerEngine: void onParseHttp(java.lang.String)
com.ztspeech.simutalk2.qa.PostVoiceDataToServerEngine: void onPostHttp(java.lang.Object)
com.ztspeech.simutalk2.qa.SolveQuestionActivity
com.ztspeech.simutalk2.qa.SolveQuestionActivity: java.lang.String PARAM_TYPE
com.ztspeech.simutalk2.qa.SolveQuestionActivity: java.lang.String PARAM_ID
com.ztspeech.simutalk2.qa.SolveQuestionActivity: int TYPE_ASK
com.ztspeech.simutalk2.qa.SolveQuestionActivity: int TYPE_SOLVE
com.ztspeech.simutalk2.qa.SolveQuestionActivity: boolean mMessageChanged
com.ztspeech.simutalk2.qa.SolveQuestionActivity: SolveQuestionActivity()
com.ztspeech.simutalk2.qa.SolveQuestionActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.SolveQuestionActivity: boolean isShowNotifitionTip(com.ztspeech.simutalk2.data.MsgDataList)
com.ztspeech.simutalk2.qa.SolveQuestionActivity: void onResume()
com.ztspeech.simutalk2.qa.SolveQuestionActivity: void onPause()
com.ztspeech.simutalk2.qa.SolveQuestionActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.ztspeech.simutalk2.qa.SolveQuestionActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.SolveQuestionActivity: void updateMesage()
com.ztspeech.simutalk2.qa.SolveQuestionActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.qa.SolveQuestionActivity: void onStop()
com.ztspeech.simutalk2.qa.UpdateBaseActivity
com.ztspeech.simutalk2.qa.UpdateBaseActivity: UpdateBaseActivity()
com.ztspeech.simutalk2.qa.UpdateBaseActivity: int getmDelay()
com.ztspeech.simutalk2.qa.UpdateBaseActivity: void setmDelay(int)
com.ztspeech.simutalk2.qa.UpdateBaseActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.UpdateBaseActivity: void onPause()
com.ztspeech.simutalk2.qa.UpdateBaseActivity: void onResume()
com.ztspeech.simutalk2.qa.UpdateBaseActivity: void updateMesage()
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: UpdateBaseTabActivity()
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: int getmDelay()
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: void setmDelay(int)
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: void onPause()
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: void onResume()
com.ztspeech.simutalk2.qa.UpdateBaseTabActivity: void updateMesage()
com.ztspeech.simutalk2.qa.UserStateActivity
com.ztspeech.simutalk2.qa.UserStateActivity: java.lang.String PARAM_NAME
com.ztspeech.simutalk2.qa.UserStateActivity: java.lang.String PARAM_TEXT
com.ztspeech.simutalk2.qa.UserStateActivity: java.lang.String PARAM_TIME
com.ztspeech.simutalk2.qa.UserStateActivity: java.lang.String PARAM_TYPE
com.ztspeech.simutalk2.qa.UserStateActivity: com.ztspeech.simutalk2.qa.UserStateActivity mInstance
com.ztspeech.simutalk2.qa.UserStateActivity: boolean isTaskListUpdate
com.ztspeech.simutalk2.qa.UserStateActivity: cn.ac.ia.directtrans.json.QuestionInfo mQuestionInfo
com.ztspeech.simutalk2.qa.UserStateActivity: UserStateActivity()
com.ztspeech.simutalk2.qa.UserStateActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.UserStateActivity: void onWindowFocusChanged(boolean)
com.ztspeech.simutalk2.qa.UserStateActivity: void onResume()
com.ztspeech.simutalk2.qa.UserStateActivity: void onRestart()
com.ztspeech.simutalk2.qa.UserStateActivity: void onStart()
com.ztspeech.simutalk2.qa.UserStateActivity: void setVisible(boolean)
com.ztspeech.simutalk2.qa.UserStateActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.ztspeech.simutalk2.qa.UserStateActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.ztspeech.simutalk2.qa.UserStateActivity: void askBirdFly()
com.ztspeech.simutalk2.qa.UserStateActivity: void askSend()
com.ztspeech.simutalk2.qa.UserStateActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.UserStateActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.qa.UserStateActivity: void onNetPostResult(com.ztspeech.simutalk2.net.PostPackage,com.ztspeech.simutalk2.net.ResultPackage)
com.ztspeech.simutalk2.qa.UserStateActivity: void showTaskCount(int)
com.ztspeech.simutalk2.qa.UserStateActivity: void updateMesage()
com.ztspeech.simutalk2.qa.UserStateActivity: void isShowTipDialog(java.lang.String)
com.ztspeech.simutalk2.qa.UserStateActivity: void showFishCount()
com.ztspeech.simutalk2.qa.UserStateActivity: void onStop()
com.ztspeech.simutalk2.qa.WaitingActivity
com.ztspeech.simutalk2.qa.WaitingActivity: WaitingActivity()
com.ztspeech.simutalk2.qa.WaitingActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.qa.WaitingActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.qa.WaitingActivity: void finish()
com.ztspeech.simutalk2.qa.WaitingActivity: void stop()
com.ztspeech.simutalk2.qa.WaitingActivity: void waiting(android.app.Activity,int)
com.ztspeech.simutalk2.qa.WaitingActivity: void waiting(android.app.Activity,int,com.ztspeech.simutalk2.qa.WaitingActivity$OnWaitingListener)
com.ztspeech.simutalk2.qa.WaitingActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.WaitingActivity$OnWaitingListener
com.ztspeech.simutalk2.qa.WaitingActivity$OnWaitingListener: void onCancel()
com.ztspeech.simutalk2.qa.data.DBTable
com.ztspeech.simutalk2.qa.data.DBTable: java.lang.String tableName
com.ztspeech.simutalk2.qa.data.DBTable: android.database.sqlite.SQLiteOpenHelper database
com.ztspeech.simutalk2.qa.data.DBTable: DBTable()
com.ztspeech.simutalk2.qa.data.DBTable: void setDataBase(android.database.sqlite.SQLiteOpenHelper)
com.ztspeech.simutalk2.qa.data.DBTable: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.simutalk2.qa.data.DBTable: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.simutalk2.qa.data.DBTable: android.database.sqlite.SQLiteDatabase getReadableDatabase()
com.ztspeech.simutalk2.qa.data.DBTable: void clearTable()
com.ztspeech.simutalk2.qa.data.DBTable: android.database.sqlite.SQLiteDatabase getWritableDatabase()
com.ztspeech.simutalk2.qa.data.FriendData
com.ztspeech.simutalk2.qa.data.FriendData: int TYPE_ASK
com.ztspeech.simutalk2.qa.data.FriendData: int TYPE_SOLVE
com.ztspeech.simutalk2.qa.data.FriendData: FriendData(long,java.lang.String)
com.ztspeech.simutalk2.qa.data.FriendDataList
com.ztspeech.simutalk2.qa.data.FriendDataList: FriendDataList()
com.ztspeech.simutalk2.qa.data.FriendDataList: com.ztspeech.simutalk2.qa.data.FriendDataList getInstance()
com.ztspeech.simutalk2.qa.data.FriendDataList: long getNewId()
com.ztspeech.simutalk2.qa.data.QuestionData
com.ztspeech.simutalk2.qa.data.QuestionData: cn.ac.ia.directtrans.json.QuestionInfo ask
com.ztspeech.simutalk2.qa.data.QuestionData: cn.ac.ia.directtrans.json.QuestionInfo solve
com.ztspeech.simutalk2.qa.data.QuestionData: boolean look_over
com.ztspeech.simutalk2.qa.data.QuestionData: com.ztspeech.simutalk2.data.MsgDataList msg
com.ztspeech.simutalk2.qa.data.QuestionData: int TYPE_QUESTION
com.ztspeech.simutalk2.qa.data.QuestionData: int TYPE_MSG
com.ztspeech.simutalk2.qa.data.QuestionData: boolean changed
com.ztspeech.simutalk2.qa.data.QuestionData: int state
com.ztspeech.simutalk2.qa.data.QuestionData: QuestionData()
com.ztspeech.simutalk2.qa.data.QuestionData: boolean isSolved()
com.ztspeech.simutalk2.qa.data.QuestionData: long getTime()
com.ztspeech.simutalk2.qa.data.QuestionDataItem
com.ztspeech.simutalk2.qa.data.QuestionDataItem: int TYPE_ASK
com.ztspeech.simutalk2.qa.data.QuestionDataItem: int TYPE_SOLVE
com.ztspeech.simutalk2.qa.data.QuestionDataItem: cn.ac.ia.directtrans.json.QuestionInfo info
com.ztspeech.simutalk2.qa.data.QuestionDataItem: QuestionDataItem()
com.ztspeech.simutalk2.qa.data.QuestionDataItem: void setInfo(cn.ac.ia.directtrans.json.QuestionInfo)
com.ztspeech.simutalk2.qa.data.QuestionDataList
com.ztspeech.simutalk2.qa.data.QuestionDataList: boolean isChanged
com.ztspeech.simutalk2.qa.data.QuestionDataList: QuestionDataList()
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.qa.data.QuestionDataList getInstance()
com.ztspeech.simutalk2.qa.data.QuestionDataList: void add(com.ztspeech.simutalk2.qa.data.QuestionData)
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.qa.data.QuestionData get(int)
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.qa.data.QuestionData findByAskId(long)
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.qa.data.QuestionData findBySolveId(long)
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.qa.data.QuestionData findById(long)
com.ztspeech.simutalk2.qa.data.QuestionDataList: void updateItem(com.ztspeech.simutalk2.qa.data.QuestionData)
com.ztspeech.simutalk2.qa.data.QuestionDataList: void addToDB(com.ztspeech.simutalk2.qa.data.QuestionData)
com.ztspeech.simutalk2.qa.data.QuestionDataList: void delete(java.lang.Integer[])
com.ztspeech.simutalk2.qa.data.QuestionDataList: void loadDB()
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.data.DataObject findById(long)
com.ztspeech.simutalk2.qa.data.QuestionDataList: com.ztspeech.simutalk2.data.DataObject get(int)
com.ztspeech.simutalk2.qa.message.ProcessMessage
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isAutoTTS
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.qa.message.ProcessMessage instance
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.data.UserInfo mUser
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.data.FriendDataList mFriends
com.ztspeech.simutalk2.qa.message.ProcessMessage: cn.ac.ia.directtrans.json.JsonGetMessage jsonGetMessage
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.net.RequestPackage message
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.data.MsgGroupList mMsgGroupList
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.data.UserInfoList mUserList
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.net.PostPackage mPostPackage
com.ztspeech.simutalk2.qa.message.ProcessMessage: java.lang.Thread mTread
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isStop
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isRuning
com.ztspeech.simutalk2.qa.message.ProcessMessage: java.lang.String host
com.ztspeech.simutalk2.qa.message.ProcessMessage: int SLEEP_ACTIVE_TIME
com.ztspeech.simutalk2.qa.message.ProcessMessage: int SLEEP_NO_ACTIVE_TIME
com.ztspeech.simutalk2.qa.message.ProcessMessage: int SLEEP_TALKING_TIME
com.ztspeech.simutalk2.qa.message.ProcessMessage: int RELOGINCOUNTTOSTOP
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean mSleepStateChanged
com.ztspeech.simutalk2.qa.message.ProcessMessage: int mReloginCount
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isTalking
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isAppActive
com.ztspeech.simutalk2.qa.message.ProcessMessage: void <clinit>()
com.ztspeech.simutalk2.qa.message.ProcessMessage: ProcessMessage()
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean getIsRunning()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void setActiveState(boolean)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void setTalking(boolean)
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.qa.message.ProcessMessage getInstance()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void stop()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void set(android.content.Context,java.lang.String)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void start()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void onNetPostResult(com.ztspeech.simutalk2.net.PostPackage,com.ztspeech.simutalk2.net.ResultPackage)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void reLogin()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void processString(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void process(com.ztspeech.simutalk2.net.ResultPackage)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void OnLogin(java.lang.String)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void process(cn.ac.ia.directtrans.json.JsonData,boolean)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void updateQusetion(cn.ac.ia.directtrans.json.JsonData)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void updateOnLineState(cn.ac.ia.directtrans.json.JsonData)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void deleteMeeting(cn.ac.ia.directtrans.json.JsonData)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void getMessage(cn.ac.ia.directtrans.json.JsonData,boolean)
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isShowMessage(cn.ac.ia.directtrans.json.JsonMessage)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void doMessage(cn.ac.ia.directtrans.json.JsonMessage)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void updateAskList(cn.ac.ia.directtrans.json.JsonMessage)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void updateFishList(cn.ac.ia.directtrans.json.JsonMessage)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void run()
com.ztspeech.simutalk2.qa.message.ProcessMessage: com.ztspeech.simutalk2.net.RequestPackage getRequset()
com.ztspeech.simutalk2.qa.message.ProcessMessage: boolean isRegister()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void updateMeetings(cn.ac.ia.directtrans.json.JsonData)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void threadSleep(int)
com.ztspeech.simutalk2.qa.message.ProcessMessage: java.io.InputStream getPlayData(java.lang.String)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void onTtsPlayEnd()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void onTtsPlayError(int)
com.ztspeech.simutalk2.qa.message.ProcessMessage: void onTtsPlayStart()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void onTtsPlayLoadDataEnd()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void onTtsPlayLoadDataStart()
com.ztspeech.simutalk2.qa.message.ProcessMessage: void isShowTipDialog(java.lang.String)
com.ztspeech.simutalk2.qa.message.TipDialog
com.ztspeech.simutalk2.qa.message.TipDialog: TipDialog()
com.ztspeech.simutalk2.qa.message.TipDialog: void show(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.simutalk2.qa.view.AdapterItemView
com.ztspeech.simutalk2.qa.view.AdapterItemView: com.ztspeech.simutalk2.data.DataObject mData
com.ztspeech.simutalk2.qa.view.AdapterItemView: AdapterItemView(android.content.Context)
com.ztspeech.simutalk2.qa.view.AdapterItemView: com.ztspeech.simutalk2.data.DataObject getData()
com.ztspeech.simutalk2.qa.view.AdapterItemView: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.qa.view.AdapterItemView: void init(android.content.Context)
com.ztspeech.simutalk2.qa.view.AdapterItemView: void clearCache()
com.ztspeech.simutalk2.qa.view.DataListAdapter
com.ztspeech.simutalk2.qa.view.DataListAdapter: DataListAdapter(android.content.Context,com.ztspeech.simutalk2.data.DataListObejct)
com.ztspeech.simutalk2.qa.view.DataListAdapter: DataListAdapter(android.content.Context)
com.ztspeech.simutalk2.qa.view.DataListAdapter: void setDataList(com.ztspeech.simutalk2.data.DataListObejct)
com.ztspeech.simutalk2.qa.view.DataListAdapter: int getCount()
com.ztspeech.simutalk2.qa.view.DataListAdapter: java.lang.Object getItem(int)
com.ztspeech.simutalk2.qa.view.DataListAdapter: long getItemId(int)
com.ztspeech.simutalk2.qa.view.DataListAdapter: com.ztspeech.simutalk2.qa.view.AdapterItemView getAdapterItemView(android.content.Context)
com.ztspeech.simutalk2.qa.view.DataListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: DirWordSelectDialog(android.content.Context)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: com.ztspeech.simutalk2.qa.view.DirWordSelectDialog setTitle(java.lang.String)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: com.ztspeech.simutalk2.qa.view.DirWordSelectDialog setButton(com.ztspeech.simutalk2.qa.view.DirWordSelectDialog$SimuTalkSendDialogListener,com.ztspeech.simutalk2.qa.view.DirWordSelectDialog$SimuTalkSendDialogListener)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: com.ztspeech.simutalk2.qa.view.DirWordSelectDialog setButton(java.lang.String,java.lang.String,com.ztspeech.simutalk2.qa.view.DirWordSelectDialog$SimuTalkSendDialogListener,com.ztspeech.simutalk2.qa.view.DirWordSelectDialog$SimuTalkSendDialogListener)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: com.ztspeech.simutalk2.qa.view.DirWordSelectDialog setItems(java.util.ArrayList,android.widget.AdapterView$OnItemClickListener)
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog: void notifyDataSetChanged()
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog$SimuTalkSendDialogListener
com.ztspeech.simutalk2.qa.view.DirWordSelectDialog$SimuTalkSendDialogListener: void onClick()
com.ztspeech.simutalk2.qa.view.FindUserItemView
com.ztspeech.simutalk2.qa.view.FindUserItemView: FindUserItemView(android.content.Context)
com.ztspeech.simutalk2.qa.view.FindUserItemView: FindUserItemView(android.content.Context,com.ztspeech.simutalk2.net.ListViewImageEngine)
com.ztspeech.simutalk2.qa.view.FindUserItemView: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.qa.view.FindUserItemView: void init(android.content.Context)
com.ztspeech.simutalk2.qa.view.FindUserItemView: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.view.FindUserItemView: void clearCache()
com.ztspeech.simutalk2.qa.view.FriendItemView
com.ztspeech.simutalk2.qa.view.FriendItemView: FriendItemView(android.content.Context)
com.ztspeech.simutalk2.qa.view.FriendItemView: FriendItemView(android.content.Context,com.ztspeech.simutalk2.net.ListViewImageEngine)
com.ztspeech.simutalk2.qa.view.FriendItemView: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.qa.view.FriendItemView: void init(android.content.Context)
com.ztspeech.simutalk2.qa.view.FriendItemView: void clearCache()
com.ztspeech.simutalk2.qa.view.InterpretView
com.ztspeech.simutalk2.qa.view.InterpretView: com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface mNewRecognizerViewListenerInterface
com.ztspeech.simutalk2.qa.view.InterpretView: InterpretView(android.content.Context,android.os.Handler,android.view.View,android.view.View$OnClickListener)
com.ztspeech.simutalk2.qa.view.InterpretView: InterpretView(android.content.Context,android.os.Handler,android.view.View$OnClickListener)
com.ztspeech.simutalk2.qa.view.InterpretView: void dispRresultList(java.util.ArrayList)
com.ztspeech.simutalk2.qa.view.InterpretView: void startViewAnim()
com.ztspeech.simutalk2.qa.view.InterpretView: void clearViewAnim()
com.ztspeech.simutalk2.qa.view.InterpretView: void _clearViewAnim()
com.ztspeech.simutalk2.qa.view.InterpretView: void startNoVoiceAnim()
com.ztspeech.simutalk2.qa.view.InterpretView: void clearNoVoiceAnim()
com.ztspeech.simutalk2.qa.view.InterpretView: void setBtnRecordEnable(boolean)
com.ztspeech.simutalk2.qa.view.InterpretView: void setBtnVoiceAnimEnable(boolean)
com.ztspeech.simutalk2.qa.view.InterpretView: void setBtnRecordBg(int)
com.ztspeech.simutalk2.qa.view.InterpretView: void setTextStatus(int)
com.ztspeech.simutalk2.qa.view.InterpretView: void setTextStatusDisp(int)
com.ztspeech.simutalk2.qa.view.InterpretView: void setRecordLayoutDisp(int)
com.ztspeech.simutalk2.qa.view.InterpretView: void setBtnCancelDisp(int)
com.ztspeech.simutalk2.qa.view.InterpretView: void showPopWindowLocation()
com.ztspeech.simutalk2.qa.view.InterpretView: void dismissPopWindow()
com.ztspeech.simutalk2.qa.view.MessageItemView
com.ztspeech.simutalk2.qa.view.MessageItemView: MessageItemView(android.content.Context,com.ztspeech.simutalk2.qa.view.MessageItemView$OnMessageClickListener)
com.ztspeech.simutalk2.qa.view.MessageItemView: MessageItemView(android.content.Context,com.ztspeech.simutalk2.qa.view.MessageItemView$OnMessageClickListener,com.ztspeech.simutalk2.net.ListViewImageEngine)
com.ztspeech.simutalk2.qa.view.MessageItemView: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.qa.view.MessageItemView: void clearCache()
com.ztspeech.simutalk2.qa.view.MessageItemView: void init(android.content.Context)
com.ztspeech.simutalk2.qa.view.MessageItemView: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.view.MessageItemView$OnMessageClickListener
com.ztspeech.simutalk2.qa.view.MessageItemView$OnMessageClickListener: void OnClick(java.lang.String,com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.qa.view.MsgGroupItemView
com.ztspeech.simutalk2.qa.view.MsgGroupItemView: MsgGroupItemView(android.content.Context)
com.ztspeech.simutalk2.qa.view.MsgGroupItemView: MsgGroupItemView(android.content.Context,com.ztspeech.simutalk2.net.ListViewImageEngine)
com.ztspeech.simutalk2.qa.view.MsgGroupItemView: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.qa.view.MsgGroupItemView: void init(android.content.Context)
com.ztspeech.simutalk2.qa.view.MsgGroupItemView: void clearCache()
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView: SolveQuestionItemView(android.content.Context,com.ztspeech.simutalk2.qa.view.SolveQuestionItemView$OnMessageClickListener)
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView: SolveQuestionItemView(android.content.Context,com.ztspeech.simutalk2.qa.view.SolveQuestionItemView$OnMessageClickListener,com.ztspeech.simutalk2.net.ListViewImageEngine)
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView: void init(android.content.Context)
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView: void onClick(android.view.View)
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView: void clearCache()
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView$OnMessageClickListener
com.ztspeech.simutalk2.qa.view.SolveQuestionItemView$OnMessageClickListener: void OnClick(java.lang.String,com.ztspeech.simutalk2.data.MsgInfoData)
com.ztspeech.simutalk2.trans.AboutActivity
com.ztspeech.simutalk2.trans.AboutActivity: AboutActivity()
com.ztspeech.simutalk2.trans.AboutActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.AboutActivity: java.lang.String getVersionName()
com.ztspeech.simutalk2.trans.AppUpdate
com.ztspeech.simutalk2.trans.AppUpdate: AppUpdate()
com.ztspeech.simutalk2.trans.AppUpdate: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.HelpActivity
com.ztspeech.simutalk2.trans.HelpActivity: HelpActivity()
com.ztspeech.simutalk2.trans.HelpActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.InterpretActivity
com.ztspeech.simutalk2.trans.InterpretActivity: boolean isWorking
com.ztspeech.simutalk2.trans.InterpretActivity: android.widget.LinearLayout controlLayout
com.ztspeech.simutalk2.trans.InterpretActivity: com.ztspeech.simutalk2.data.TransTextTable mTableTransText
com.ztspeech.simutalk2.trans.InterpretActivity: boolean isDeletefromMyLiberary
com.ztspeech.simutalk2.trans.InterpretActivity: InterpretActivity()
com.ztspeech.simutalk2.trans.InterpretActivity: void onDestroy()
com.ztspeech.simutalk2.trans.InterpretActivity: void onStop()
com.ztspeech.simutalk2.trans.InterpretActivity: com.ztspeech.simutalk2.trans.InterpretActivity getInstance()
com.ztspeech.simutalk2.trans.InterpretActivity: void setAutoTTS(boolean)
com.ztspeech.simutalk2.trans.InterpretActivity: void setOnlyRecoginze(boolean)
com.ztspeech.simutalk2.trans.InterpretActivity: void setS2sType(java.lang.String)
com.ztspeech.simutalk2.trans.InterpretActivity: void setUserName(java.lang.String)
com.ztspeech.simutalk2.trans.InterpretActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.InterpretActivity: void setFontSize(int)
com.ztspeech.simutalk2.trans.InterpretActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.trans.InterpretActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.ztspeech.simutalk2.trans.InterpretActivity: void initPopMenu(android.view.View)
com.ztspeech.simutalk2.trans.InterpretActivity: void showPopMenu(android.view.View,int)
com.ztspeech.simutalk2.trans.InterpretActivity: void closePM()
com.ztspeech.simutalk2.trans.InterpretActivity: void initPopMore(android.view.View)
com.ztspeech.simutalk2.trans.InterpretActivity: void showPopMore(int)
com.ztspeech.simutalk2.trans.InterpretActivity: void initPopCL(android.view.View)
com.ztspeech.simutalk2.trans.InterpretActivity: void showPopChangeLanguage(android.view.View)
com.ztspeech.simutalk2.trans.InterpretActivity: void sendSMS1(java.lang.String)
com.ztspeech.simutalk2.trans.InterpretActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.trans.InterpretActivity: void setIsDeletefromMyLiberaryTrue()
com.ztspeech.simutalk2.trans.InterpretActivity: void onResume()
com.ztspeech.simutalk2.trans.InterpretActivity: void speakViewAdapterCheckedChange(com.ztspeech.simutalk2.trans.speak.SpeakItemData,java.lang.String)
com.ztspeech.simutalk2.trans.InterpretActivity: void onSpeakViewWaitBegin()
com.ztspeech.simutalk2.trans.InterpretActivity: void onSpeakViewWaitEnd()
com.ztspeech.simutalk2.trans.InterpretActivity: void onSpeakViewError(int)
com.ztspeech.simutalk2.trans.InterpretActivity: void onSpeakViewResultByLianxuR(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.InterpretActivity: void onTranslatorViewResult(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.InterpretActivity: void onSpeakViewResult(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.InterpretActivity: void onScroll(android.widget.AbsListView,int,int,int)
com.ztspeech.simutalk2.trans.InterpretActivity: void onScrollStateChanged(android.widget.AbsListView,int)
com.ztspeech.simutalk2.trans.InterpretActivity: void setLocaleTTS(boolean)
com.ztspeech.simutalk2.trans.InterpretActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.trans.InterpretActivity: void onPause()
com.ztspeech.simutalk2.trans.InterpretActivity: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ztspeech.simutalk2.trans.LoginActivity
com.ztspeech.simutalk2.trans.LoginActivity: LoginActivity()
com.ztspeech.simutalk2.trans.LoginActivity: void finish()
com.ztspeech.simutalk2.trans.LoginActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.LoginActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.trans.SetFrontSizeActivity
com.ztspeech.simutalk2.trans.SetFrontSizeActivity: SetFrontSizeActivity()
com.ztspeech.simutalk2.trans.SetFrontSizeActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.SetFrontSizeActivity: void savelanguage(android.view.View)
com.ztspeech.simutalk2.trans.SetFrontSizeActivity: void onPause()
com.ztspeech.simutalk2.trans.SetFrontSizeActivity: void onDestroy()
com.ztspeech.simutalk2.trans.SetFrontSizeActivity: void onCheckedChanged(android.widget.RadioGroup,int)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: SetHeadProtraitActivity()
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void onStart()
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void selectImage(android.view.View)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void onDestroy()
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void copyFile(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivity: void setUserPhoto(java.lang.String)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivityEngine
com.ztspeech.simutalk2.trans.SetHeadProtraitActivityEngine: SetHeadProtraitActivityEngine(android.content.Context,android.os.Handler)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivityEngine: void onPreHttp()
com.ztspeech.simutalk2.trans.SetHeadProtraitActivityEngine: void onParseHttp(java.lang.String)
com.ztspeech.simutalk2.trans.SetHeadProtraitActivityEngine: void onPostHttp(java.lang.Object)
com.ztspeech.simutalk2.trans.SetNickNameActivity
com.ztspeech.simutalk2.trans.SetNickNameActivity: SetNickNameActivity()
com.ztspeech.simutalk2.trans.SetNickNameActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.SetNickNameActivity: void saveNickName(android.view.View)
com.ztspeech.simutalk2.trans.SetNickNameActivity: void onPause()
com.ztspeech.simutalk2.trans.SetNickNameActivity: void onDestroy()
com.ztspeech.simutalk2.trans.SetTranslanguageActivity
com.ztspeech.simutalk2.trans.SetTranslanguageActivity: SetTranslanguageActivity()
com.ztspeech.simutalk2.trans.SetTranslanguageActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.SetTranslanguageActivity: void savelanguage(android.view.View)
com.ztspeech.simutalk2.trans.SetTranslanguageActivity: void onPause()
com.ztspeech.simutalk2.trans.SetTranslanguageActivity: void onDestroy()
com.ztspeech.simutalk2.trans.SetTranslanguageActivity: void onCheckedChanged(android.widget.RadioGroup,int)
com.ztspeech.simutalk2.trans.SetTtsSoundActivity
com.ztspeech.simutalk2.trans.SetTtsSoundActivity: SetTtsSoundActivity()
com.ztspeech.simutalk2.trans.SetTtsSoundActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.SetTtsSoundActivity: void savelanguage(android.view.View)
com.ztspeech.simutalk2.trans.SetTtsSoundActivity: void onPause()
com.ztspeech.simutalk2.trans.SetTtsSoundActivity: void onDestroy()
com.ztspeech.simutalk2.trans.SetTtsSoundActivity: void onCheckedChanged(android.widget.RadioGroup,int)
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: int CONSTANT_SINA_WEIBO_COUNT
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: int CONSTANT_TENCENT_WEIBO_COUNT
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: int CONSTANT_RENREN_WEIBO_COUNT
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: int CONSTANT_KAIXIN_WEIBO_COUNT
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: SetWeiboCountBinderActivity()
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: void updateWeiboCountTxt()
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: void onStart()
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: void onPause()
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: void onDestroy()
com.ztspeech.simutalk2.trans.SetWeiboCountBinderActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.trans.UserPropose
com.ztspeech.simutalk2.trans.UserPropose: int TYPE_NEW
com.ztspeech.simutalk2.trans.UserPropose: int TYPE_OLD
com.ztspeech.simutalk2.trans.UserPropose: boolean mMessageChanged
com.ztspeech.simutalk2.trans.UserPropose: UserPropose()
com.ztspeech.simutalk2.trans.UserPropose: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.trans.UserPropose: void onClick(android.view.View)
com.ztspeech.simutalk2.trans.UserPropose: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: int getCount()
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: java.lang.Object getItem(int)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: long getItemId(int)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: AnimSmoothLvBaseAdapter(android.content.Context,java.util.List,android.widget.ListView)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void startAnim(android.view.View,int)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void clearCache(android.view.View)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void notifyDataSetChanged(boolean)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void addFootView(android.widget.ListView)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void smoothToBottomWithAnim(android.widget.ListView)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void onScroll(android.widget.AbsListView,int,int,int)
com.ztspeech.simutalk2.trans.speak.AnimSmoothLvBaseAdapter: void onScrollStateChanged(android.widget.AbsListView,int)
com.ztspeech.simutalk2.trans.speak.AudioClip
com.ztspeech.simutalk2.trans.speak.AudioClip: void finalize()
com.ztspeech.simutalk2.trans.speak.AudioClip: void setOnCompletionListener(com.ztspeech.simutalk2.trans.speak.AudioClip$IOnCompletionListener)
com.ztspeech.simutalk2.trans.speak.AudioClip: AudioClip(android.content.Context,int)
com.ztspeech.simutalk2.trans.speak.AudioClip: boolean play()
com.ztspeech.simutalk2.trans.speak.AudioClip: void onCompletion(android.media.MediaPlayer)
com.ztspeech.simutalk2.trans.speak.AudioClip: void release()
com.ztspeech.simutalk2.trans.speak.AudioClip$IOnCompletionListener
com.ztspeech.simutalk2.trans.speak.AudioClip$IOnCompletionListener: void audioClipCompletion()
com.ztspeech.simutalk2.trans.speak.SpeakAdapter
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void setOnSpeakViewAdapterListener(com.ztspeech.simutalk2.trans.speak.SpeakView$IOnSpeakViewAdapterCallback)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: SpeakAdapter(android.content.Context,com.ztspeech.simutalk2.data.TransTextTable,android.widget.ListView)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void setFontSize(float)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void addItem(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void update(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void updateAfterSpeak(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void commont(int,com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: int removeItem(int,com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void clear()
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: int getCount()
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: java.lang.Object getItem(int)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: long getItemId(int)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.trans.speak.SpeakAdapter: void setFocus(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakItemData
com.ztspeech.simutalk2.trans.speak.SpeakItemData: com.ztspeech.simutalk2.trans.speak.SpeakItemData isFocus
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String type
com.ztspeech.simutalk2.trans.speak.SpeakItemData: int id
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String speak
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String trans
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String mspeak
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String taskId
com.ztspeech.simutalk2.trans.speak.SpeakItemData: int flag
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.io.InputStream speakStream
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.io.InputStream transStream
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String languageSpeak
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String languageTrans
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.String datetime
com.ztspeech.simutalk2.trans.speak.SpeakItemData: java.lang.Integer recordId
com.ztspeech.simutalk2.trans.speak.SpeakItemData: boolean focus
com.ztspeech.simutalk2.trans.speak.SpeakItemData: boolean isExistTrans()
com.ztspeech.simutalk2.trans.speak.SpeakItemData: boolean isTransTTS()
com.ztspeech.simutalk2.trans.speak.SpeakItemData: SpeakItemData()
com.ztspeech.simutalk2.trans.speak.SpeakItemData: SpeakItemData(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,java.io.InputStream,boolean)
com.ztspeech.simutalk2.trans.speak.SpeakItemData: SpeakItemData(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,java.io.InputStream,boolean,java.lang.String)
com.ztspeech.simutalk2.trans.speak.SpeakItemData: SpeakItemData(java.lang.String,java.lang.String,java.lang.String,boolean)
com.ztspeech.simutalk2.trans.speak.SpeakItemData$Define
com.ztspeech.simutalk2.trans.speak.SpeakItemData$Define: int SPEAK_TYPE_SPEAK
com.ztspeech.simutalk2.trans.speak.SpeakItemData$Define: int SPEAK_TYPE_TEXT
com.ztspeech.simutalk2.trans.speak.SpeakItemData$Define: int SPEAK_TYPE_TRANS
com.ztspeech.simutalk2.trans.speak.SpeakItemData$Define: int SPEAK_TYPE_FULL
com.ztspeech.simutalk2.trans.speak.SpeakItemData$Define: SpeakItemData$Define(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakView
com.ztspeech.simutalk2.trans.speak.SpeakView: com.ztspeech.simutalk2.trans.speak.SpeakItemData data
com.ztspeech.simutalk2.trans.speak.SpeakView: SpeakView(android.content.Context,com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakView: void setFontSize(float)
com.ztspeech.simutalk2.trans.speak.SpeakView: void setData(com.ztspeech.simutalk2.trans.speak.SpeakItemData)
com.ztspeech.simutalk2.trans.speak.SpeakView: void setOnCallbackListener(com.ztspeech.simutalk2.trans.speak.SpeakView$IOnSpeakViewAdapterCallback)
com.ztspeech.simutalk2.trans.speak.SpeakView: void onClick(android.view.View)
com.ztspeech.simutalk2.trans.speak.SpeakView: void speakSpeak(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.trans.speak.SpeakView: void speakTrans(java.lang.String,java.lang.String)
com.ztspeech.simutalk2.trans.speak.SpeakView: void setBg(boolean)
com.ztspeech.simutalk2.trans.speak.SpeakView: int[] getBgResourceByType(java.lang.String)
com.ztspeech.simutalk2.trans.speak.SpeakView$IOnSpeakViewAdapterCallback
com.ztspeech.simutalk2.trans.speak.SpeakView$IOnSpeakViewAdapterCallback: void speakViewAdapterCheckedChange(com.ztspeech.simutalk2.trans.speak.SpeakItemData,java.lang.String)
com.ztspeech.simutalk2.view.ListViewAdapter
com.ztspeech.simutalk2.view.ListViewAdapter: com.ztspeech.simutalk2.data.DataListObejct mDataList
com.ztspeech.simutalk2.view.ListViewAdapter: android.content.Context mContext
com.ztspeech.simutalk2.view.ListViewAdapter: ListViewAdapter(android.content.Context,com.ztspeech.simutalk2.data.DataListObejct)
com.ztspeech.simutalk2.view.ListViewAdapter: int getCount()
com.ztspeech.simutalk2.view.ListViewAdapter: java.lang.Object getItem(int)
com.ztspeech.simutalk2.view.ListViewAdapter: long getItemId(int)
com.ztspeech.simutalk2.view.ListViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.simutalk2.view.ListViewAdapter: com.ztspeech.simutalk2.view.ListViewItem newItemView(android.content.Context)
com.ztspeech.simutalk2.view.ListViewAdapter: void OnListViewItemClick(int,long)
com.ztspeech.simutalk2.view.ListViewAdapter: void setOnListViewItemClickListener(com.ztspeech.simutalk2.view.ViewItemEvent$OnListViewItemClickListener)
com.ztspeech.simutalk2.view.ListViewItem
com.ztspeech.simutalk2.view.ListViewItem: void setOnListViewItemClickListener(com.ztspeech.simutalk2.view.ViewItemEvent$OnListViewItemClickListener)
com.ztspeech.simutalk2.view.ListViewItem: void doClickListener(int,long)
com.ztspeech.simutalk2.view.ListViewItem: ListViewItem(android.content.Context)
com.ztspeech.simutalk2.view.ListViewItem: void onClick(android.view.View)
com.ztspeech.simutalk2.view.ListViewItem: void setData(com.ztspeech.simutalk2.data.DataObject)
com.ztspeech.simutalk2.view.ViewItemEvent
com.ztspeech.simutalk2.view.ViewItemEvent: int OPEN
com.ztspeech.simutalk2.view.ViewItemEvent: int EDIT
com.ztspeech.simutalk2.view.ViewItemEvent: int DELETE
com.ztspeech.simutalk2.view.ViewItemEvent: int DETAIL
com.ztspeech.simutalk2.view.ViewItemEvent: int ADD
com.ztspeech.simutalk2.view.ViewItemEvent: int SELECT_TRUE
com.ztspeech.simutalk2.view.ViewItemEvent: int SELECT_FALSE
com.ztspeech.simutalk2.view.ViewItemEvent: ViewItemEvent()
com.ztspeech.simutalk2.view.ViewItemEvent$OnListViewItemClickListener
com.ztspeech.simutalk2.view.ViewItemEvent$OnListViewItemClickListener: void OnListViewItemClick(int,long)
com.ztspeech.simutalk2.weibo.Constant
com.ztspeech.simutalk2.weibo.Constant: int RESULT_USER_CANCEL_PROCESS
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED_REQUEST_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED_ENCODER_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_CLASS_CAST_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED_MALFORMEDURL_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED_JSON_PARSE_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED_ARG_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED_NETWORK_ERR
com.ztspeech.simutalk2.weibo.Constant: int RESULT_FAILED
com.ztspeech.simutalk2.weibo.Constant: int RESULT_OK
com.ztspeech.simutalk2.weibo.Constant: int RESULT_GET_FRIENDS_OK
com.ztspeech.simutalk2.weibo.Constant: int RESULT_GET_USERINFO_OK
com.ztspeech.simutalk2.weibo.Constant: int RESULT_POST_RECORD_OK
com.ztspeech.simutalk2.weibo.Constant: int RESULT_POST_RECORD_FAILED
com.ztspeech.simutalk2.weibo.Constant: java.lang.String packageName
com.ztspeech.simutalk2.weibo.Constant: int DIALOG_ID_DOWNLOADING
com.ztspeech.simutalk2.weibo.Constant: int DIALOG_ID_UPLOADING
com.ztspeech.simutalk2.weibo.Constant: int DIALOG_ID_GET_LOGGEDIN_USER
com.ztspeech.simutalk2.weibo.Constant: int DIALOG_ID_SEND_NEWSFEED
com.ztspeech.simutalk2.weibo.Constant: Constant()
com.ztspeech.simutalk2.weibo.EditContent
com.ztspeech.simutalk2.weibo.EditContent: EditContent()
com.ztspeech.simutalk2.weibo.EditContent: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.weibo.EditContent: void onClick(android.view.View)
com.ztspeech.simutalk2.weibo.IRenren
com.ztspeech.simutalk2.weibo.IRenren: IRenren(android.content.Context)
com.ztspeech.simutalk2.weibo.IRenren: void setClass()
com.ztspeech.simutalk2.weibo.IRenren: com.ztspeech.simutalk2.weibo.IRenren getInstance(android.content.Context)
com.ztspeech.simutalk2.weibo.IRenren: void init(android.content.Context)
com.ztspeech.simutalk2.weibo.IRenren: boolean isBinder()
com.ztspeech.simutalk2.weibo.IRenren: boolean unBinderRenren(android.content.Context)
com.ztspeech.simutalk2.weibo.IRenren: void bindRenren(android.content.Context,android.os.Handler)
com.ztspeech.simutalk2.weibo.IRenren: void sendWeibo(java.lang.String,android.content.Context)
com.ztspeech.simutalk2.weibo.IRenren: void saveStatus(int,int,android.content.Intent)
com.ztspeech.simutalk2.weibo.ISina
com.ztspeech.simutalk2.weibo.ISina: ISina(android.content.Context)
com.ztspeech.simutalk2.weibo.ISina: com.ztspeech.simutalk2.weibo.ISina getInstance(android.content.Context)
com.ztspeech.simutalk2.weibo.ISina: void setClass()
com.ztspeech.simutalk2.weibo.ISina: void setO2at()
com.ztspeech.simutalk2.weibo.ISina: void init()
com.ztspeech.simutalk2.weibo.ISina: void bindSina(android.content.Context,android.os.Handler)
com.ztspeech.simutalk2.weibo.ISina: void sendWeibo()
com.ztspeech.simutalk2.weibo.ISina: void sendWeibo(java.lang.String,android.content.Context)
com.ztspeech.simutalk2.weibo.ISina: boolean isBind()
com.ztspeech.simutalk2.weibo.ITencent
com.ztspeech.simutalk2.weibo.ITencent: int BIND_TENCENT_CODE
com.ztspeech.simutalk2.weibo.ITencent: com.ztspeech.simutalk2.weibo.ITencent getInstance(android.content.Context)
com.ztspeech.simutalk2.weibo.ITencent: void setClass()
com.ztspeech.simutalk2.weibo.ITencent: ITencent(android.content.Context)
com.ztspeech.simutalk2.weibo.ITencent: void init()
com.ztspeech.simutalk2.weibo.ITencent: com.tencent.weibo.oauthv1.OAuthV1 getOAuthV1()
com.ztspeech.simutalk2.weibo.ITencent: void bindTencent(android.content.Context,android.os.Handler)
com.ztspeech.simutalk2.weibo.ITencent: void sendWeibo(java.lang.String)
com.ztspeech.simutalk2.weibo.ITencent: void sendWeibo(java.lang.String,android.content.Context)
com.ztspeech.simutalk2.weibo.ITencent: void setOAuth()
com.ztspeech.simutalk2.weibo.ITencent: boolean saveStatus(com.tencent.weibo.oauthv1.OAuthV1)
com.ztspeech.simutalk2.weibo.ITencent: boolean isBind()
com.ztspeech.simutalk2.weibo.ITencent: void getUserApi()
com.ztspeech.simutalk2.weibo.Ikaixin
com.ztspeech.simutalk2.weibo.Ikaixin: Ikaixin(android.content.Context)
com.ztspeech.simutalk2.weibo.Ikaixin: void setClass()
com.ztspeech.simutalk2.weibo.Ikaixin: com.ztspeech.simutalk2.weibo.Ikaixin getInstance(android.content.Context)
com.ztspeech.simutalk2.weibo.Ikaixin: void init(android.content.Context)
com.ztspeech.simutalk2.weibo.Ikaixin: boolean isBinder()
com.ztspeech.simutalk2.weibo.Ikaixin: void unbinderKaixin(android.content.Context)
com.ztspeech.simutalk2.weibo.Ikaixin: void bindKaixin(android.content.Context,android.os.Handler)
com.ztspeech.simutalk2.weibo.Ikaixin: void sendWeibo(java.lang.String,android.content.Context)
com.ztspeech.simutalk2.weibo.Json
com.ztspeech.simutalk2.weibo.Json: Json(int)
com.ztspeech.simutalk2.weibo.Json: Json(java.lang.String)
com.ztspeech.simutalk2.weibo.Json: Json(org.json.JSONObject)
com.ztspeech.simutalk2.weibo.Json: Json()
com.ztspeech.simutalk2.weibo.Json: boolean put(java.lang.String,int)
com.ztspeech.simutalk2.weibo.Json: boolean put(java.lang.String,java.lang.Object)
com.ztspeech.simutalk2.weibo.Json: java.lang.String toString()
com.ztspeech.simutalk2.weibo.Json: java.lang.String toTestString()
com.ztspeech.simutalk2.weibo.Json: java.lang.String toNormalString()
com.ztspeech.simutalk2.weibo.Json: java.lang.String getString(java.lang.String)
com.ztspeech.simutalk2.weibo.Json: int getInt(java.lang.String)
com.ztspeech.simutalk2.weibo.Json: boolean getBoolean(java.lang.String)
com.ztspeech.simutalk2.weibo.Json: com.ztspeech.simutalk2.weibo.Json getJson(java.lang.String)
com.ztspeech.simutalk2.weibo.Json: com.ztspeech.simutalk2.weibo.Json[] getJsonArray(java.lang.String)
com.ztspeech.simutalk2.weibo.Json: java.lang.String toStringForTest()
com.ztspeech.simutalk2.weibo.PostRecordTask
com.ztspeech.simutalk2.weibo.PostRecordTask: android.app.ProgressDialog loadingDialog
com.ztspeech.simutalk2.weibo.PostRecordTask: boolean isCancel
com.ztspeech.simutalk2.weibo.PostRecordTask: PostRecordTask(android.content.Context)
com.ztspeech.simutalk2.weibo.PostRecordTask: void onPreExecute()
com.ztspeech.simutalk2.weibo.PostRecordTask: java.lang.Integer doInBackground(java.lang.Object[])
com.ztspeech.simutalk2.weibo.PostRecordTask: void onCancelled()
com.ztspeech.simutalk2.weibo.PostRecordTask: void onPostExecute(java.lang.Integer)
com.ztspeech.simutalk2.weibo.PostRecordTask: void dismissLoading()
com.ztspeech.simutalk2.weibo.PostRecordTask: void cancelRequest()
com.ztspeech.simutalk2.weibo.PostRecordTask: void onLoadingCacel()
com.ztspeech.simutalk2.weibo.PostRecordTask: void showLoading()
com.ztspeech.simutalk2.weibo.PostRecordTask: void onPostExecute(java.lang.Object)
com.ztspeech.simutalk2.weibo.PostRecordTask: java.lang.Object doInBackground(java.lang.Object[])
com.ztspeech.simutalk2.weibo.TencentWeiboDialog
com.ztspeech.simutalk2.weibo.TencentWeiboDialog: TencentWeiboDialog(android.content.Context,java.lang.String,com.tencent.weibo.oauthv1.OAuthV1,android.os.Handler)
com.ztspeech.simutalk2.weibo.TencentWeiboDialog: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.weibo.TencentWeiboDialog: void onBack()
com.ztspeech.simutalk2.weibo.XmlBase64
com.ztspeech.simutalk2.weibo.XmlBase64: XmlBase64()
com.ztspeech.simutalk2.weibo.XmlBase64: java.lang.String encode(byte[])
com.ztspeech.simutalk2.weibo.XmlBase64: java.lang.String utf8_decode(byte[],int,int)
com.ztspeech.simutalk2.weibo.XmlBase64: java.lang.StringBuffer encode(byte[],int,int,java.lang.StringBuffer)
com.ztspeech.simutalk2.weibo.XmlBase64: byte[] decode(java.lang.String)
com.ztspeech.simutalk2.weibo.XmlBase64: void decode(java.lang.String,java.io.ByteArrayOutputStream)
com.ztspeech.simutalk2.weibo.XmlBase64: boolean needBase64(java.lang.String)
com.ztspeech.simutalk2.weixinchat.AppRegister
com.ztspeech.simutalk2.weixinchat.AppRegister: AppRegister()
com.ztspeech.simutalk2.weixinchat.AppRegister: void onReceive(android.content.Context,android.content.Intent)
com.ztspeech.simutalk2.weixinchat.Constants
com.ztspeech.simutalk2.weixinchat.Constants: java.lang.String APP_ID
com.ztspeech.simutalk2.weixinchat.Constants: Constants()
com.ztspeech.simutalk2.weixinchat.Constants$ShowMsgActivity
com.ztspeech.simutalk2.weixinchat.Constants$ShowMsgActivity: java.lang.String STitle
com.ztspeech.simutalk2.weixinchat.Constants$ShowMsgActivity: java.lang.String SMessage
com.ztspeech.simutalk2.weixinchat.Constants$ShowMsgActivity: java.lang.String BAThumbData
com.ztspeech.simutalk2.weixinchat.Constants$ShowMsgActivity: Constants$ShowMsgActivity()
com.ztspeech.simutalk2.weixinchat.InterpretView2
com.ztspeech.simutalk2.weixinchat.InterpretView2: com.ztspeech.recognizer.interf.NewRecognizerViewListenerInterface mNewRecognizerViewListenerInterface
com.ztspeech.simutalk2.weixinchat.InterpretView2: InterpretView2(android.content.Context,android.os.Handler,android.view.View,android.view.View$OnClickListener)
com.ztspeech.simutalk2.weixinchat.InterpretView2: InterpretView2(android.content.Context,android.os.Handler,android.view.View$OnClickListener)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void dispRresultList(java.util.ArrayList)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void startViewAnim()
com.ztspeech.simutalk2.weixinchat.InterpretView2: void clearViewAnim()
com.ztspeech.simutalk2.weixinchat.InterpretView2: void _clearViewAnim()
com.ztspeech.simutalk2.weixinchat.InterpretView2: void startNoVoiceAnim()
com.ztspeech.simutalk2.weixinchat.InterpretView2: void clearNoVoiceAnim()
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setBtnRecordEnable(boolean)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setBtnVoiceAnimEnable(boolean)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setBtnRecordBg(int)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setTextStatus(int)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setTextStatusDisp(int)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setRecordLayoutDisp(int)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void setBtnCancelDisp(int)
com.ztspeech.simutalk2.weixinchat.InterpretView2: void showPopWindowLocation()
com.ztspeech.simutalk2.weixinchat.InterpretView2: void dismissPopWindow()
com.ztspeech.simutalk2.weixinchat.WchatActivity
com.ztspeech.simutalk2.weixinchat.WchatActivity: int TYPE_NEW
com.ztspeech.simutalk2.weixinchat.WchatActivity: int TYPE_OLD
com.ztspeech.simutalk2.weixinchat.WchatActivity: boolean isWorking
com.ztspeech.simutalk2.weixinchat.WchatActivity: boolean mMessageChanged
com.ztspeech.simutalk2.weixinchat.WchatActivity: WchatActivity()
com.ztspeech.simutalk2.weixinchat.WchatActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.weixinchat.WchatActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.simutalk2.weixinchat.WchatActivity: void onClick(android.view.View)
com.ztspeech.simutalk2.weixinchat.WchatActivity: void onBegin()
com.ztspeech.simutalk2.weixinchat.WchatActivity: void onEnd()
com.ztspeech.simutalk2.weixinchat.WchatActivity: void finish()
com.ztspeech.simutalk2.wxapi.WXEntryActivity
com.ztspeech.simutalk2.wxapi.WXEntryActivity: WXEntryActivity()
com.ztspeech.simutalk2.wxapi.WXEntryActivity: void onCreate(android.os.Bundle)
com.ztspeech.simutalk2.wxapi.WXEntryActivity: void onNewIntent(android.content.Intent)
com.ztspeech.simutalk2.wxapi.WXEntryActivity: void onReq(com.tencent.mm.sdk.openapi.BaseReq)
com.ztspeech.simutalk2.wxapi.WXEntryActivity: void onResp(com.tencent.mm.sdk.openapi.BaseResp)
com.ztspeech.translator.Translator
com.ztspeech.translator.Translator: Translator(android.content.Context,com.ztspeech.recognizer.OnEngineListener)
com.ztspeech.translator.Translator: boolean transCH2EN(java.lang.String,java.lang.Boolean)
com.ztspeech.translator.Translator: boolean transEN2CH(java.lang.String,java.lang.Boolean)
com.ztspeech.translator.interf.TranslatorInterface
com.ztspeech.translator.interf.TranslatorInterface: boolean transCH2EN(java.lang.String,java.lang.Boolean)
com.ztspeech.translator.interf.TranslatorInterface: boolean transEN2CH(java.lang.String,java.lang.Boolean)
com.ztspeech.weibo.sdk.android.Oauth2AccessToken
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: Oauth2AccessToken()
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: Oauth2AccessToken(java.lang.String)
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: Oauth2AccessToken(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: boolean isSessionValid()
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: java.lang.String getToken()
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: java.lang.String getRefreshToken()
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: void setRefreshToken(java.lang.String)
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: long getExpiresTime()
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: void setExpiresIn(java.lang.String)
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: void setExpiresTime(long)
com.ztspeech.weibo.sdk.android.Oauth2AccessToken: void setToken(java.lang.String)
com.ztspeech.weibo.sdk.android.Weibo
com.ztspeech.weibo.sdk.android.Weibo: java.lang.String URL_OAUTH2_ACCESS_AUTHORIZE
com.ztspeech.weibo.sdk.android.Weibo: java.lang.String redirecturl
com.ztspeech.weibo.sdk.android.Weibo: com.ztspeech.weibo.sdk.android.Oauth2AccessToken accessToken
com.ztspeech.weibo.sdk.android.Weibo: java.lang.String KEY_TOKEN
com.ztspeech.weibo.sdk.android.Weibo: java.lang.String KEY_EXPIRES
com.ztspeech.weibo.sdk.android.Weibo: java.lang.String KEY_REFRESHTOKEN
com.ztspeech.weibo.sdk.android.Weibo: boolean isWifi
com.ztspeech.weibo.sdk.android.Weibo: Weibo()
com.ztspeech.weibo.sdk.android.Weibo: com.ztspeech.weibo.sdk.android.Weibo getInstance(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.android.Weibo: void setupConsumerConfig(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.android.Weibo: void authorize(android.content.Context,com.ztspeech.weibo.sdk.android.WeiboAuthListener,boolean)
com.ztspeech.weibo.sdk.android.Weibo: void startAuthDialog(android.content.Context,com.ztspeech.weibo.sdk.android.WeiboAuthListener,boolean)
com.ztspeech.weibo.sdk.android.Weibo: void startDialog(android.content.Context,com.ztspeech.weibo.sdk.android.WeiboParameters,com.ztspeech.weibo.sdk.android.WeiboAuthListener,boolean)
com.ztspeech.weibo.sdk.android.WeiboAuthListener
com.ztspeech.weibo.sdk.android.WeiboAuthListener: void onComplete(android.os.Bundle)
com.ztspeech.weibo.sdk.android.WeiboAuthListener: void onWeiboException(com.ztspeech.weibo.sdk.android.WeiboException)
com.ztspeech.weibo.sdk.android.WeiboAuthListener: void onError(com.ztspeech.weibo.sdk.android.WeiboDialogError)
com.ztspeech.weibo.sdk.android.WeiboAuthListener: void onCancel()
com.ztspeech.weibo.sdk.android.WeiboDialog
com.ztspeech.weibo.sdk.android.WeiboDialog: WeiboDialog(android.content.Context,java.lang.String,com.ztspeech.weibo.sdk.android.WeiboAuthListener)
com.ztspeech.weibo.sdk.android.WeiboDialog: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.android.WeiboDialog: void onBack()
com.ztspeech.weibo.sdk.android.WeiboDialogError
com.ztspeech.weibo.sdk.android.WeiboDialogError: long serialVersionUID
com.ztspeech.weibo.sdk.android.WeiboDialogError: WeiboDialogError(java.lang.String,int,java.lang.String)
com.ztspeech.weibo.sdk.android.WeiboException
com.ztspeech.weibo.sdk.android.WeiboException: long serialVersionUID
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.String)
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.Exception)
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.String,int)
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.String,java.lang.Exception)
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.String,java.lang.Exception,int)
com.ztspeech.weibo.sdk.android.WeiboException: int getStatusCode()
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException()
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.String,java.lang.Throwable)
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(java.lang.Throwable)
com.ztspeech.weibo.sdk.android.WeiboException: WeiboException(int)
com.ztspeech.weibo.sdk.android.WeiboException: void setStatusCode(int)
com.ztspeech.weibo.sdk.android.WeiboParameters
com.ztspeech.weibo.sdk.android.WeiboParameters: WeiboParameters()
com.ztspeech.weibo.sdk.android.WeiboParameters: void add(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.android.WeiboParameters: void add(java.lang.String,int)
com.ztspeech.weibo.sdk.android.WeiboParameters: void add(java.lang.String,long)
com.ztspeech.weibo.sdk.android.WeiboParameters: void remove(java.lang.String)
com.ztspeech.weibo.sdk.android.WeiboParameters: void remove(int)
com.ztspeech.weibo.sdk.android.WeiboParameters: java.lang.String getKey(int)
com.ztspeech.weibo.sdk.android.WeiboParameters: java.lang.String getValue(java.lang.String)
com.ztspeech.weibo.sdk.android.WeiboParameters: java.lang.String getValue(int)
com.ztspeech.weibo.sdk.android.WeiboParameters: int size()
com.ztspeech.weibo.sdk.android.WeiboParameters: void addAll(com.ztspeech.weibo.sdk.android.WeiboParameters)
com.ztspeech.weibo.sdk.android.WeiboParameters: void clear()
com.ztspeech.weibo.sdk.android.api.AccountAPI
com.ztspeech.weibo.sdk.android.api.AccountAPI: AccountAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.AccountAPI: void getPrivacy(com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.AccountAPI: void schoolList(int,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE,com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL,java.lang.String,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.AccountAPI: void rateLimitStatus(com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.AccountAPI: void getUid(com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.AccountAPI: void endSession(com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: ActivityInvokeAPI()
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openSendWeibo(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openSendWeibo(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openNearbyPeople(android.app.Activity)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openNearbyWeibo(android.app.Activity)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openUserInfoByNickName(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openUserInfoByUid(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openWeiboBrowser(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openWeibo(android.app.Activity)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openShake(android.app.Activity)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openContact(android.app.Activity)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openUserTrends(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openMessageListByUid(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openMessageListByNickName(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.ActivityInvokeAPI: void openDetail(android.app.Activity,java.lang.String)
com.ztspeech.weibo.sdk.android.api.CommentsAPI
com.ztspeech.weibo.sdk.android.api.CommentsAPI: CommentsAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void show(long,long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void byME(long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void toME(long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void timeline(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void mentions(long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void showBatch(long[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void create(java.lang.String,long,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void destroy(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void destroyBatch(long[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommentsAPI: void reply(long,long,java.lang.String,boolean,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommonAPI
com.ztspeech.weibo.sdk.android.api.CommonAPI: CommonAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.CommonAPI: void getCity(java.lang.String,com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommonAPI: void getCountry(com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.CommonAPI: void getTimezone(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: FavoritesAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void favorites(int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void ids(int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void show(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void byTags(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void tags(int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void byTagsIds(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void create(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void destroy(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void destroyBatch(long[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void tagsUpdate(long,java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void tagsUpdateBatch(long,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FavoritesAPI: void tagsDestroyBatch(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: FriendshipsAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void friends(long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void friends(java.lang.String,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void inCommon(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void bilateral(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void bilateralIds(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void friendsIds(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void friendsIds(java.lang.String,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void followers(long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void followers(java.lang.String,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void followersIds(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void followersIds(java.lang.String,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void followersActive(long,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void chainFollowers(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void show(long,long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void show(long,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void show(java.lang.String,long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void show(java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void create(long,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void create(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void destroy(long,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.FriendshipsAPI: void destroy(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI
com.ztspeech.weibo.sdk.android.api.PlaceAPI: PlaceAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void friendsTimeline(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void userTimeline(long,long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poiTimeline(java.lang.String,long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void nearbyTimeline(java.lang.String,java.lang.String,int,long,long,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3,int,int,boolean,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void statusesShow(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void usersShow(long,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void usersCheckins(long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void usersPhotos(long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void usersTips(long,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisShow(java.lang.String,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisUsers(java.lang.String,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisPhotos(java.lang.String,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisTips(java.lang.String,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisSearch(java.lang.String,java.lang.String,java.lang.String,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisCategory(int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void nearbyPois(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void nearbyUsers(java.lang.String,java.lang.String,int,long,long,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void nearbyPhotos(java.lang.String,java.lang.String,int,long,long,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3,int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisAddCheckin(java.lang.String,java.lang.String,java.lang.String,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisAddPhoto(java.lang.String,java.lang.String,java.lang.String,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.PlaceAPI: void poisAddTip(java.lang.String,java.lang.String,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.RegisterAPI
com.ztspeech.weibo.sdk.android.api.RegisterAPI: RegisterAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.RegisterAPI: void suggestions(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SearchAPI
com.ztspeech.weibo.sdk.android.api.SearchAPI: SearchAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.SearchAPI: void users(java.lang.String,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SearchAPI: void statuses(java.lang.String,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SearchAPI: void schools(java.lang.String,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SearchAPI: void companies(java.lang.String,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SearchAPI: void apps(java.lang.String,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SearchAPI: void atUsers(java.lang.String,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE,com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: ShortUrlAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void shorten(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void expand(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void clicks(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void referers(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void locations(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void shareCounts(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void shareStatuses(java.lang.String,long,long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void commentCounts(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.ShortUrlAPI: void comments(java.lang.String,long,long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI
com.ztspeech.weibo.sdk.android.api.StatusesAPI: StatusesAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void publicTimeline(int,int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void friendsTimeline(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void friendsTimelineIds(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void homeTimeline(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void userTimeline(long,long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void userTimeline(java.lang.String,long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void userTimeline(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void userTimelineIds(long,long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void userTimelineIds(java.lang.String,long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void repostTimeline(long,long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void repostTimelineIds(long,long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void repostByMe(long,long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void mentions(long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER,com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void mentionsIds(long,long,int,int,com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER,com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER,com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void bilateralTimeline(long,long,int,int,boolean,com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void show(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void queryMID(long[],com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void queryID(java.lang.String[],com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE,boolean,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void hotRepostDaily(int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void hotRepostWeekly(int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void hotCommentsDaily(int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void hotCommentsWeekly(int,boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void count(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void repost(long,java.lang.String,com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void destroy(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void update(java.lang.String,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void upload(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.StatusesAPI: void emotions(com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE,com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: SuggestionsAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: void usersHot(com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: void mayInterested(int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: void byStatus(java.lang.String,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: void statusesHot(com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE,boolean,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: void favoritesHot(int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.SuggestionsAPI: void notInterested(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TagsAPI
com.ztspeech.weibo.sdk.android.api.TagsAPI: TagsAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.TagsAPI: void tags(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TagsAPI: void tagsBatch(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TagsAPI: void suggestions(int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TagsAPI: void create(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TagsAPI: void destroy(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TagsAPI: void destroyBatch(java.lang.String[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI
com.ztspeech.weibo.sdk.android.api.TrendsAPI: TrendsAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void trends(long,int,int,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void isFollow(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void hourly(boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void daily(boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void weekly(boolean,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void follow(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.TrendsAPI: void destroy(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.UsersAPI
com.ztspeech.weibo.sdk.android.api.UsersAPI: UsersAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.UsersAPI: void show(long,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.UsersAPI: void show(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.UsersAPI: void domainShow(java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.UsersAPI: void counts(long[],com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.WeiboAPI
com.ztspeech.weibo.sdk.android.api.WeiboAPI: java.lang.String API_SERVER
com.ztspeech.weibo.sdk.android.api.WeiboAPI: java.lang.String HTTPMETHOD_POST
com.ztspeech.weibo.sdk.android.api.WeiboAPI: java.lang.String HTTPMETHOD_GET
com.ztspeech.weibo.sdk.android.api.WeiboAPI: WeiboAPI(com.ztspeech.weibo.sdk.android.Oauth2AccessToken)
com.ztspeech.weibo.sdk.android.api.WeiboAPI: void request(java.lang.String,com.ztspeech.weibo.sdk.android.WeiboParameters,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER
com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER ALL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER ATTENTIONS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER STRANGER
com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$AUTHOR_FILTER valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL A
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL B
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL C
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL D
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL E
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL F
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL G
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL H
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL I
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL J
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL K
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL L
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL M
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL N
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL O
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL P
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL Q
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL R
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL S
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL T
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL U
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL V
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL W
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL X
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL Y
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL Z
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL: com.ztspeech.weibo.sdk.android.api.WeiboAPI$CAPITAL valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE NONE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE CUR_STATUSES
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE ORIGAL_STATUSES
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE BOTH
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COMMENTS_TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE STATUS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE FOLLOWER
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE CMT
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE DM
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE MENTION_STATUS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE MENTION_CMT
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$COUNT_TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE FACE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE ANI
com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE CARTOON
com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$EMOTION_TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE ALL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE ORIGINAL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE PICTURE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE VIDEO
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE MUSICE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FEATURE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE ATTENTIONS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE FELLOWS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$FRIEND_TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE cnname
com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE twname
com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$LANGUAGE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE ATTENTIONS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE ATTENTION_TAGS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE ALL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$RANGE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE COLLEGE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE SENIOR
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE TECHNICAL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE JUNIOR
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE PRIMARY
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SCHOOL_TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT Oauth2AccessToken
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT SORT_AROUND
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2 SORT_BY_TIME
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2 SORT_BY_HOT
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT2 valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3 SORT_BY_TIME
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3 SORT_BY_DISTENCE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SORT3 valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER ALL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER WEIBO
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER WEIQUN
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$SRC_FILTER valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE ENTERTAINMENT
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE FUNNY
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE BEAUTY
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE VIDEO
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE CONSTELLATION
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE LOVELY
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE FASHION
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE CARS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE CATE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE MUSIC
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$STATUSES_TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE STATUSES
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE COMMENTS
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE MESSAGE
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER ALL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER ORIGAL
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER: com.ztspeech.weibo.sdk.android.api.WeiboAPI$TYPE_FILTER valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY DEFAULT
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY ent
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY hk_famous
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY model
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY cooking
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY sports
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY finance
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY tech
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY singer
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY writer
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY moderator
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY medium
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY stockplayer
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY[] values()
com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY: com.ztspeech.weibo.sdk.android.api.WeiboAPI$USER_CATEGORY valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.net.AsyncWeiboRunner
com.ztspeech.weibo.sdk.android.net.AsyncWeiboRunner: AsyncWeiboRunner()
com.ztspeech.weibo.sdk.android.net.AsyncWeiboRunner: void request(java.lang.String,com.ztspeech.weibo.sdk.android.WeiboParameters,java.lang.String,com.ztspeech.weibo.sdk.android.net.RequestListener)
com.ztspeech.weibo.sdk.android.net.HttpManager
com.ztspeech.weibo.sdk.android.net.HttpManager: java.lang.String HTTPMETHOD_GET
com.ztspeech.weibo.sdk.android.net.HttpManager: HttpManager()
com.ztspeech.weibo.sdk.android.net.HttpManager: java.lang.String openUrl(java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.android.WeiboParameters,java.lang.String)
com.ztspeech.weibo.sdk.android.net.NetStateManager
com.ztspeech.weibo.sdk.android.net.NetStateManager: com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState CUR_NETSTATE
com.ztspeech.weibo.sdk.android.net.NetStateManager: NetStateManager()
com.ztspeech.weibo.sdk.android.net.NetStateManager: org.apache.http.HttpHost getAPN()
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState: com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState Mobile
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState: com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState WIFI
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState: com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState NOWAY
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState: com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState[] values()
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState: com.ztspeech.weibo.sdk.android.net.NetStateManager$NetState valueOf(java.lang.String)
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetStateReceive
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetStateReceive: NetStateManager$NetStateReceive(com.ztspeech.weibo.sdk.android.net.NetStateManager)
com.ztspeech.weibo.sdk.android.net.NetStateManager$NetStateReceive: void onReceive(android.content.Context,android.content.Intent)
com.ztspeech.weibo.sdk.android.net.RequestListener
com.ztspeech.weibo.sdk.android.net.RequestListener: void onComplete(java.lang.String)
com.ztspeech.weibo.sdk.android.net.RequestListener: void onIOException(java.io.IOException)
com.ztspeech.weibo.sdk.android.net.RequestListener: void onError(com.ztspeech.weibo.sdk.android.WeiboException)
com.ztspeech.weibo.sdk.android.util.BitmapHelper
com.ztspeech.weibo.sdk.android.util.BitmapHelper: BitmapHelper()
com.ztspeech.weibo.sdk.android.util.BitmapHelper: boolean makesureSizeNotTooLarge(android.graphics.Rect)
com.ztspeech.weibo.sdk.android.util.BitmapHelper: int getSampleSizeOfNotTooLarge(android.graphics.Rect)
com.ztspeech.weibo.sdk.android.util.BitmapHelper: int getSampleSizeAutoFitToScreen(int,int,int,int)
com.ztspeech.weibo.sdk.android.util.BitmapHelper: boolean verifyBitmap(byte[])
com.ztspeech.weibo.sdk.android.util.BitmapHelper: boolean verifyBitmap(java.io.InputStream)
com.ztspeech.weibo.sdk.android.util.BitmapHelper: boolean verifyBitmap(java.lang.String)
com.ztspeech.weibo.sdk.android.util.Utility
com.ztspeech.weibo.sdk.android.util.Utility: Utility()
com.ztspeech.weibo.sdk.android.util.Utility: android.os.Bundle parseUrl(java.lang.String)
com.ztspeech.weibo.sdk.android.util.Utility: android.os.Bundle decodeUrl(java.lang.String)
com.ztspeech.weibo.sdk.android.util.Utility: java.lang.String encodeUrl(com.ztspeech.weibo.sdk.android.WeiboParameters)
com.ztspeech.weibo.sdk.android.util.Utility: java.lang.String encodeParameters(com.ztspeech.weibo.sdk.android.WeiboParameters)
com.ztspeech.weibo.sdk.android.util.Utility: void showAlert(android.content.Context,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.android.util.Utility: java.lang.String encodeBase62(byte[])
com.ztspeech.weibo.sdk.android.util.Utility: byte[] decodeBase62(java.lang.String)
com.ztspeech.weibo.sdk.android.util.Utility: boolean isWifi(android.content.Context)
com.ztspeech.weibo.sdk.android.util.Utility$UploadImageUtils
com.ztspeech.weibo.sdk.android.util.Utility$UploadImageUtils: Utility$UploadImageUtils()
com.ztspeech.weibo.sdk.android.util.Utility$UploadImageUtils: boolean revitionPostImageSize(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.AsyncKaixin
com.ztspeech.weibo.sdk.kaixin.AsyncKaixin: AsyncKaixin(com.ztspeech.weibo.sdk.kaixin.Kaixin)
com.ztspeech.weibo.sdk.kaixin.AsyncKaixin: void request(android.content.Context,java.lang.String,android.os.Bundle,java.lang.String,com.ztspeech.weibo.sdk.kaixin.AsyncKaixinListener,java.lang.Object)
com.ztspeech.weibo.sdk.kaixin.AsyncKaixin: void login(android.content.Context,android.os.Bundle,com.ztspeech.weibo.sdk.kaixin.AsyncKaixinListener,java.lang.Object)
com.ztspeech.weibo.sdk.kaixin.AsyncKaixinListener
com.ztspeech.weibo.sdk.kaixin.AsyncKaixinListener: void onRequestComplete(java.lang.String,java.lang.Object)
com.ztspeech.weibo.sdk.kaixin.AsyncKaixinListener: void onRequestError(com.ztspeech.weibo.sdk.kaixin.KaixinError,java.lang.Object)
com.ztspeech.weibo.sdk.kaixin.AsyncKaixinListener: void onRequestNetError(java.lang.Throwable,java.lang.Object)
com.ztspeech.weibo.sdk.kaixin.BaseParameter
com.ztspeech.weibo.sdk.kaixin.BaseParameter: BaseParameter()
com.ztspeech.weibo.sdk.kaixin.BaseParameter: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.kaixin.BaseParameter: void checkNullParams(java.lang.String[])
com.ztspeech.weibo.sdk.kaixin.Kaixin
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String API_KEY
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String SECRET_KEY
com.ztspeech.weibo.sdk.kaixin.Kaixin: com.ztspeech.weibo.sdk.kaixin.Kaixin getInstance()
com.ztspeech.weibo.sdk.kaixin.Kaixin: void authorize(android.content.Context,com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener)
com.ztspeech.weibo.sdk.kaixin.Kaixin: void authorize(android.content.Context,java.lang.String[],com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener)
com.ztspeech.weibo.sdk.kaixin.Kaixin: boolean isSessionValid()
com.ztspeech.weibo.sdk.kaixin.Kaixin: void setAccessToken(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String getAccessToken()
com.ztspeech.weibo.sdk.kaixin.Kaixin: void setRefreshToken(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String getRefreshToken()
com.ztspeech.weibo.sdk.kaixin.Kaixin: void setAccessExpires(long)
com.ztspeech.weibo.sdk.kaixin.Kaixin: long getAccessExpires()
com.ztspeech.weibo.sdk.kaixin.Kaixin: void setAccessExpiresIn(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String refreshAccessToken(android.content.Context,java.lang.String[])
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String uploadContent(android.content.Context,java.lang.String,android.os.Bundle,java.util.Map)
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String request(android.content.Context,java.lang.String,android.os.Bundle,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String login(android.os.Bundle,android.content.Context)
com.ztspeech.weibo.sdk.kaixin.Kaixin: java.lang.String setOauth(java.lang.String,android.content.Context)
com.ztspeech.weibo.sdk.kaixin.Kaixin: boolean loadStorage(android.content.Context)
com.ztspeech.weibo.sdk.kaixin.Kaixin: boolean isBinder(android.content.Context)
com.ztspeech.weibo.sdk.kaixin.Kaixin: boolean updateStorage(android.content.Context)
com.ztspeech.weibo.sdk.kaixin.Kaixin: void clearStorage(android.content.Context)
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: long serialVersionUID
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: KaixinAuthError(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: org.json.JSONObject getJSONObjectError()
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: org.json.JSONObject genJSONObjectError(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: java.lang.String getError()
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: java.lang.String getErrorDescription()
com.ztspeech.weibo.sdk.kaixin.KaixinAuthError: java.lang.String getErrorUri()
com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener
com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener: void onAuthComplete(android.os.Bundle)
com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener: void onAuthError(com.ztspeech.weibo.sdk.kaixin.KaixinAuthError)
com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener: void onAuthCancelLogin()
com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener: void onAuthCancel(android.os.Bundle)
com.ztspeech.weibo.sdk.kaixin.KaixinDialog
com.ztspeech.weibo.sdk.kaixin.KaixinDialog: KaixinDialog(android.content.Context,java.lang.String,com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener)
com.ztspeech.weibo.sdk.kaixin.KaixinDialog: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: int UNPROCCESS
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: int PROCCESSED
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: int DIALOG_PROCCESS
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: int onPageBegin(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: boolean onPageStart(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: void onPageFinished(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinDialogListener: void onReceivedError(int,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinError
com.ztspeech.weibo.sdk.kaixin.KaixinError: long serialVersionUID
com.ztspeech.weibo.sdk.kaixin.KaixinError: KaixinError(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinError: KaixinError(int,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.KaixinError: int getErrorCode()
com.ztspeech.weibo.sdk.kaixin.KaixinError: java.lang.String getRequest()
com.ztspeech.weibo.sdk.kaixin.KaixinError: java.lang.String getResponse()
com.ztspeech.weibo.sdk.kaixin.KaixinError: java.lang.String toString()
com.ztspeech.weibo.sdk.kaixin.LoginParameter
com.ztspeech.weibo.sdk.kaixin.LoginParameter: LoginParameter(java.lang.String,java.lang.String,java.lang.String[])
com.ztspeech.weibo.sdk.kaixin.LoginParameter: void setUserName(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.LoginParameter: void setPassword(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.LoginParameter: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.kaixin.PopUpDialog
com.ztspeech.weibo.sdk.kaixin.PopUpDialog: PopUpDialog(android.content.Context,com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener)
com.ztspeech.weibo.sdk.kaixin.PopUpDialog: PopUpDialog(android.app.Activity,com.ztspeech.weibo.sdk.kaixin.LoginParameter,com.ztspeech.weibo.sdk.kaixin.KaixinAuthListener)
com.ztspeech.weibo.sdk.kaixin.PopUpDialog: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.kaixin.Util
com.ztspeech.weibo.sdk.kaixin.Util: java.lang.String LOG_TAG
com.ztspeech.weibo.sdk.kaixin.Util: Util()
com.ztspeech.weibo.sdk.kaixin.Util: android.os.Bundle decodeUrl(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Util: android.os.Bundle parseUrl(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Util: java.lang.String encodeUrl(android.os.Bundle)
com.ztspeech.weibo.sdk.kaixin.Util: java.lang.String openUrl(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.util.Map)
com.ztspeech.weibo.sdk.kaixin.Util: java.lang.String encodePostBody(android.os.Bundle,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Util: java.lang.String read(java.io.InputStream)
com.ztspeech.weibo.sdk.kaixin.Util: void clearCookies(android.content.Context)
com.ztspeech.weibo.sdk.kaixin.Util: com.ztspeech.weibo.sdk.kaixin.KaixinError parseRequestError(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Util: void showAlert(android.content.Context,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Util: java.lang.String md5(java.lang.String)
com.ztspeech.weibo.sdk.kaixin.Util: java.net.HttpURLConnection getConnection(android.content.Context,java.net.URL)
com.ztspeech.weibo.sdk.kaixin.Util: boolean isContainChinese(java.lang.String)
com.ztspeech.weibo.sdk.renren.AccessTokenManager
com.ztspeech.weibo.sdk.renren.AccessTokenManager: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.AsyncRenren
com.ztspeech.weibo.sdk.renren.AsyncRenren: AsyncRenren(com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void logout(android.content.Context,com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void requestJSON(android.os.Bundle,com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void requestXML(android.os.Bundle,com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void authorize(com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam,com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void publishPhoto(long,byte[],java.lang.String,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void getUsersInfo(com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void publishStatus(com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener,boolean)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void publishFeed(com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener,boolean)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void createAlbum(com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void getAlbums(com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void publishPhoto(com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void getFriends(com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.AsyncRenren: void getFriends(com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.AuthorizationHelper
com.ztspeech.weibo.sdk.renren.AuthorizationHelper: AuthorizationHelper()
com.ztspeech.weibo.sdk.renren.AuthorizationHelper: void check(com.ztspeech.weibo.sdk.renren.Renren,android.app.Activity,java.lang.String[],com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener)
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: AuthorizationHelper$BlockActivity()
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: void onRestoreInstanceState(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: void onSaveInstanceState(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: void onStart()
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: void onActivityResult(int,int,android.content.Intent)
com.ztspeech.weibo.sdk.renren.AuthorizationHelper$BlockActivity: void onConfigurationChanged(android.content.res.Configuration)
com.ztspeech.weibo.sdk.renren.PasswordFlowHelper
com.ztspeech.weibo.sdk.renren.PasswordFlowHelper: PasswordFlowHelper()
com.ztspeech.weibo.sdk.renren.PasswordFlowHelper: com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean login(com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam)
com.ztspeech.weibo.sdk.renren.PasswordFlowHelper: void login(java.util.concurrent.Executor,com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam,com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener,com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.PasswordFlowHelper: void login(android.app.Activity,com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam,com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener,com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: PasswordFlowRequestParam(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: PasswordFlowRequestParam(java.lang.String,java.lang.String,java.lang.String[])
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: java.lang.String getApiKey()
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: void setApiKey(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: java.lang.String getSecretKey()
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: void setSecretKey(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: java.lang.String getUserName()
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: void setUserName(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: java.lang.String getPassword()
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: void setPassword(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: java.lang.String[] getPermissions()
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: void setPermissions(java.lang.String[])
com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String KEY_ACCESS_TOKEN
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String KEY_EXPIRES_IN
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String KEY_REFRESH_TOKEN
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String KEY_SCOPE
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: PasswordFlowResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: void setAccessToken(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String getAccessToken()
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: void setExpire(long)
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: long getExpire()
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: void setRefreshToken(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String getRefreshToken()
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: void setScope(java.lang.String)
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String getScope()
com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.Renren
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String RENREN_LABEL
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String CANCEL_URI
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String SUCCESS_URI
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String AUTHORIZE_URL
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String RESPONSE_FORMAT_JSON
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String RESPONSE_FORMAT_XML
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String DEFAULT_REDIRECT_URI
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String WIDGET_CALLBACK_URI
com.ztspeech.weibo.sdk.renren.Renren: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.Renren: Renren(java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.ztspeech.weibo.sdk.renren.Renren: Renren(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.Renren: void init(android.content.Context)
com.ztspeech.weibo.sdk.renren.Renren: boolean restorSessionKey(android.content.Context)
com.ztspeech.weibo.sdk.renren.Renren: void authorize(android.app.Activity,com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener,java.lang.String)
com.ztspeech.weibo.sdk.renren.Renren: void authorize(android.app.Activity,java.lang.String[],com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener,java.lang.String)
com.ztspeech.weibo.sdk.renren.Renren: void authorize(android.app.Activity,com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener)
com.ztspeech.weibo.sdk.renren.Renren: void authorize(android.app.Activity,java.lang.String[],com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener)
com.ztspeech.weibo.sdk.renren.Renren: void authorize(android.app.Activity,java.lang.String[],com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener,int)
com.ztspeech.weibo.sdk.renren.Renren: void authorize(android.app.Activity,com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam,com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.PasswordFlowResponseBean authorize(com.ztspeech.weibo.sdk.renren.PasswordFlowRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: void authorizeCallback(int,int,android.content.Intent)
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String logout(android.content.Context)
com.ztspeech.weibo.sdk.renren.Renren: void feed(android.content.Context,com.ztspeech.weibo.sdk.renren.bean.FeedParam,com.ztspeech.weibo.sdk.renren.view.RenrenFeedListener)
com.ztspeech.weibo.sdk.renren.Renren: void feed2(android.content.Context,android.os.Bundle,com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener)
com.ztspeech.weibo.sdk.renren.Renren: void appRequest(android.content.Context,android.os.Bundle,com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener)
com.ztspeech.weibo.sdk.renren.Renren: void widgetDialog(android.content.Context,android.os.Bundle,com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener,java.lang.String)
com.ztspeech.weibo.sdk.renren.Renren: void widgetDialog(android.app.Activity,android.os.Bundle,com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener,java.lang.String,int)
com.ztspeech.weibo.sdk.renren.Renren: void widgetDialogCallback(int,int,android.content.Intent)
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String requestXML(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String requestJSON(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String publishPhoto(long,byte[],java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.users.UsersGetInfoResponseBean getUsersInfo(com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean publishStatus(com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: void publishStatus(android.app.Activity,com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: void publishStatus(android.app.Activity,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean publishFeed(com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: void publishFeed(android.app.Activity,com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.Renren: void startRenrenRequestActivity(android.app.Activity,android.content.Intent)
com.ztspeech.weibo.sdk.renren.Renren: void startRenrenRequestActivity(android.app.Activity,android.content.Intent,int)
com.ztspeech.weibo.sdk.renren.Renren: void createAlbum(android.app.Activity)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean createAlbum(com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: void publishPhoto(android.app.Activity,java.io.File,java.lang.String)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean publishPhoto(com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.friends.FriendsGetResponseBean getFriends(com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean getFriends(com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean getAlbums(com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam)
com.ztspeech.weibo.sdk.renren.Renren: boolean isSessionKeyValid()
com.ztspeech.weibo.sdk.renren.Renren: boolean isAccessTokenValid()
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String getApiKey()
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String getSecret()
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String getAppId()
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String getSessionKey()
com.ztspeech.weibo.sdk.renren.Renren: java.lang.String getAccessToken()
com.ztspeech.weibo.sdk.renren.Renren: long getCurrentUid()
com.ztspeech.weibo.sdk.renren.Renren: com.ztspeech.weibo.sdk.renren.pay.IRenrenPay getRenrenPay(android.content.Context,com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener)
com.ztspeech.weibo.sdk.renren.Renren: int describeContents()
com.ztspeech.weibo.sdk.renren.Renren: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.RequestListener
com.ztspeech.weibo.sdk.renren.RequestListener: void onComplete(java.lang.String)
com.ztspeech.weibo.sdk.renren.RequestListener: void onRenrenError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.RequestListener: void onFault(java.lang.Throwable)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper
com.ztspeech.weibo.sdk.renren.RequestListenerHelper: RequestListenerHelper()
com.ztspeech.weibo.sdk.renren.RequestListenerHelper: void addRequestListener(com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper: boolean removeRequestListener(com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper: void onComplete(java.lang.String)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper: void onRenrenError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper: void onFault(java.lang.Throwable)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper$DefaultRequestListener
com.ztspeech.weibo.sdk.renren.RequestListenerHelper$DefaultRequestListener: RequestListenerHelper$DefaultRequestListener()
com.ztspeech.weibo.sdk.renren.RequestListenerHelper$DefaultRequestListener: void onComplete(java.lang.String)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper$DefaultRequestListener: void onRenrenError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.RequestListenerHelper$DefaultRequestListener: void onFault(java.lang.Throwable)
com.ztspeech.weibo.sdk.renren.SSO
com.ztspeech.weibo.sdk.renren.SSO: void authorize(android.app.Activity,java.lang.String[],com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener,int)
com.ztspeech.weibo.sdk.renren.SSO: void authorizeCallback(int,int,android.content.Intent)
com.ztspeech.weibo.sdk.renren.SSO: void widgetDialog(android.app.Activity,android.os.Bundle,com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener,java.lang.String,int)
com.ztspeech.weibo.sdk.renren.SSO: void widgetDialogCallback(int,int,android.content.Intent)
com.ztspeech.weibo.sdk.renren.Util
com.ztspeech.weibo.sdk.renren.Util: java.lang.String LOG_TAG
com.ztspeech.weibo.sdk.renren.Util: java.lang.String USER_AGENT_SDK
com.ztspeech.weibo.sdk.renren.Util: Util()
com.ztspeech.weibo.sdk.renren.Util: void logger(java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: java.lang.String encodeUrl(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.Util: android.os.Bundle decodeUrl(java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: android.os.Bundle parseUrl(java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle)
com.ztspeech.weibo.sdk.renren.Util: byte[] getBytes(java.lang.String,android.os.Bundle)
com.ztspeech.weibo.sdk.renren.Util: java.lang.String uploadFile(java.lang.String,android.os.Bundle,java.lang.String,java.lang.String,java.lang.String,byte[])
com.ztspeech.weibo.sdk.renren.Util: void clearCookies(android.content.Context)
com.ztspeech.weibo.sdk.renren.Util: com.ztspeech.weibo.sdk.renren.exception.RenrenError parseRenrenError(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: void checkResponse(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: void showAlert(android.content.Context,java.lang.String,java.lang.String,boolean)
com.ztspeech.weibo.sdk.renren.Util: void showAlert(android.content.Context,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: java.lang.String md5(java.lang.String)
com.ztspeech.weibo.sdk.renren.Util: boolean isNetworkConnected(android.content.Context)
com.ztspeech.weibo.sdk.renren.Util: void showOptionWindow(android.app.Activity,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.renren.Util$OnOptionListener)
com.ztspeech.weibo.sdk.renren.Util: byte[] fileToByteArray(java.io.File)
com.ztspeech.weibo.sdk.renren.Util: byte[] streamToByteArray(java.io.InputStream)
com.ztspeech.weibo.sdk.renren.Util$OnOptionListener
com.ztspeech.weibo.sdk.renren.Util$OnOptionListener: void onOK()
com.ztspeech.weibo.sdk.renren.Util$OnOptionListener: void onCancel()
com.ztspeech.weibo.sdk.renren.bean.FeedParam
com.ztspeech.weibo.sdk.renren.bean.FeedParam: FeedParam()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: java.lang.String getFeedInfo()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: int getTemplateId()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: void setTemplateId(int)
com.ztspeech.weibo.sdk.renren.bean.FeedParam: java.lang.String getTemplateData()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: void setTemplateData(java.lang.String)
com.ztspeech.weibo.sdk.renren.bean.FeedParam: java.lang.String getBodyGeneral()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: void setBodyGeneral(java.lang.String)
com.ztspeech.weibo.sdk.renren.bean.FeedParam: java.lang.String getUserMessage()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: void setUserMessage(java.lang.String)
com.ztspeech.weibo.sdk.renren.bean.FeedParam: java.lang.String getUserMessagePrompt()
com.ztspeech.weibo.sdk.renren.bean.FeedParam: void setUserMessagePrompt(java.lang.String)
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: com.ztspeech.weibo.sdk.renren.Renren renren
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: AbstractRenrenRequestActivity()
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: void onDestroy()
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: void showProgress(java.lang.String)
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: void finishProgress()
com.ztspeech.weibo.sdk.renren.common.AbstractRenrenRequestActivity: void showTip(java.lang.String)
com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener
com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener: AbstractRequestListener()
com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener: com.ztspeech.weibo.sdk.renren.common.ResponseBean parse(java.lang.String)
com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener: void onComplete(com.ztspeech.weibo.sdk.renren.common.ResponseBean)
com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener: void onRenrenError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener: void onFault(java.lang.Throwable)
com.ztspeech.weibo.sdk.renren.common.RequestParam
com.ztspeech.weibo.sdk.renren.common.RequestParam: RequestParam()
com.ztspeech.weibo.sdk.renren.common.RequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.common.RequestParam: void checkNullParams(java.lang.String[])
com.ztspeech.weibo.sdk.renren.common.ResponseBean
com.ztspeech.weibo.sdk.renren.common.ResponseBean: ResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: long serialVersionUID
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: RenrenAuthError(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: org.json.JSONObject getJSONObjectError()
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: org.json.JSONObject genJSONObjectError(java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: java.lang.String getError()
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: java.lang.String getErrorDescription()
com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError: java.lang.String getErrorUri()
com.ztspeech.weibo.sdk.renren.exception.RenrenError
com.ztspeech.weibo.sdk.renren.exception.RenrenError: long serialVersionUID
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_NULL_PARAMETER
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_PARAMETER_EXTENDS_LIMIT
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_ILLEGAL_PARAMETER
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_TOKEN_ERROR
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_UNABLE_PARSE_RESPONSE
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_OPERATION_CANCELLED
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_AUTH_FAILED
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_AUTH_CANCELLED
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_CODE_UNKNOWN_ERROR
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int ERROR_RENREN_INIT_ERROR
com.ztspeech.weibo.sdk.renren.exception.RenrenError: RenrenError()
com.ztspeech.weibo.sdk.renren.exception.RenrenError: RenrenError(java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenError: RenrenError(int,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenError: java.lang.String getOrgResponse()
com.ztspeech.weibo.sdk.renren.exception.RenrenError: int getErrorCode()
com.ztspeech.weibo.sdk.renren.exception.RenrenError: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.exception.RenrenError: java.lang.String interpretErrorMessage(int,java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenException
com.ztspeech.weibo.sdk.renren.exception.RenrenException: long serialVersionUID
com.ztspeech.weibo.sdk.renren.exception.RenrenException: RenrenException(java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenException: RenrenException(int,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.exception.RenrenException: RenrenException(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.exception.RenrenException: java.lang.String getOrgResponse()
com.ztspeech.weibo.sdk.renren.exception.RenrenException: int getErrorCode()
com.ztspeech.weibo.sdk.renren.exception.RenrenException: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.feed.FeedHelper
com.ztspeech.weibo.sdk.renren.feed.FeedHelper: java.lang.String AUTH_OPTION
com.ztspeech.weibo.sdk.renren.feed.FeedHelper: FeedHelper(com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.feed.FeedHelper: com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean publish(com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam)
com.ztspeech.weibo.sdk.renren.feed.FeedHelper: void asyncPublish(java.util.concurrent.Executor,com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener,boolean)
com.ztspeech.weibo.sdk.renren.feed.FeedHelper: void startFeedPublishWidget(java.lang.String,android.app.Activity,com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.feed.FeedParam
com.ztspeech.weibo.sdk.renren.feed.FeedParam: FeedParam()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: java.lang.String getFeedInfo()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: int getTemplateId()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: void setTemplateId(int)
com.ztspeech.weibo.sdk.renren.feed.FeedParam: java.lang.String getTemplateData()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: void setTemplateData(java.lang.String)
com.ztspeech.weibo.sdk.renren.feed.FeedParam: java.lang.String getBodyGeneral()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: void setBodyGeneral(java.lang.String)
com.ztspeech.weibo.sdk.renren.feed.FeedParam: java.lang.String getUserMessage()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: void setUserMessage(java.lang.String)
com.ztspeech.weibo.sdk.renren.feed.FeedParam: java.lang.String getUserMessagePrompt()
com.ztspeech.weibo.sdk.renren.feed.FeedParam: void setUserMessagePrompt(java.lang.String)
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int NORMAL_LENGTH
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int NAME_TOO_LONG
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int DESCRIPTION_TOO_LONG
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int CAPTION_TOO_LONG
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int ACTION_NAME_TOO_LONG
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int MESSAGE_TOO_LONG
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: FeedPublishRequestParam(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: FeedPublishRequestParam(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: int describeContents()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getDescription()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getUrl()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getImageUrl()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getCaption()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getActionName()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getActionLink()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: java.lang.String getMessage()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: android.os.Parcelable$Creator getCreator()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: void trunc()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishRequestParam: android.os.Bundle getWidgetParams()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean
com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean: java.lang.String RESPONSE
com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean: int DEFAULT_POST_ID
com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean: FeedPublishResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean: int getPostId()
com.ztspeech.weibo.sdk.renren.feed.FeedPublishResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: java.lang.String FIELDS_HEADURL_WITH_LOGO
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: java.lang.String FIELDS_TINYURL_WITH_LOGO
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: FriendsGetFriendsRequestParam()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: FriendsGetFriendsRequestParam(int,int,java.lang.String[])
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: int getPage()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: void setPage(int)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: int getCount()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: void setCount(int)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: java.lang.String[] getFields()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: void setFields(java.lang.String[])
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean: FriendsGetFriendsResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean: java.util.ArrayList getFriendList()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean: void setFriendList(java.util.ArrayList)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: FriendsGetFriendsResponseBean$Friend(com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean,java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: FriendsGetFriendsResponseBean$Friend(com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean,org.json.JSONObject)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: long getUid()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: void setUid(long)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: void setName(java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: java.lang.String getHeadurl()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: void setHeadurl(java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: java.lang.String getHeadurl_with_logo()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: void setHeadurl_with_logo(java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: java.lang.String getTinyurl_with_logo()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: void setTinyurl_with_logo(java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean$Friend: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: FriendsGetRequestParam()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: FriendsGetRequestParam(int,int)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: int getPage()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: void setPage(int)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: int getCount()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: void setCount(int)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetResponseBean
com.ztspeech.weibo.sdk.renren.friends.FriendsGetResponseBean: FriendsGetResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.friends.FriendsGetResponseBean: long[] getUids()
com.ztspeech.weibo.sdk.renren.friends.FriendsGetResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.friends.FriendsHelper
com.ztspeech.weibo.sdk.renren.friends.FriendsHelper: FriendsHelper(com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.friends.FriendsHelper: com.ztspeech.weibo.sdk.renren.friends.FriendsGetResponseBean getFriends(com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam)
com.ztspeech.weibo.sdk.renren.friends.FriendsHelper: void asyncGetFriends(java.util.concurrent.Executor,com.ztspeech.weibo.sdk.renren.friends.FriendsGetRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.friends.FriendsHelper: com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsResponseBean getFriends(com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam)
com.ztspeech.weibo.sdk.renren.friends.FriendsHelper: void asyncGetFriends(java.util.concurrent.Executor,com.ztspeech.weibo.sdk.renren.friends.FriendsGetFriendsRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.pay.IPayListener
com.ztspeech.weibo.sdk.renren.pay.IPayListener: void onStart(com.ztspeech.weibo.sdk.renren.pay.bean.Payment)
com.ztspeech.weibo.sdk.renren.pay.IPayListener: boolean onComplete(com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.IPayListener: void onError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener
com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener: void onRepairComplete(com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener: void onRepairError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: java.lang.String generateOrderNumber()
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: void init(com.ztspeech.weibo.sdk.renren.Renren,com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: boolean beginPay(android.app.Activity,com.ztspeech.weibo.sdk.renren.pay.bean.Payment)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: boolean beginPay4Test(android.app.Activity,com.ztspeech.weibo.sdk.renren.pay.bean.Payment)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: void repairOrder(android.content.Context,com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: void repairOrder4Test(android.content.Context,com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: void enableStore(boolean)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: void removeOrderByOrderNumber(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: java.util.List getStoredPayOrders(android.content.Context)
com.ztspeech.weibo.sdk.renren.pay.IRenrenPay: void removeAllLocalInfo(android.content.Context)
com.ztspeech.weibo.sdk.renren.pay.bean.AppState
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int UNKNOWN
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int OK
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_NOT_EXIST
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_AUDIT_FAIL
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_NOT_SUPPORT_PAY
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_MAINTAIN
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_PAY_CHECK_FAIL
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_SERVER_CONNECT_FAIL
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_SERVER_ORDERNO_FETCH_FAIL
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_SERVER_CALL_SUC
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_CALL_SERVER_DATA_FAIL
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_ORDER_MONEY_EXCEED
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_CALL_DATA_FORMA_ERROR
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_ORDERNO_FORMAT_ERROR
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_ORDERNO_REPEAT
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int APP_ORDER_AMOUNT_ZERO
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: int getStatusCode()
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: void setStatusCode(int)
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: java.lang.String getStatusDes()
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: void setStatusDes(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.pay.bean.AppState: AppState(int)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: int START_STATE
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: int ERROR_STATE
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: int SUCCESS_STATE
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: boolean isSuccess()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getLocalEncode()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getAppId()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setAppId(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getOrderNumber()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setOrderNumber(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getPayment()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setPayment(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: int getServerState()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setServerState(int)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getBid()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setBid(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: long getUserId()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setUserId(long)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: int getAmount()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setAmount(int)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.util.Date getOrderTime()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setOrderTime(java.util.Date)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.util.Date getDealTime()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setDealTime(java.util.Date)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getDescr()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setDescr(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: PayOrder()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: PayOrder(java.lang.String,long,com.ztspeech.weibo.sdk.renren.pay.bean.Payment)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: PayOrder(com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setPayState(int)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setPayStatusCode(int)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: int getPayStatusCode()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setPayResultEncode(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getPayResultEncode()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setRedirect_url(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: java.lang.String getRedirect_url()
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: void setSandBox(boolean)
com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder: boolean isSandBox()
com.ztspeech.weibo.sdk.renren.pay.bean.Payment
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: Payment(java.lang.String,int,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.renren.pay.IPayListener)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: void setPayment(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: void setDescription(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: void setOrderNumber(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: void setAmount(int)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: void setPayListener(com.ztspeech.weibo.sdk.renren.pay.IPayListener)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: com.ztspeech.weibo.sdk.renren.pay.IPayListener getPayListener()
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: int getAmount()
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: java.lang.String getOrderNumber()
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: java.lang.String getDescription()
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: java.lang.String getPayment()
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: void addListener(com.ztspeech.weibo.sdk.renren.pay.IPayListener)
com.ztspeech.weibo.sdk.renren.pay.bean.Payment: Payment()
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: java.lang.String generateOrderNumber()
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: void init(com.ztspeech.weibo.sdk.renren.Renren,com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: java.util.List getStoredPayOrders(android.content.Context)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: void removeAllLocalInfo(android.content.Context)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: boolean isInitalized()
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: boolean beginPay4Test(android.app.Activity,com.ztspeech.weibo.sdk.renren.pay.bean.Payment)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: boolean beginPay(android.app.Activity,com.ztspeech.weibo.sdk.renren.pay.bean.Payment)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: void repairOrder(android.content.Context,com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: void repairOrder4Test(android.content.Context,com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: com.ztspeech.weibo.sdk.renren.pay.IRenrenPay getInstance()
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: com.ztspeech.weibo.sdk.renren.pay.IRenrenPay getInstance(android.content.Context,com.ztspeech.weibo.sdk.renren.Renren,com.ztspeech.weibo.sdk.renren.pay.IPayRepairListener)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: void enableStore(boolean)
com.ztspeech.weibo.sdk.renren.pay.impl.RenrenPay: void removeOrderByOrderNumber(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper getInstance(android.content.Context)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: void onCreate(android.database.sqlite.SQLiteDatabase)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: android.database.Cursor select(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: long addOrUpdatePay(com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: java.util.List getPayOrder(int,int)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: void removeAllByUid(int)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: void removeByUidAndOrderNumber(int,java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: void enableLocalStore(boolean)
com.ztspeech.weibo.sdk.renren.pay.util.PayStoreHelper: boolean isCanDoStore()
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_SUBMIT_ORDER_URL
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_4TEST_URL
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_FIXORDER_URL
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_FIXORDER_4TEST_URL
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_CHECK_APP_URL
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_URL_PREFIX
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_ERROR_URL_PREFIX
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_SUC_URL_PREFIX
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_FIXORDER_ERROR_URL_PREFIX
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String PAY_FIXORDER_SUC_URL_PREFIX
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: PayUtil()
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String generateOrderDatas(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String generateRepairDatas(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,long,long)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String getRepairFixCode(long,java.lang.String,java.lang.String,int,java.lang.String,long)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: java.lang.String getAppCode(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: com.ztspeech.weibo.sdk.renren.pay.bean.AppState parseAppState(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: android.os.Bundle parseUrl(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: com.ztspeech.weibo.sdk.renren.exception.RenrenError parsePayError(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.util.PayUtil: void request(java.util.concurrent.Executor,android.os.Bundle,java.lang.String,com.ztspeech.weibo.sdk.renren.RequestListener)
com.ztspeech.weibo.sdk.renren.pay.view.PayDialogListener
com.ztspeech.weibo.sdk.renren.pay.view.PayDialogListener: PayDialogListener(com.ztspeech.weibo.sdk.renren.pay.bean.PayOrder,java.lang.Object)
com.ztspeech.weibo.sdk.renren.pay.view.PayDialogListener: int onPageBegin(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.view.PayDialogListener: void onPageFinished(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.view.PayDialogListener: boolean onPageStart(java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.view.PayDialogListener: void onReceivedError(int,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.pay.view.PayRepaiListAdapter
com.ztspeech.weibo.sdk.renren.pay.view.PayRepaiListAdapter: int getCount()
com.ztspeech.weibo.sdk.renren.pay.view.PayRepaiListAdapter: PayRepaiListAdapter(java.util.List)
com.ztspeech.weibo.sdk.renren.pay.view.PayRepaiListAdapter: java.lang.Object getItem(int)
com.ztspeech.weibo.sdk.renren.pay.view.PayRepaiListAdapter: long getItemId(int)
com.ztspeech.weibo.sdk.renren.pay.view.PayRepaiListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ztspeech.weibo.sdk.renren.pay.view.PayRepairActivity
com.ztspeech.weibo.sdk.renren.pay.view.PayRepairActivity: PayRepairActivity()
com.ztspeech.weibo.sdk.renren.pay.view.PayRepairActivity: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: AlbumBean()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: AlbumBean(long)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: long getAid()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setAid(long)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.lang.String getUrl()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setUrl(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: long getUid()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setUid(long)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setName(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.util.Date getCreateTime()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setCreateTime(java.util.Date)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.util.Date getUpdateTime()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setUpdateTime(java.util.Date)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.lang.String getDescription()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setDescription(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.lang.String getLocation()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setLocation(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: int getSize()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setSize(int)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType getVisible()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setVisible(com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: int getCommentCount()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setCommentCount(int)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: com.ztspeech.weibo.sdk.renren.photos.AlbumType getType()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setType(com.ztspeech.weibo.sdk.renren.photos.AlbumType)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.util.List getPhotos()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void setPhotos(java.util.List)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void addPhoto(com.ztspeech.weibo.sdk.renren.photos.PhotoBean)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: int describeContents()
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.photos.AlbumBean: AlbumBean(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: AlbumCreateRequestParam()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: AlbumCreateRequestParam(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: void setName(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: java.lang.String getLocation()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: void setLocation(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: java.lang.String getDescription()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: void setDescription(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType getVisible()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: void setVisible(com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: AlbumCreateResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: void setAid(long)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: long getAid()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: int describeContents()
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean: AlbumCreateResponseBean(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: AlbumGetRequestParam()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: AlbumGetRequestParam(java.lang.Long)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: java.lang.Long getUid()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: void setUid(java.lang.Long)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: int getPage()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: void setPage(int)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: int getCount()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: void setCount(int)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: java.lang.String getAids()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: void setAids(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: AlbumGetResponseBean()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: AlbumGetResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: AlbumGetResponseBean(java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: java.util.List getAlbums()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: void setAlbums(java.util.List)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: int describeContents()
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean: AlbumGetResponseBean(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType EVERYONE
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType OWNER
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType FRIENDS
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType NETWORKS
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType PASSWORD
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: int getOunces()
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: java.lang.String getNames()
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType parse(int)
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType[] values()
com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType: com.ztspeech.weibo.sdk.renren.photos.AlbumPrivacyType valueOf(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.AlbumType
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType COMMON
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType MSS
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType UPLOAD
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType BIGHEAD
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType APPLICATION
com.ztspeech.weibo.sdk.renren.photos.AlbumType: int getOunces()
com.ztspeech.weibo.sdk.renren.photos.AlbumType: java.lang.String getNames()
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType parse(int)
com.ztspeech.weibo.sdk.renren.photos.AlbumType: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType[] values()
com.ztspeech.weibo.sdk.renren.photos.AlbumType: com.ztspeech.weibo.sdk.renren.photos.AlbumType valueOf(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.CreateAlbumActivity
com.ztspeech.weibo.sdk.renren.photos.CreateAlbumActivity: CreateAlbumActivity()
com.ztspeech.weibo.sdk.renren.photos.CreateAlbumActivity: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: PhotoBean()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: PhotoBean(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: long getPid()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setPid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String getFileName()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setFileName(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: long getAid()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setAid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: long getUid()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setUid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String getCaption()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setCaption(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.util.Date getCreateTime()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setCreateTime(java.util.Date)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: int getViewCount()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setViewCount(int)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: int getCommentCount()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setCommentCount(int)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String getUrlTiny()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setUrlTiny(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String getUrlHead()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setUrlHead(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String getUrlLarge()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setUrlLarge(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String getUrlMain()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setUrlMain(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: byte[] getContent()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void setContent(byte[])
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: int describeContents()
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.photos.PhotoBean: PhotoBean(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: java.lang.String CREATE_ALBUM_PERMISSION
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: java.lang.String UPLOAD_PHPTO_PERMISSION
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: java.lang.String GET_ALBUMS_PERMISSION
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: PhotoHelper(com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: void startCreateAlbumActivity(android.app.Activity)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: void startUploadPhotoActivity(android.app.Activity,java.io.File,java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: com.ztspeech.weibo.sdk.renren.photos.AlbumCreateResponseBean createAlbum(com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: void asyncCreateAlbum(com.ztspeech.weibo.sdk.renren.photos.AlbumCreateRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: com.ztspeech.weibo.sdk.renren.photos.AlbumGetResponseBean getAlbums(com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: void asyncGetAlbums(com.ztspeech.weibo.sdk.renren.photos.AlbumGetRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean uploadPhoto(java.io.File)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean uploadPhoto(com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam)
com.ztspeech.weibo.sdk.renren.photos.PhotoHelper: void asyncUploadPhoto(com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: int CAPTION_MAX_LENGTH
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: PhotoUploadRequestParam()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: PhotoUploadRequestParam(java.io.File)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: java.io.File getFile()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: void setFile(java.io.File)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: java.lang.String getCaption()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: void setCaption(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: long getAid()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: void setAid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: java.lang.String getPlace_id()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: void setPlace_id(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: PhotoUploadResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: long getPid()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setPid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: long getAid()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setAid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: long getUid()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setUid(long)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: java.lang.String getSrc()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setSrc(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: java.lang.String getSrc_small()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setSrc_small(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: java.lang.String getSrc_big()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setSrc_big(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: java.lang.String getCaption()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void setCaption(java.lang.String)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: int describeContents()
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.photos.PhotoUploadResponseBean: PhotoUploadResponseBean(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.photos.UploadPhotoActivity
com.ztspeech.weibo.sdk.renren.photos.UploadPhotoActivity: UploadPhotoActivity()
com.ztspeech.weibo.sdk.renren.photos.UploadPhotoActivity: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.status.StatusHelper
com.ztspeech.weibo.sdk.renren.status.StatusHelper: java.lang.String[] PUBLISH_STATUS_PERMISSIONS
com.ztspeech.weibo.sdk.renren.status.StatusHelper: StatusHelper(com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.status.StatusHelper: com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean publish(com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam)
com.ztspeech.weibo.sdk.renren.status.StatusHelper: void asyncPublish(java.util.concurrent.Executor,com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener,boolean)
com.ztspeech.weibo.sdk.renren.status.StatusHelper: void startStatusPubActivity(android.app.Activity,com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam)
com.ztspeech.weibo.sdk.renren.status.StatusHelper: void startStatusPubWidget(java.lang.String,android.app.Activity,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.status.StatusPubActivity
com.ztspeech.weibo.sdk.renren.status.StatusPubActivity: StatusPubActivity()
com.ztspeech.weibo.sdk.renren.status.StatusPubActivity: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.status.StatusPubActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.weibo.sdk.renren.status.StatusPubActivity: android.app.Dialog onCreateDialog(int)
com.ztspeech.weibo.sdk.renren.status.StatusPubActivity: void onStop()
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: int MAX_LENGTH
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: java.lang.String STATUS_LABEL
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: StatusSetRequestParam(java.lang.String)
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: StatusSetRequestParam(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: java.lang.String getStatus()
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: void setStatus(java.lang.String)
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam trim()
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: int describeContents()
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.status.StatusSetRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: int DEFAULT_RESULT
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: android.os.Parcelable$Creator CREATOR
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: StatusSetResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: StatusSetResponseBean(android.os.Parcel)
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: StatusSetResponseBean(int)
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: int getResult()
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: int describeContents()
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: void writeToParcel(android.os.Parcel,int)
com.ztspeech.weibo.sdk.renren.status.StatusSetResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.users.UserInfo
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_UID
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_NAME
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_SEX
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_STAR
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_ZIDOU
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_VIP
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_BIRTHDAY
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_EMAIL_HASH
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_TINYURL
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_HEADURL
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_MAINURL
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_HOMETOWN_LOCATION
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_WORK_INFO
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_UNIVERSITY_INFO
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String KEY_HS_INFO
com.ztspeech.weibo.sdk.renren.users.UserInfo: UserInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo: com.ztspeech.weibo.sdk.renren.users.UserInfo parse(org.json.JSONObject)
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setUid(long)
com.ztspeech.weibo.sdk.renren.users.UserInfo: long getUid()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setName(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setSex(int)
com.ztspeech.weibo.sdk.renren.users.UserInfo: int getSex()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setStar(int)
com.ztspeech.weibo.sdk.renren.users.UserInfo: int getStar()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setZidou(int)
com.ztspeech.weibo.sdk.renren.users.UserInfo: int getZidou()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setVip(int)
com.ztspeech.weibo.sdk.renren.users.UserInfo: int getVip()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setBirthday(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String getBirthday()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setEmailHash(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String getEmailHash()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setTinyurl(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String getTinyurl()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setHeadurl(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String getHeadurl()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setMainurl(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String getMainurl()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setHomeTownLocation(java.util.ArrayList)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.util.ArrayList getHomeTownLocation()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setWorkInfo(java.util.ArrayList)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.util.ArrayList getWorkInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setUniversityInfo(java.util.ArrayList)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.util.ArrayList getUniversityInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo: void setHsInfo(java.util.ArrayList)
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.util.ArrayList getHsInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: java.lang.String KEY_NAME
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: java.lang.String KEY_GRAD_YEAR
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: UserInfo$HSInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: java.util.ArrayList parse(org.json.JSONArray)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo parse(org.json.JSONObject)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: void setName(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: void setGradYear(long)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: long getGradYear()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HSInfo: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String KEY_COUNTRY
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String KEY_PROVINCE
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String KEY_CITY
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: UserInfo$HomeTownLocation()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.util.ArrayList parse(org.json.JSONArray)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation parse(org.json.JSONObject)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: void setCountry(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String getCountry()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: void setProvince(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String getProvince()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: void setCity(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String getCity()
com.ztspeech.weibo.sdk.renren.users.UserInfo$HomeTownLocation: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.lang.String KEY_NAME
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.lang.String KEY_YEAR
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.lang.String KEY_DEPARTMENT
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: UserInfo$UniversityInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.util.ArrayList parse(org.json.JSONArray)
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo parse(org.json.JSONObject)
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: void setName(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.lang.String getName()
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: void setYear(long)
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: long getYear()
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: void setDepartment(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.lang.String getDepartment()
com.ztspeech.weibo.sdk.renren.users.UserInfo$UniversityInfo: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String KEY_COMPANY_NAME
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String KEY_DESCRIPTION
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String KEY_START_DATE
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String KEY_END_DATE
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: UserInfo$WorkInfo()
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.util.ArrayList parse(org.json.JSONArray)
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo parse(org.json.JSONObject)
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: void setCompanyName(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String getCompanyName()
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: void setDescription(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String getDescription()
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: void setStartDate(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String getStartDate()
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: void setEndDate(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String getEndDate()
com.ztspeech.weibo.sdk.renren.users.UserInfo$WorkInfo: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoHelper
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoHelper: UsersGetInfoHelper(com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoHelper: com.ztspeech.weibo.sdk.renren.users.UsersGetInfoResponseBean getUsersInfo(com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam)
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoHelper: void asyncGetUsersInfo(java.util.concurrent.Executor,com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam,com.ztspeech.weibo.sdk.renren.common.AbstractRequestListener)
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: java.lang.String FIELDS_ALL
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: java.lang.String FIELD_DEFAULT
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: UsersGetInfoRequestParam(java.lang.String[])
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: UsersGetInfoRequestParam(java.lang.String[],java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: java.lang.String[] getUids()
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: void setUids(java.lang.String[])
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: java.lang.String getFields()
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: void setFields(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoRequestParam: android.os.Bundle getParams()
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoResponseBean
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoResponseBean: UsersGetInfoResponseBean(java.lang.String)
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoResponseBean: java.util.ArrayList getUsersInfo()
com.ztspeech.weibo.sdk.renren.users.UsersGetInfoResponseBean: java.lang.String toString()
com.ztspeech.weibo.sdk.renren.view.ConnectButton
com.ztspeech.weibo.sdk.renren.view.ConnectButton: ConnectButton(android.content.Context)
com.ztspeech.weibo.sdk.renren.view.ConnectButton: ConnectButton(android.content.Context,android.util.AttributeSet)
com.ztspeech.weibo.sdk.renren.view.ConnectButton: ConnectButton(android.content.Context,android.util.AttributeSet,int)
com.ztspeech.weibo.sdk.renren.view.ConnectButton: void init(com.ztspeech.weibo.sdk.renren.Renren,android.app.Activity)
com.ztspeech.weibo.sdk.renren.view.ConnectButton: void onClick(android.view.View)
com.ztspeech.weibo.sdk.renren.view.ConnectButton: void setConnectButtonListener(com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener)
com.ztspeech.weibo.sdk.renren.view.ConnectButton: void updateButtonImage()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener: void onLogined(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener: void onCancelLogin()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener: void onLogouted()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener: void onCancelAuth(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener: void onRenrenAuthError(com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener: void onException(java.lang.Exception)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: ConnectButtonListenerHelper()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void addConnectButtonListener(com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: boolean removeConnectButtonListener(com.ztspeech.weibo.sdk.renren.view.ConnectButtonListener)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void onException(java.lang.Exception)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void onLogined(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void onLogouted()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void onRenrenAuthError(com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void onCancelAuth(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper: void onCancelLogin()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: ConnectButtonListenerHelper$DefaultConnectButtonListener()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: void onLogined(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: void onLogouted()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: void onException(java.lang.Exception)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: void onCancelAuth(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: void onCancelLogin()
com.ztspeech.weibo.sdk.renren.view.ConnectButtonListenerHelper$DefaultConnectButtonListener: void onRenrenAuthError(com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError)
com.ztspeech.weibo.sdk.renren.view.ProfileNameView
com.ztspeech.weibo.sdk.renren.view.ProfileNameView: ProfileNameView(android.content.Context)
com.ztspeech.weibo.sdk.renren.view.ProfileNameView: ProfileNameView(android.content.Context,android.util.AttributeSet)
com.ztspeech.weibo.sdk.renren.view.ProfileNameView: ProfileNameView(android.content.Context,android.util.AttributeSet,int)
com.ztspeech.weibo.sdk.renren.view.ProfileNameView: void setUid(long,com.ztspeech.weibo.sdk.renren.Renren)
com.ztspeech.weibo.sdk.renren.view.ProfilePhotoView
com.ztspeech.weibo.sdk.renren.view.ProfilePhotoView: ProfilePhotoView(android.content.Context)
com.ztspeech.weibo.sdk.renren.view.ProfilePhotoView: ProfilePhotoView(android.content.Context,android.util.AttributeSet)
com.ztspeech.weibo.sdk.renren.view.ProfilePhotoView: void setUid(long)
com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener
com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener: void onComplete(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener: void onRenrenAuthError(com.ztspeech.weibo.sdk.renren.exception.RenrenAuthError)
com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener: void onCancelLogin()
com.ztspeech.weibo.sdk.renren.view.RenrenAuthListener: void onCancelAuth(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.RenrenDialog
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: java.lang.String mUrl
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener mListener
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: android.webkit.WebView webView
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: RenrenDialog(android.content.Context,java.lang.String,com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener)
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: RenrenDialog(android.content.Context,java.lang.String,java.lang.String,com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener)
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: RenrenDialog(android.content.Context,java.lang.String,com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener,boolean)
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: void onCreate(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: boolean onKeyDown(int,android.view.KeyEvent)
com.ztspeech.weibo.sdk.renren.view.RenrenDialog: void onStop()
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: int ACTION_UNPROCCESS
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: int ACTION_PROCCESSED
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: int ACTION_DIALOG_PROCCESS
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: int onPageBegin(java.lang.String)
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: boolean onPageStart(java.lang.String)
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: void onPageFinished(java.lang.String)
com.ztspeech.weibo.sdk.renren.view.RenrenDialogListener: void onReceivedError(int,java.lang.String,java.lang.String)
com.ztspeech.weibo.sdk.renren.view.RenrenFeedListener
com.ztspeech.weibo.sdk.renren.view.RenrenFeedListener: void onComplete(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.RenrenFeedListener: void onRenrenError(com.ztspeech.weibo.sdk.renren.exception.RenrenError)
com.ztspeech.weibo.sdk.renren.view.RenrenFeedListener: void onError(java.lang.Exception)
com.ztspeech.weibo.sdk.renren.view.RenrenFeedListener: void onCancel()
com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener
com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener: void onComplete(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener: void onError(android.os.Bundle)
com.ztspeech.weibo.sdk.renren.view.RenrenWidgetListener: void onCancel(android.os.Bundle)
org.apache.http.entity.mime.FormBodyPart
org.apache.http.entity.mime.FormBodyPart: FormBodyPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody)
org.apache.http.entity.mime.FormBodyPart: java.lang.String getName()
org.apache.http.entity.mime.FormBodyPart: org.apache.http.entity.mime.content.ContentBody getBody()
org.apache.http.entity.mime.FormBodyPart: org.apache.http.entity.mime.Header getHeader()
org.apache.http.entity.mime.FormBodyPart: void addField(java.lang.String,java.lang.String)
org.apache.http.entity.mime.FormBodyPart: void generateContentDisp(org.apache.http.entity.mime.content.ContentBody)
org.apache.http.entity.mime.FormBodyPart: void generateContentType(org.apache.http.entity.mime.content.ContentBody)
org.apache.http.entity.mime.FormBodyPart: void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody)
org.apache.http.entity.mime.Header
org.apache.http.entity.mime.Header: Header()
org.apache.http.entity.mime.Header: void addField(org.apache.http.entity.mime.MinimalField)
org.apache.http.entity.mime.Header: java.util.List getFields()
org.apache.http.entity.mime.Header: org.apache.http.entity.mime.MinimalField getField(java.lang.String)
org.apache.http.entity.mime.Header: java.util.List getFields(java.lang.String)
org.apache.http.entity.mime.Header: int removeFields(java.lang.String)
org.apache.http.entity.mime.Header: void setField(org.apache.http.entity.mime.MinimalField)
org.apache.http.entity.mime.Header: java.util.Iterator iterator()
org.apache.http.entity.mime.Header: java.lang.String toString()
org.apache.http.entity.mime.HttpMultipart
org.apache.http.entity.mime.HttpMultipart: HttpMultipart(java.lang.String,java.nio.charset.Charset,java.lang.String,org.apache.http.entity.mime.HttpMultipartMode)
org.apache.http.entity.mime.HttpMultipart: HttpMultipart(java.lang.String,java.nio.charset.Charset,java.lang.String)
org.apache.http.entity.mime.HttpMultipart: HttpMultipart(java.lang.String,java.lang.String)
org.apache.http.entity.mime.HttpMultipart: java.lang.String getSubType()
org.apache.http.entity.mime.HttpMultipart: java.nio.charset.Charset getCharset()
org.apache.http.entity.mime.HttpMultipart: org.apache.http.entity.mime.HttpMultipartMode getMode()
org.apache.http.entity.mime.HttpMultipart: java.util.List getBodyParts()
org.apache.http.entity.mime.HttpMultipart: void addBodyPart(org.apache.http.entity.mime.FormBodyPart)
org.apache.http.entity.mime.HttpMultipart: java.lang.String getBoundary()
org.apache.http.entity.mime.HttpMultipart: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.HttpMultipart: long getTotalLength()
org.apache.http.entity.mime.HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode: org.apache.http.entity.mime.HttpMultipartMode STRICT
org.apache.http.entity.mime.HttpMultipartMode: org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE
org.apache.http.entity.mime.HttpMultipartMode: org.apache.http.entity.mime.HttpMultipartMode[] values()
org.apache.http.entity.mime.HttpMultipartMode: org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String)
org.apache.http.entity.mime.MIME
org.apache.http.entity.mime.MIME: java.lang.String CONTENT_TYPE
org.apache.http.entity.mime.MIME: java.lang.String CONTENT_TRANSFER_ENC
org.apache.http.entity.mime.MIME: java.lang.String CONTENT_DISPOSITION
org.apache.http.entity.mime.MIME: java.lang.String ENC_8BIT
org.apache.http.entity.mime.MIME: java.lang.String ENC_BINARY
org.apache.http.entity.mime.MIME: java.nio.charset.Charset DEFAULT_CHARSET
org.apache.http.entity.mime.MIME: MIME()
org.apache.http.entity.mime.MinimalField
org.apache.http.entity.mime.MinimalField: java.lang.String getName()
org.apache.http.entity.mime.MinimalField: java.lang.String getBody()
org.apache.http.entity.mime.MinimalField: java.lang.String toString()
org.apache.http.entity.mime.MultipartEntity
org.apache.http.entity.mime.MultipartEntity: MultipartEntity(org.apache.http.entity.mime.HttpMultipartMode,java.lang.String,java.nio.charset.Charset)
org.apache.http.entity.mime.MultipartEntity: MultipartEntity(org.apache.http.entity.mime.HttpMultipartMode)
org.apache.http.entity.mime.MultipartEntity: MultipartEntity()
org.apache.http.entity.mime.MultipartEntity: java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset)
org.apache.http.entity.mime.MultipartEntity: java.lang.String generateBoundary()
org.apache.http.entity.mime.MultipartEntity: void addPart(org.apache.http.entity.mime.FormBodyPart)
org.apache.http.entity.mime.MultipartEntity: void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody)
org.apache.http.entity.mime.MultipartEntity: boolean isRepeatable()
org.apache.http.entity.mime.MultipartEntity: boolean isChunked()
org.apache.http.entity.mime.MultipartEntity: boolean isStreaming()
org.apache.http.entity.mime.MultipartEntity: long getContentLength()
org.apache.http.entity.mime.MultipartEntity: org.apache.http.Header getContentType()
org.apache.http.entity.mime.MultipartEntity: org.apache.http.Header getContentEncoding()
org.apache.http.entity.mime.MultipartEntity: void consumeContent()
org.apache.http.entity.mime.MultipartEntity: java.io.InputStream getContent()
org.apache.http.entity.mime.MultipartEntity: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.content.AbstractContentBody
org.apache.http.entity.mime.content.AbstractContentBody: AbstractContentBody(java.lang.String)
org.apache.http.entity.mime.content.AbstractContentBody: java.lang.String getMimeType()
org.apache.http.entity.mime.content.AbstractContentBody: java.lang.String getMediaType()
org.apache.http.entity.mime.content.AbstractContentBody: java.lang.String getSubType()
org.apache.http.entity.mime.content.ByteArrayBody
org.apache.http.entity.mime.content.ByteArrayBody: ByteArrayBody(byte[],java.lang.String,java.lang.String)
org.apache.http.entity.mime.content.ByteArrayBody: ByteArrayBody(byte[],java.lang.String)
org.apache.http.entity.mime.content.ByteArrayBody: java.lang.String getFilename()
org.apache.http.entity.mime.content.ByteArrayBody: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.content.ByteArrayBody: java.lang.String getCharset()
org.apache.http.entity.mime.content.ByteArrayBody: java.lang.String getTransferEncoding()
org.apache.http.entity.mime.content.ByteArrayBody: long getContentLength()
org.apache.http.entity.mime.content.ContentBody
org.apache.http.entity.mime.content.ContentBody: java.lang.String getFilename()
org.apache.http.entity.mime.content.ContentBody: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.content.ContentDescriptor
org.apache.http.entity.mime.content.ContentDescriptor: java.lang.String getMimeType()
org.apache.http.entity.mime.content.ContentDescriptor: java.lang.String getMediaType()
org.apache.http.entity.mime.content.ContentDescriptor: java.lang.String getSubType()
org.apache.http.entity.mime.content.ContentDescriptor: java.lang.String getCharset()
org.apache.http.entity.mime.content.ContentDescriptor: java.lang.String getTransferEncoding()
org.apache.http.entity.mime.content.ContentDescriptor: long getContentLength()
org.apache.http.entity.mime.content.FileBody
org.apache.http.entity.mime.content.FileBody: FileBody(java.io.File,java.lang.String,java.lang.String,java.lang.String)
org.apache.http.entity.mime.content.FileBody: FileBody(java.io.File,java.lang.String,java.lang.String)
org.apache.http.entity.mime.content.FileBody: FileBody(java.io.File,java.lang.String)
org.apache.http.entity.mime.content.FileBody: FileBody(java.io.File)
org.apache.http.entity.mime.content.FileBody: java.io.InputStream getInputStream()
org.apache.http.entity.mime.content.FileBody: void writeTo(java.io.OutputStream,int)
org.apache.http.entity.mime.content.FileBody: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.content.FileBody: java.lang.String getTransferEncoding()
org.apache.http.entity.mime.content.FileBody: java.lang.String getCharset()
org.apache.http.entity.mime.content.FileBody: long getContentLength()
org.apache.http.entity.mime.content.FileBody: java.lang.String getFilename()
org.apache.http.entity.mime.content.FileBody: java.io.File getFile()
org.apache.http.entity.mime.content.InputStreamBody
org.apache.http.entity.mime.content.InputStreamBody: InputStreamBody(java.io.InputStream,java.lang.String,java.lang.String)
org.apache.http.entity.mime.content.InputStreamBody: InputStreamBody(java.io.InputStream,java.lang.String)
org.apache.http.entity.mime.content.InputStreamBody: java.io.InputStream getInputStream()
org.apache.http.entity.mime.content.InputStreamBody: void writeTo(java.io.OutputStream,int)
org.apache.http.entity.mime.content.InputStreamBody: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.content.InputStreamBody: java.lang.String getTransferEncoding()
org.apache.http.entity.mime.content.InputStreamBody: java.lang.String getCharset()
org.apache.http.entity.mime.content.InputStreamBody: long getContentLength()
org.apache.http.entity.mime.content.InputStreamBody: java.lang.String getFilename()
org.apache.http.entity.mime.content.StringBody
org.apache.http.entity.mime.content.StringBody: org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset)
org.apache.http.entity.mime.content.StringBody: org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset)
org.apache.http.entity.mime.content.StringBody: org.apache.http.entity.mime.content.StringBody create(java.lang.String)
org.apache.http.entity.mime.content.StringBody: StringBody(java.lang.String,java.lang.String,java.nio.charset.Charset)
org.apache.http.entity.mime.content.StringBody: StringBody(java.lang.String,java.nio.charset.Charset)
org.apache.http.entity.mime.content.StringBody: StringBody(java.lang.String)
org.apache.http.entity.mime.content.StringBody: java.io.Reader getReader()
org.apache.http.entity.mime.content.StringBody: void writeTo(java.io.OutputStream,int)
org.apache.http.entity.mime.content.StringBody: void writeTo(java.io.OutputStream)
org.apache.http.entity.mime.content.StringBody: java.lang.String getTransferEncoding()
org.apache.http.entity.mime.content.StringBody: java.lang.String getCharset()
org.apache.http.entity.mime.content.StringBody: long getContentLength()
org.apache.http.entity.mime.content.StringBody: java.lang.String getFilename()
test.testapi.ApiTestActivity
test.testapi.ApiTestActivity: ApiTestActivity()
test.testapi.ApiTestActivity: void onCreate(android.os.Bundle)
test.testapi.ApiTestActivity: void onClick(android.view.View)
test.testapi.ApiTestActivity: void a(boolean)
test.testapi.ApiTestActivity: void a(java.lang.String)
test.testapi.ApiTestActivity: byte[] a(short[])
